#+FILE_NAME: syllabi
#+HUGO_SECTION: docs/updates
#+HTML_CONTAINER: div
#+HTML_CONTAINER_CLASS: smol-table
#+TITLE: Syllabi

#+attr_html: :class book-hint warning small-text
#+begin_quote
**Why the titles are not subject names but some weird goals kind of thing?**

I always had issues relating what I am studying to how I am going to use it. A foolish attempt to resolve this is to mention =the why of the syllabus= instead of =the syllabus name(subject)=. Also it's easier to tell the why then to assign a subject because the resources I have under them are somewhat unstructured.
#+end_quote

#+attr_html: :class book-hint info small-text
#+begin_quote
Whenever I have a new information resource, I categorize it at entry. It can go under any one of these:
- This page, =/docs/updates/syllabus=
- A semi-categorized dump file called the [[https://github.com/geekodour/notes/blob/main/org/technical_learning_resources.org][technical_learning_resources]]
- The [[file:anti_lib.org::*Posts][anti_lib]]
- The full [[/syllabus.html][syllabus]]

I try my best to not repeat links across these pages. I have not setup any automated link checker for either duplication/backlinks/linkrots etc.
#+end_quote

This is my syllabi created in October'22.

* üíº HB01: How businesses works
** Understand basic economics
- [ ] The personal MBA (Book)
- [ ] Economics in One Lesson (Book)
- [ ] An-Introduction-to-Stock-Options-for-the-Tech-Entrepreneur-or-Startup-Employee
- [ ] [[https://www.catem.be/app/sd-explainer/][Supply & Demand: An interactive explainer]]
- [ ] [[https://mru.org/][Marginal Revolution University]] (Course)
- [ ] [[https://in.coursera.org/learn/financial-markets-global?#syllabus][Financial Markets]] (Course)
- [ ] [[https://in.coursera.org/learn/microeconomics-part1/][Microeconomics: The Power of Markets]] (Course)
** Additional cherry for businesses
- [ ] [[https://www.notion.so/geekodour/Venture-Capital-5e4dc7e23a9d42068d534f7db447dffd ][Understand how VCs work]]
- [ ] [[https://www.lennysnewsletter.com/p/startup-to-exit-lessons-from-a-first][Startup to exit: Lessons from a first-time founder]]
- [ ] [[https://businessofsoftware.org/2011/03/hello-ladies-patrick-mckenzie-at-business-of-software-2010-marketing-to-minorities/][Marketing to Minorities | Patrick McKenzie | BoS 2010]]
- [ ] [[https://www.joelonsoftware.com/2002/06/12/strategy-letter-v/][Strategy Letter V ‚Äì Joel on Software]]
- [ ] [[https://news.ycombinator.com/item?id=33354858][Ask HN: Learning about fundraising as first-time tech founders | Hacker News]]
- [ ] [[https://world.hey.com/dhh/the-bubble-has-popped-for-unprofitable-software-companies-2a0a5f57][The bubble has popped for unprofitable software companies]]
- [ ] [[https://news.ycombinator.com/item?id=34368601][Working for a Dating Website (2015) | Hacker News]]
** Understand how to start
- [ ] The Minimalist Entrepreneur (Book)
- [ ] MAKE Bootstrapper Handbook (Book)
- [ ] [[https://www.julian.com/guide/startup/intro][Startup Handbook by Julian Shapiro]]
- [ ] [[https://www.youtube.com/watch?v=EZxP0i9ah8E][Paul Buchheit at Startup School 08 - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=i3d1asTrWUQ][Tyler tringas (StoreMapper): Micro Saas - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=m3nb_Qj3mRA][Bootstrapping Side Projects To Profit by Pieter Levels]]
- [ ] [[https://www.youtube.com/watch?v=0CDXJ6bMkMY][David Heinemeier Hansson at Startup School 08 - YouTube]]
* [#A] ü•ï HB02: Become more confident with problem solving
** Revisit the basics
- [ ] Grokking Algorithms (Book)
- [ ] How to solve it (Book)
- [ ] [[https://www3.cs.stonybrook.edu/~skiena/373/videos/][Skiena's Algorithms]] (Course)
- [ ] [[https://github.com/emirpasic/gods][GoDS (Go Data Structures)]]
** Deal with long term fears
- [ ] How to prove it (Book)
- [ ] [[https://avikdas.com/2019/04/15/a-graphical-introduction-to-dynamic-programming.html][A graphical introduction to dynamic programming]]
- [ ] Graph
  - [ ] [[https://pathfinding-visualizer-nu.vercel.app/][Pathfinding Visualizer]] : Try making this for yourself
- [ ] Recursion
  - [ ] [[https://news.ycombinator.com/item?id=34542559][Ask HN: Is Recursion Worth It? | Hacker News]]
  - [ ] [[https://eklitzke.org/how-tail-call-optimization-works][How Tail Call Optimization Works]]
  - [ ] [[https://web.archive.org/web/20160217105600/https://anupcowkur.com/posts/master-theorem-simplified/][Master Theorem Simplified ‚Äì Anup Cowkur]]
  - [ ] [[https://stackoverflow.com/questions/14268749/how-does-structural-recursion-differ-from-generative-recursion][How does structural recursion differ from generative recursion?]]
  - [ ] [[https://parentheticallyspeaking.org/articles/how-not-to-teach-recursion/][How Not to Teach Recursion]]
  - [ ] [[https://cestlaz.github.io/post/recursion/][On Teaching Recursion - C'est la Z]]
  - [ ] [[https://notes.eatonphil.com/practicing-recursion.html][How to get better at recursion | notes.eatonphil.com]]
  - [ ] [[https://github.com/JS-Challenges/recursion-prompts][JS-Challenges/recursion-prompts]]
* [#A] üÜò HB03: Get back at basic math
** Get introduced
- [ ] Do basic school math for 7 days straight from KhanAcademy (Course)
- [ ] [[https://www.people.vcu.edu/~dcranston/490/handouts/math-read.html][How to Read Mathematics]]
- [ ] [[https://www.susanrigetti.com/math][Math ‚Äî Susan Rigetti]]
- [ ] [[https://nrich.maths.org/number-theory][An Introduction to Number Theory]]
** Resurface basic comp sci math
- [ ] [[https://pimbook.org/][A Programmer's Introduction to Mathematics]] (Book)
- [ ] [[https://cims.nyu.edu/~regev/teaching/discrete_math_fall_2005/dmbook.pdf][Discrete Mathematics - L. Lov ÃÅasz and K. Vesztergombi]] (Book)
** Permutations and numbers
- [ ] [[https://www.goodreads.com/book/show/1575542.Discrete_and_Combinatorial_Mathematics?ac=1&from_search=true&qid=bp3bVdDUBk&rank=1][Discrete and Combinatorial Mathematics by Ralph P. Grimaldi]] (Book)
- [ ] [[https://www.goodreads.com/book/show/1586807.A_Friendly_Introduction_to_Number_Theory][A Friendly Introduction to Number Theory by Joseph H. Silverman]] (Book)
** Linear Algebra
- [ ] Introduction to LA - GS (Book)
- [ ] [[https://ocw.mit.edu/courses/18-06-linear-algebra-spring-2010/][Linear Algebra]] (Course)
- [ ] [[https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab][Essence of linear algebra - YouTube]] (Course)
- [ ] [[https://linear.axler.net/LADRvideos.html][LA done right]] (Book)
* [#A] üåé HB04: Get a grip over Web Development
** Get your HTTP basics right
- [ ] [[https://www.mnot.net/blog/2022/06/06/http-core][A New Definition of HTTP]]
- [ ] [[https://howhttps.works/][How HTTPS works - How HTTPS works]]
- [ ] [[https://blog.cloudflare.com/the-state-of-http-in-2022/][The state of HTTP in 2022]]
- [ ] [[https://news.ycombinator.com/item?id=33280605][The HTTP crash course nobody asked for | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=34410072][How does it know I want CSV? ‚Äì An HTTP trick | Hacker News]]
- [ ] [[https://quadratic.fm/p/how-meta-microsoft-google-github][How Meta, Google, Github and others leverage HTTP conditional requests]]
- [ ] [[https://ananthakumaran.in/2022/11/12/trace-http-requests.html][Tracing HTTP Requests with tcpflow ¬∑ Anantha Kumaran]]
- [ ] [[https://en.wikipedia.org/wiki/Server-sent_events][Server-sent events - Wikipedia]]
  - [ ] [[https://lobste.rs/s/idfifu/server_sent_events_alternative][Server-Sent Events: the alternative to WebSockets you should be using | Lobsters]]
- [ ] [[https://en.wikipedia.org/wiki/Server_Name_Indication][Server Name Indication - Wikipedia]]
  - [ ] [[https://www.agwa.name/blog/post/writing_an_sni_proxy_in_go][Writing an SNI Proxy in 115 Lines of Go]]
- [ ] [[https://www.rfc-editor.org/rfc/rfc9308.html][RFC 9308: Applicability of the QUIC Transport Protocol]]
- [ ] [[https://blog.appcanary.com/2017/http-security-headers.html][Everything you need to know about HTTP security headers]]
- [ ] [[https://www.fastly.com/blog/improve-http-structured-headers][Improving HTTP with structured header fields | Fastly]]
- [ ] [[https://textslashplain.com/2018/02/14/understanding-the-limitations-of-https/][Understanding the Limitations of HTTPS ‚Äì text/plain]]
- [ ] [[https://en.wikipedia.org/wiki/QUIC][QUIC - Wikipedia]]
** Get your web security right
- [ ] [[https://web.stanford.edu/class/cs253/][CS253 - Web Security]] (Course)
- [ ] [[https://www.cloudflare.com/learning/ssl/what-happens-in-a-tls-handshake/][What happens in a TLS handshake? | SSL handshake | Cloudflare]]
- [ ] [[https://httptoolkit.tech/blog/cache-your-cors/][Cache your CORS, for performance & profit | HTTP Toolkit]]
- [ ] [[https://github.com/simonw/public-notes/issues/2][Figuring out the state of the art in CSRF protection]]
- [ ] [[https://github.com/pillarjs/understanding-csrf][What are CSRF tokens and how do they work?]]
- [ ] [[https://httptoolkit.tech/blog/public-cdn-risks/][Public CDNs Are Useless and Dangerous | HTTP Toolkit]]
- [ ] [[https://scotthelme.co.uk/i-turned-on-csp-and-all-i-got-was-this-crappy-lawsuit/][I turned on CSP and all I got was this crappy lawsuit!]]
** React and Typescript way to mastery
- Javascript
  - [X] [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Overview][JavaScript language overview - JavaScript | MDN]]
  - [X] [[https://learnxinyminutes.com/docs/javascript/][Learn javascript in Y Minutes]]
  - [ ] [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects][Standard built-in objects - JavaScript | MDN]]
  - [ ] [[https://eloquentjavascript.net/][Eloquent JavaScript]]
  - [ ] [[https://bonsaiden.github.io/JavaScript-Garden/#intro][JavaScript Garden]]
  - [ ] [[https://turriate.com/articles/modern-javascript-everything-you-missed-over-10-years][Modern Javascript: Everything you missed over the last 10 years]]
  - [ ] [[https://www.taniarascia.com/asynchronous-javascript-event-loop-callbacks-promises-async-await/][Understanding the Event Loop, Callbacks, Promises, and Async/Await in JS]]
- React
  - [X] [[https://reactjs.org/tutorial/tutorial.html][Tutorial: Intro to React ‚Äì React]]
  - [ ] [[https://prateeksurana.me/blog/future-of-rendering-in-react/][The future of rendering in React]]
- [X] State Management
  - [X] Client state
    - [X] [[https://redux.js.org/][Redux - A predictable state container for JavaScript apps]]
    - [X] [[https://redux-toolkit.js.org/][Redux Toolkit | Redux Toolkit]]
  - [X] Server state
    - [X] [[https://tanstack.com/query/v4/docs/comparison?from=reactQueryV3&original=https%3A%2F%2Freact-query-v3.tanstack.com%2Fcomparison][Comparison | React Query vs SWR vs Apollo vs RTK Query vs React Router]]
    - [X] [[https://blog.logrocket.com/swr-vs-tanstack-query-react/][Caching clash: SWR vs. TanStack Query for React - LogRocket Blog]]
- Typescript
  - [ ] [[https://react-typescript-cheatsheet.netlify.app/][React TypeScript Cheatsheets]]
  - [ ] [[https://github.com/type-challenges/type-challenges][type-challenges/type-challenges]]
  - [ ] [[https://www.totaltypescript.com/tutorials/beginners-typescript][Beginner's TypeScript Tutorial | Total TypeScript]]
  - [ ] [[https://www.robinwieruch.de/javascript-monorepos/][Monorepos in JavaScript & TypeScript]]
** Get a hold of web engineering
- [ ] High Performance Browser Networking (Book)
- [ ] Learn how to use web developer tools
- [ ] [[https://blog.sesse.net/blog/tech/2022-12-27-00-07_the_ultimate_single_page_app.html][The ultimate single-page app]]
- [ ] [[https://www.marcobehler.com/guides/load-testing][Load Testing: An Unorthodox Guide]]
- [ ] [[https://jfhr.me/optimizing-images-with-the-html-picture-tag/][Optimizing images with the HTML picture tag | jfhr]]
- [ ] [[https://www.mnot.net/cache_docs/][Caching Tutorial for Web Authors and Webmasters]]
- [ ] Browsers
  - [ ] [[https://taligarsiel.com/Projects/howbrowserswork1.htm][How browsers work]]
  - [ ] [[https://cerebralab.com/The_universal_VM_we_call_browser][The universal VM we call browser]]
- [ ] Web-workers
  - [ ] [[https://github.com/deebloo/things-you-can-do-in-a-web-worker][deebloo/things-you-can-do-in-a-web-worker]]
- [ ] Web-sockets
  - [ ] [[https://www.mnot.net/blog/2022/02/20/websockets][Server-Sent Events, WebSockets, and HTTP]]
  - [ ] [[https://stackoverflow.blog/2019/12/18/websockets-for-fun-and-profit/][WebSockets for fun and profit - Stack Overflow Blog]]
  - [ ] [[https://cookie.engineer/weblog/articles/implementers-guide-to-websockets.html][Implementer's Guide to WebSockets - Cookie Engineer's Web Log]]
  - [ ] [[https://news.ycombinator.com/item?id=29893242][The WebSocket Handbook | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=31925145][Ask HN: How do you scale WebSocket? | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=29651447][Woe be unto you for using a WebSocket | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=32634038][Writing a toy WebSocket server from scratch | Hacker News]]
- [ ] Cookies
  - [ ] [[https://stormpath.com/blog/cookies-are-awesome-free-cookies][Recipe: The Best Darn HTTP Cookies]]
  - [ ] [[https://blog.tomayac.com/2022/08/30/things-not-available-when-someone-blocks-all-cookies/][Things not available when someone blocks all cookies]]
  - [ ] [[https://www.conradakunga.com/blog/what-do-you-actually-agree-to-when-you-accept-all-cookies/][What Do You Actually Agree To When You Accept All Cookies]]
** Time for Webassembly
- [ ] [[https://brunoluiz.net/blog/2022/aug/imagewand-privacy-first-image-conversion-experiment-with-golang-and-wasm/][ImageWand: privacy-first image conversion experiment with Golang & WASM]]
- [ ] [[http://troubles.md/wasm-is-not-a-stack-machine/][WebAssembly Troubles part 1: WebAssembly Is Not a Stack Machine]]
- [ ] [[https://xeiaso.net/talks/wasm-abi][The Go WebAssembly ABI at a Low Level - Xe]]
- [ ] [[https://snarky.ca/webassembly-and-its-platform-targets/][WebAssembly and its platform targets]]
** Other experiments with web that are worth
- [ ] [[https://news.ycombinator.com/item?id=32518211][The web is a harsh manager | Hacker News]]
- [ ] [[https://darekkay.com/blog/static-site-comments/][Various ways to include comments on your static site]]
- [ ] [[https://blog.jim-nielsen.com/2022/website-fidelity/][Website Fidelity - Jim Nielsen‚Äôs Blog]]
- [ ] [[https://news.ycombinator.com/item?id=33218439][Moving from React to htmx | Hacker News]]
* üêÇ HB05: Computer graphics and Creative Programming
** Learn basics of computer graphics
- [ ] [[https://graphics.cs.utah.edu/courses/cs4600/fall2022/][CS 4600 - Fall 2022 - Introduction to Computer Graphics]] (Course)
- [ ] [[https://graphics.cs.utah.edu/courses/cs6610/spring2022/][CS 5610/6610 - Interactive Computer Graphics]] (Course)
- [ ] [[https://thebookofshaders.com/][The Book of Shaders]] (Book)
- [ ] [[https://learnopengl.com/Introduction][LearnOpenGL - Introduction]]  (Book)
- [ ] [[http://www.e-cartouche.ch/content_reg/cartouche/interactiv/en/html/index.html][Animation and Interactivity]]
** Image manipulation
- [ ] [[https://zulko.github.io/blog/2014/09/20/vector-animations-with-python/][Vector animations with Python]]
** ThreeJS
- [ ] [[https://sbcode.net/threejs/][Three.js Tutorials]]
- [ ] [[https://www.youtube.com/watch?v=DPl34H2ISsk][I wish I knew this before using React Three Fiber]]
- [ ] [[https://github.com/pmndrs/drei][GitHub - pmndrs/drei: ü•â useful helpers for react-three-fiber]]
- [ ] [[https://www.youtube.com/watch?v=Isr-hIveUK0][React Three Fiber Camera's Explained]]
- [ ] [[https://www.youtube.com/watch?v=FGG0EeMNUl0][Build a 3D World in React with Three.js - {React Three Fiber Tutorial}]]
- [ ] [[https://blog.maximeheckel.com/posts/the-magical-world-of-particles-with-react-three-fiber-and-shaders/][The magical world of Particles with React Three Fiber and Shaders]]
** CanvasAPI and Web Animations
- [ ] [[https://web.dev/learn/css/][Learn CSS]]
- [ ] [[https://developer.mozilla.org/en-US/docs/Web/Guide/Graphics][Graphics on the Web - Developer guides | MDN]]
- [ ] [[https://alain.xyz/blog/raw-webgpu][Raw WebGPU]]
- [ ] [[https://surma.dev/things/webgpu/][WebGPU ‚Äî All of the cores, none of the canvas]]
- [ ] [[https://web.dev/animations-overview/][Why are some animations slow?]]
*** Framer Motion
- [ ] [[https://blog.maximeheckel.com/posts/framer-motion-layout-animations/][Everything about Framer Motion layout animations]]
- [ ] [[https://blog.maximeheckel.com/posts/advanced-animation-patterns-with-framer-motion/][Advanced animation patterns with Framer Motion]]
- [ ] [[https://egghead.io/blog/how-to-animate-elements-when-in-view-on-scroll-with-framer-motion][How to Animate Elements When in View on Scroll with Framer Motion]]
- [ ] [[https://www.nan.fyi/magic-motion][Inside Framer's Magic Motion]]
- [ ] [[https://www.youtube.com/watch?v=lpywNeB3EnU][Get a sneak peek of Framer Motion Recipes! - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=adTm3srZw6E][Learn Framer Motion: Build a complex staggered]]
- [ ] [[https://www.youtube.com/watch?v=L_pmBi3m5X0][Let's Learn Framer Motion! (with Matt Perry)]]
* [#A] üîç HB06: Basic security knowledge upgrade
** For tools to build
- [ ] [[https://paragonie.com/blog/2017/03/jwt-json-web-tokens-is-bad-standard-that-everyone-should-avoid][No Way, JOSE! Javascript Object Signing and Encryption]]
- [ ] https://www.one-tab.com/page/rvIF6r4DQdC2zHBWe2nRbQ
- [ ] [[https://news.ycombinator.com/item?id=33203972][Ask HN: WebAuthn ‚Äì Replace Password or Second Factor?]]
** Server side
- [ ] [[https://news.ycombinator.com/item?id=34569726][Ask HN: Best Way to Mess with Hackers? | Hacker News]] (Need to implement)
- [ ] [[https://fly.io/blog/how-cdns-generate-certificates/][How CDNs Generate Certificates ¬∑ Fly]]
** Auth for tools
- [ ] [[https://www.scottbrady91.com/oauth/oauth-is-not-user-authorization][OAuth is Not User Authorization]]
- [ ] [[https://www.youtube.com/watch?v=g_aVPdwBTfw&list=PLshTZo9V1-aEUg2S84KlisJBAyMEoEZ45][What's New With OAuth and OIDC?]]
- [ ] [[https://www.youtube.com/watch?v=GyCL8AJUhww][Introduction to OAuth 2.0 and OpenID Connect]]
- [ ] [[https://www.youtube.com/watch?v=i7of02icPyQ][Everything You Ever Wanted to Know About Web Authentication]]
- [ ] [[https://github.com/Kong/mashape-oauth/blob/master/FLOWS.md][mashape-oauth/FLOWS.md at master ¬∑ Kong/mashape-oauth]]
- [ ] [[https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2][An Introduction to OAuth 2 | DigitalOcean]]
- [ ] [[https://alexbilbie.com/guide-to-oauth-2-grants/][A Guide To OAuth 2.0 Grants - Alex Bilbie]]
- [ ] [[https://www.polarsparc.com/xhtml/OAuth2-OIDC.html][Understanding OAuth2 and OpenID Connect]]
- [ ] [[https://aaronparecki.com/oauth-2-simplified/][OAuth 2 Simplified ‚Ä¢ Aaron Parecki]]
** For personal knowledge
- [ ] [[https://pwn.college/][pwn.college]] (Course)
- [ ] [[https://github.com/step-security/supply-chain-goat][step-security/supply-chain-goat]] (Course)
- [ ] [[https://www.trickster.dev/post/decrypting-your-own-https-traffic-with-wireshark/][Decrypting your own HTTPS traffic with Wireshark ‚Äì Trickster Dev]]
- TCPDump
  - [ ] [[https://nanxiao.github.io/tcpdump-little-book/][TCP Dump - little book]]
  - [ ] [[https://danielmiessler.com/study/tcpdump/][A tcpdump Tutorial with Examples ‚Äî 50 Ways to Isolate Traffic - Daniel Miessler]]
  - [ ] [[https://hackertarget.com/tcpdump-examples/][Tcpdump Examples - 22 Tactical Commands | HackerTarget.com]]
** Cryptography
- [ ] [[https://computerscience.paris/security/][CSCI-UA.9480: Introduction to Computer Security]] (Course)
- [ ] [[https://intensecrypto.org/public/index.html][An intensive introduction to cryptography]] (Book)
- [ ] [[https://cryptobook.nakov.com/cryptography-overview][Practical Cryptography for Developers]] (Book)
- [ ] [[https://www.khanacademy.org/computing/computer-science/cryptography][Cryptography | Computer science | Computing | Khan Academy]]  (Course)
- [ ] [[https://soatok.blog/2020/11/14/going-bark-a-furrys-guide-to-end-to-end-encryption/][Going Bark: A Furry‚Äôs Guide to End-to-End Encryption]]
- [ ] [[https://notes.volution.ro/v1/2022/07/notes/1290a79c/][The many flavors of hashing : Volution Notes]]
- [ ] [[https://soatok.blog/2020/06/10/how-to-learn-cryptography-as-a-programmer/][How To Learn Cryptography as a Programmer]]
- [ ] [[https://loup-vaillant.fr/articles/crypto-is-not-magic][Cryptography is not Magic]]
* [#A] üê≤ HB07: Become functional
** Be at ease with Python
- [ ] [[https://mathspp.com/blog/how-to-create-a-python-package-in-2022][How to create a Python package in 2022]]
- [ ] [[https://pradyunsg.me/blog/2023/01/21/thoughts-on-python-packaging/][Thoughts on the Python packaging ecosystem | Pradyun Gedam]]
- [ ] [[https://docs.python-guide.org/][The Hitchhiker‚Äôs Guide to Python! ‚Äî The Hitchhiker's Guide to Python]]
- [ ] [[https://www.fluentpython.com/][Fluent Python, the lizard book]]
- [ ] [[https://pymotw.com/3/][Python 3 Module of the Week ‚Äî PyMOTW 3]]
- [ ] [[https://www.reddit.com/r/Python/comments/wyl1lp/which_not_so_well_known_python_packages_do_you/][Python Packages (Not well known but good)]]
- [ ] [[https://github.com/zedr/clean-code-python][zedr/clean-code-python: Clean Code concepts adapted for Python]]
- [ ] [[https://medium.com/@petefison/a-crash-course-in-python-comprehensions-and-generators-f069c8f8ca38][A crash course in Python ‚Äúcomprehensions‚Äù and ‚Äúgenerators‚Äù]]
- [ ] [[https://news.ycombinator.com/item?id=34432173][What new Python features are the most useful for you? | Hacker News]]
- [ ] [[https://death.andgravity.com/stdlib?s=35][Learn by reading code: Python standard library design decisions explained]]
- [ ] [[https://github.com/satwikkansal/wtfpython#usage][GitHub - satwikkansal/wtfpython: What the f*ck Python? üò±]]
- [ ] [[https://learnbyexample.github.io/python-regex-possessive-quantifier/][Python 3.11: possessive quantifiers and atomic grouping added to re module]]
** Be at ease with shell scripting and my local system
- [ ] Spend time reading manuals for tools that I use
- [ ] Get cheatsheets organized. Think shift from cheat to =org-mode+fzf+rg=
- [ ] Setup some basic emacs snippets for shell scripting
  - [ ] [[https://google.github.io/styleguide/shellguide.html#s2.1-file-extensions][Google bash style guide]]
  - [ ] [[https://sharats.me/posts/shell-script-best-practices/][Shell Script Best Practices ‚Äî The Sharat's]]
  - [ ] [[https://blog.yossarian.net/2020/01/23/Anybody-can-write-good-bash-with-a-little-effort][Anybody can write good bash]]
** Be building with Golang
- [ ] [[https://go.dev/doc/effective_go][Effective Go - The Go Programming Language]] (Book)
- [ ] [[https://kristoff.it/blog/why-go-and-not-rust/][Why Go and not Rust? | Loris Cro's Blog]]
- Concurrency
  - [ ] [[https://in.coursera.org/learn/golang-concurrency][Concurrency in Go]] (Course)
  - [ ] [[https://github.com/golang/go/wiki/LearnConcurrency][LearnConcurrency ¬∑ golang/go Wiki ¬∑ GitHub]]
  - [ ] [[https://github.com/loong/go-concurrency-exercises][loong/go-concurrency-exercises]]
- [ ] [[https://quii.gitbook.io/learn-go-with-tests/][Learn Go with Tests - Learn Go with tests]] (Course)
- [ ] [[https://news.ycombinator.com/item?id=33224661][Ask HN: Modern Go Dev Setup | Hacker News]]
- [ ] [[https://github.com/thanos-io/thanos/blob/main/docs/contributing/coding-style-guide.md][Thanos coding style guide]]
- [ ] [[https://www.youtube.com/watch?v=MRbhtMptago][What's the proper way to wrap errors in Go? - YouTube]]
** Other things about
- [ ] [[https://death.andgravity.com/pwned][Has your password been pwned? Or, how I almost failed to search a 37¬†GB text]]
* [#A] üö¢ HB08: Server Admin and network troubleshooter
** Deploying systems
- [ ] [[https://linkedin.github.io/school-of-sre/][School Of SRE]] (Book)
- [ ] [[https://jwiegley.github.io/git-from-the-bottom-up/][Git from the Bottom Up]]  (Book)
- [ ] [[https://github.com/fpereiro/backendlore][How I write backends]]
- [ ] [[https://findthatmeme.com/blog/2023/01/08/image-stacks-and-iphone-racks-building-an-internet-scale-meme-search-engine-Qzrz7V6T.html][Image Stacks and iPhone Racks - Building an Internet Scale Meme Search Engine]]
- [ ] Docker
  - [ ] [[https://news.ycombinator.com/item?id=34563353][Ask HN: What is the best source to learn Docker in 2023? | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=34533930][Rails on Docker | Hacker News]]
  - [ ] [[https://pythonspeed.com/docker/][Production-ready Docker packaging for Python developers]]
- [ ] [[https://github.com/futurice/backend-best-practices][futurice/backend-best-practices]]
- [ ] [[https://architecturenotes.co/datasette-simon-willison/][Arc Note: Datasette - Simon Willison]]
- [ ] [[https://crawshaw.io/blog/one-process-programming-notes?s=35][One process programming notes (with Go and SQLite)]]
- [ ] [[https://www.reaktor.com/blog/how-to-deal-with-life-after-heroku/][Life after Heroku: What's a dev to do? - Reaktor]]
- [ ] [[https://www.larrymyers.com/posts/nomad-and-traefik/][Deploying Containers using Nomad and Traefik]]
- [ ] [[https://www.netmeister.org/blog/ops-lessons.html][(A few) Ops Lessons We All Learn The Hard Way]]
- [ ] [[https://lobste.rs/s/a7ndkr/docker_oci_container_ecosystem][Docker and the OCI container ecosystem]]
** Maintaining Services
- [ ] [[https://www.maxcountryman.com/articles/delivering-value-with-platform-engineering][Delivering Value with Platform Engineering - Max Countryman]]
- [ ] [[https://last9.io/blog/a-practical-guide-to-implementing-slos/][A practical guide for implementing SLO | Last9]]
- [ ] [[https://brianschrader.com/archive/why-all-my-servers-have-an-8gb-empty-file/][Why All My Servers Have an 8GB Empty File]]
- [ ] [[https://thehftguy.com/2016/10/03/haproxy-vs-nginx-why-you-should-never-use-nginx-for-load-balancing/][HAProxy vs nginx: Why you should NEVER use nginx for load balancing]]
- [ ] [[https://bas.codes/posts/aws-architecture-overengineering][Understanding AWS Services for Modern Cloud Architectures - Bas codes]]
- [ ] [[https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/][Scaling a Web Service: Load Balancing]]
- [ ] [[https://www.lockedinspace.com/posts/001.html][General guidance when working as a cloud engineer]]
- [ ] [[https://github.com/leandromoreira/cdn-up-and-running][leandromoreira/cdn-up-and-running]]
- [ ] [[https://blog.envoyproxy.io/introduction-to-modern-network-load-balancing-and-proxying-a57f6ff80236][Introduction to modern network load balancing and proxying]]
- [ ] [[https://twitter.com/subhashchy/status/1536769406801309696][Dukaan vs Shopify]]
** Kubernetes
-  [ ] [[https://lobste.rs/s/wtz8pg/upgrading_kubernetes_methodology][Upgrading Kubernetes - Methodology | Lobsters]]
** Finally File-systems
- [ ] [[http://www.nobius.org/dbg/practical-file-system-design.pdf]] (Book)
- [ ] Basics
  - [ ] [[https://stackoverflow.com/questions/25819226/what-is-the-difference-between-inode-number-and-file-descriptor][What is the difference between inode number and fd]]
  - [ ] [[https://www.reddit.com/r/linux4noobs/comments/n7rxsf/what_are_the_various_filesystems_and_what_are_the/][what_are_the_various_filesystems]]
  - [ ] [[https://wiki.archlinux.org/title/file_systems][File systems - ArchWiki]]
  - [ ] [[https://web.archive.org/web/20160802193932/https://www.cs.nmsu.edu/~pfeiffer/classes/474/notes/inodefs.html][inode based FS]]
  - [ ] [[https://en.wikipedia.org/wiki/Linux_Standard_Base][Linux Standard Base - Wikipedia]]
  - [ ] [[https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard][Filesystem Hierarchy Standard - Wikipedia]]
- [ ] ZFS
  - [ ] [[https://www.servethehome.com/an-introduction-to-zfs-a-place-to-start/][An Introduction to ZFS A Place to Start - ServeTheHome]]
  - [ ] [[https://lobste.rs/s/cuihsv/openzfs_final_word_file_systems][OpenZFS - The Final Word in File Systems | Lobsters]]
  - [ ] [[https://klarasystems.com/articles/basics-of-zfs-snapshot-management/][Basics of ZFS Snapshot Management | Klara Inc.]]
  - [ ] [[https://andreas.welcomes-you.com/zfs-risc-v-512mb-lichee-rv/][ZFS on a single core RISC-V hardware with 512MB (Sipeed Lichee RV D1)]]
- [ ] [[https://itnext.io/modern-storage-is-plenty-fast-it-is-the-apis-that-are-bad-6a68319fbc1a][Modern storage is plenty fast. It is the APIs that are bad.]]
** Oops! Observability
- [ ] [[https://www.bwplotka.dev/2021/correlations-exemplars/][Correlating Signals Efficiently in Modern Observability]]
- [ ] [[https://archive.is/nlN5B][Observability replacing monitoring?]]
- [ ] [[https://fly.io/blog/measuring-fly/][Fly's Prometheus Metrics ¬∑ Fly]]
- [ ] [[https://news.ycombinator.com/item?id=32037356][Monitoring tiny web services | Hacker News]]
- [ ] [[https://www.youtube.com/watch?v=STVMGrYIlfg][Introduction to the Prometheus Monitoring System]]
- [ ] [[https://archive.is/Bc8iY][the two drivers of cardinality.]]
- [ ] [[https://github.com/librariesio/metrics][librariesio/metrics: What to measure, how to measure it.]]
- [ ] [[https://sirupsen.com/metrics][Metrics For Your Web Application's Dashboards]]
- [ ] [[https://github.com/sirupsen/napkin-math][Techniques and numbers for estimating system's performance from first-principles]]
- [ ] [[https://brendangregg.com/blog/2021-07-03/how-to-add-bpf-observability.html][How To Add eBPF Observability To Your Product]]
- [ ] [[https://www.earth.li/~noodles/blog/2023/01/finally-using-bpftrace.html][Finally making use of bpftrace]]
** Oh CI/CD
- [ ] [[https://archive.is/0QsIk][Critical differences between what we‚Äôll refer to as ‚Äúlocal CD‚Äù and ‚Äúglobal CD]]
- [ ] [[https://makefiletutorial.com/][Makefile Tutorial By Example]]
- [ ] [[http://gromnitsky.users.sourceforge.net/articles/notes-for-new-make-users/#4b6d995-dont-try-to-be-clever][Notes for new Make users]]
** Network must be up!
- [ ] [[https://beta.computer-networking.info/syllabus/default/index.html][Computer Networking : Principles, Protocols and Practice]]
- [ ] [[https://book.systemsapproach.org/index.html][Computer Networks: A Systems Approach]]
- [ ] [[https://news.ycombinator.com/item?id=33894933][Tell HN: IPv6-only still pretty much unusable | Hacker News]]
** What's up DNS?
- [ ] [[https://lobste.rs/s/zvpabd/intercepting_t_co_links_using_dns][Intercepting t.co links using DNS rewrites | Lobsters]]
- [ ] [[https://www.zytrax.com/books/dns/][DNS for Rocket Scientists]] (Book)
- [ ] [[https://www.netmeister.org/blog/dns-rrs.html][(All) DNS Resource Records]]
- [ ] [[https://blog.benjojo.co.uk/post/dns-resolvers-ttl-lasts-over-one-week][Just how long do DNS resolvers cache last?]]
- [ ] [[https://news.ycombinator.com/item?id=33527642][Stop using low DNS TTLs (2019) | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=33647689][Hardening unused (sub)domains | Hacker News]]
- [ ] [[https://lobste.rs/s/5px6cu/io_domains_considered_harmful][.io domains considered harmful | Lobsters]]
- [ ] [[https://github.com/EmilHernvall/dnsguide][A guide to writing a DNS Server from scratch]]
- [ ] [[https://jvns.ca/blog/2022/11/06/making-a-dns-query-in-ruby-from-scratch/][Making a DNS query in Ruby from scratch]]
- [ ] [[https://blog.hboeck.de/archives/904-Please-do-not-put-IP-addresses-into-DNS-MX-records.html][Please do not put IP addresses into DNS MX records]]
- [ ] [[https://blog.benjojo.co.uk/post/the-death-of-a-tld][The death of a TLD]]
- [ ] [[https://tailscale.com/blog/sisyphean-dns-client-linux/?s=09][The Sisyphean Task Of DNS Client Config on Linux ¬∑ Tailscale]]
- [ ] [[https://blog.benjojo.co.uk/post/dns-resolvers-ttl-lasts-over-one-week][Just how long do DNS resolvers cache last?]]
- [ ] [[https://jvns.ca/blog/how-updating-dns-works/][What happens when you update your DNS?]]
- [ ] [[https://www.netmeister.org/blog/dns-size.html][DNS Response Size]]
- [ ] [[https://jameshfisher.com/2017/02/08/how-does-geodns-work/][How does GeoDNS work?]]
- [ ] [[https://twitter.com/thej/status/1517881933329436672][Using dig]]
* [#A] üêî HB09: Remove database fear
** DB general knowledge
- [ ] Stanford intro to DB course (HDD/Course)
- [ ] [[https://cs186berkeley.net/][Home - CS 186]] (Course)
- [ ] [[https://15445.courses.cs.cmu.edu/fall2019/][CMU 15-445/645 - Intro to Database Systems (Fall 2019)]] (Course)
- [ ] [[https://sqlbolt.com/][SQLBolt - Learn SQL - Introduction to SQL]]
- [ ] [[https://www.reddit.com/r/SQL/comments/g4ct1l/what_are_some_good_resources_to_practice_sql/][What are some good resources to practice SQL? (Practice through exercises)]]
- [ ] Primary Keys
  - [ ] [[https://news.ycombinator.com/item?id=34175639][ULIDs and Primary Keys | Hacker News]]
  - [ ] [[https://supabase.com/blog/choosing-a-postgres-primary-key][Choosing a Postgres Primary Key]]
- [ ] [[https://www.dolthub.com/blog/2020-06-01-learn-sql-dolt/][Learn SQL with Real Data using Dolt | DoltHub Blog]]
- [ ] [[https://rakyll.medium.com/things-i-wished-more-developers-knew-about-databases-2d0178464f78][Things I Wished More Developers Knew About Databases]]
- [ ] [[https://www.damirsystems.com/sql-x-to-y/][What is the correct way to model]]
- [ ] [[https://www.damirsystems.com/grok-normalization/][Gork Normalization]]
- [ ] [[https://www.evanjones.ca/ordered-vs-unordered-indexes.html][Why databases use ordered indexes but programming uses hash tables]]
- [ ] Indexes
  - [ ] [[https://stackoverflow.com/questions/68215830/composite-unique-contstraint-with-null-values/68215933#68215933][sql - Composite unique contstraint with null values - Stack Overflow]]
** Using databases correctly
- [ ] The Art of PostgreSQL (Book)
- [ ] Architecture of a Database System (Book)
- [ ] Readings in Database Systems (Book)
** Joins
- [ ] [[https://blog.codinghorror.com/a-visual-explanation-of-sql-joins/][A Visual Explanation of SQL Joins]]
- [ ] [[https://blog.jooq.org/say-no-to-venn-diagrams-when-explaining-joins/][Say NO to Venn Diagrams When Explaining JOINs]]
- [ ] [[https://minimalmodeling.substack.com/p/many-faces-of-left-join?s=r][Many faces of left join - by Alexey Makhotkin]]
** SQLite
- [ ] [[https://fly.io/blog/all-in-on-sqlite-litestream/][I'm All-In on Server-Side SQLite ¬∑ Fly]]
- [ ] [[https://news.ycombinator.com/item?id=23663071][How Does Sqlite Work? (2014) | Hacker News]]
- [ ] [[https://fly.io/blog/sqlite-virtual-machine/][How the SQLite Virtual Machine Works ¬∑ Fly]]
- [ ] [[https://phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/][Hosting SQLite databases on Github Pages]]
** Too long Redis
- [ ] [[https://tech.trivago.com/post/learn-redis-the-hard-way/][Learn Redis the hard way (in production)]]
- [ ] [[https://spin.atomicobject.com/2021/02/04/redis-postgresql/][Do You Need Redis? PostgreSQL Does Queuing, Locking, & Pub/Sub]]
** Some Infra Operations
- [ ] [[https://www.brianstorti.com/replication/][A Primer on Database Replication]]
- [ ] [[https://medium.com/@jeeyoungk/how-sharding-works-b4dec46b3f6][How Sharding Works]]
- [ ] [[https://stackoverflow.blog/2022/03/14/how-sharding-a-database-can-make-it-faster/][How sharding a database can make it faster]]
* [#A] üêñ HB10: Become pragmatic
** Gain old wisdom
- [ ] The Pragmatic Programmer (Book)
- [ ] [[https://abseil.io/resources/swe-book/html/toc.html][Software Engineering at Google]] (Book)
- [ ] [[https://third-bit.com/sdxjs/introduction/][Software Design by Example: Introduction]] by Greg Wilson (Book)
- [ ] [[https://cs.lmu.edu/~ray/notes/introconcurrency/][introconcurrency]]
- [ ] Coding theory by Venkatesan Guruswami (Book)
- [ ] [[https://github.com/braydie/HowToBeAProgrammer][A guide on how to be a Programmer]]
- [ ] [[https://www.hillelwayne.com/post/cleverness/][Clever vs Insightful Code ‚Ä¢ Hillel Wayne]]
** Advice by other people
- [ ] [[https://gist.github.com/adamwiggins/5687294][My Heroku values ¬∑ GitHub]]
- [ ] [[https://betterprogramming.pub/why-domain-driven-design-203099adf32a][Why Domain-Driven Design?]]
- [ ] [[https://kevinmahoney.co.uk/articles/my-principles-for-building-software/][My Principles for Building Software]]
- [ ] [[https://nat.org/?s=35][Nat Friedman]]
- [ ] [[https://kenkantzer.com/learnings-from-5-years-of-tech-startup-code-audits/][Learnings from 5 years of tech startup code audits]]
- [ ] [[https://betterprogramming.pub/why-domain-driven-design-203099adf32a][Why Domain-Driven Design?]]
- [ ] [[https://neilkakkar.com/things-I-learnt-from-a-senior-dev.html][Things I Learnt from a Senior Software Engineer | Neil Kakkar]]
- [ ] [[https://alexewerlof.medium.com/my-guiding-principles-after-20-years-of-programming-a087dc55596c][My guiding principles after 20 years of programming]]
- [ ] [[https://adamj.eu/tech/2022/06/17/mike-actons-expectations-of-professional-software-engineers/][Mike Acton‚Äôs Expectations of Professional Software Engineers]]
- [ ] [[https://blog.devgenius.io/the-hardest-thing-about-engineering-is-requirements-28a6a70c4db4][The Hardest thing about Engineering is Requirements]]
- [ ] [[https://blog.regehr.org/archives/199][How to Debug ‚Äì Embedded in Academia]]
- [ ] [[https://programmingisterrible.com/post/139222674273/how-to-write-disposable-code-in-large-systems][Write code that is easy to delete]]
- [ ] [[https://blog.charliemeyer.co/code-doesnt-happen-to-you/][Code Doesn't Happen to You]]
** Testing shit
- [ ] [[https://matklad.github.io//2021/05/31/how-to-test.html][How to Test]]
- [ ] [[https://buttondown.email/hillelwayne/archive/oracle-testing/][Oracle Testing ‚Ä¢ Buttondown]]
- [ ] [[https://fuzzing-project.org/background.html][The Fuzzing Project - Misc]]
** Learn more about API design
- [ ] [[https://apisyouwonthate.com/blog/api-versioning-has-no-right-way][API Versioning Has No "Right Way"]]
- [ ] [[https://speakerdeck.com/pietercolpaert/graphql-vs-rest][GraphQL vs. REST - Speaker Deck]]
- [ ] [[https://solovyov.net/blog/2020/api-pagination-design/][API pagination design]]
- [ ] [[https://kislayverma.com/uncategorized/guidelines-for-writing-useful-libraries/][Guidelines for writing useful libraries | Kislay Verma]]
- [ ] [[https://brandur.org/fragments/offset-pagination][What's good about offset pagination]]
- [ ] [[https://blog.sequin.io/events-not-webhooks/][Give me /events, not webhooks]]
- [ ] [[https://www.nylas.com/blog/secrets-to-great-api-design/][Secrets to Great API Design | Nylas]]
- [ ] [[https://ozlabs.org/~rusty/index.cgi/tech/2008-04-01.html][What If I Don't Actually Like My Users?]]
- [ ] [[https://ozlabs.org/~rusty/index.cgi/tech/2008-03-30.html][How Do I Make This Hard to Misuse?]]
- [ ] [[https://www.youtube.com/watch?v=heh4OeB9A-c][How To Design A Good API and Why it Matters - YouTube]]
- [ ] [[https://r.bluethl.net/how-to-design-better-apis][How to design better APIs]]
** Caching
- [ ] [[https://calpaterson.com/ttl-hell.html][Staying out of TTL hell]]
- [ ] [[https://blog.khanacademy.org/memcached-backed-content-infrastructure/][Memcached-Backed Content Infrastructure | Khan Academy Blog]]
- [ ] [[https://yihui.org/en/2018/06/cache-invalidation/][On Cache Invalidation - Why is it hard?]]
* [#A] üå∫ HB11: Languages and how they are made
** Experiment with Rust
- [ ] [[https://doc.rust-lang.org/book/foreword.html][The Rust Programming Language]] (Book)
- [ ] [[https://rust-book.cs.brown.edu/title-page.html][The Rust Programming Language - Brown fork]] (Book)
- [ ] [[https://www.oreilly.com/library/view/command-line-rust/9781098109424/][Command-Line Rust]] (Book)
- [ ] [[https://doc.rust-lang.org/stable/rust-by-example/][Rust By Example]] (Book)
- [ ] [[https://github.com/rust-lang/rustlings][rust-lang/rustlings]]
- [ ] [[https://news.ycombinator.com/item?id=34567550][Why should you use Tokio vs. threads in Rust? | Hacker News]]
- [ ] [[https://github.com/sunface/rust-by-practice][sunface/ruse-by-practice]]
- [ ] [[https://blessed.rs/crates][Crate List - Blessed.rs]]
** Experiment with Elixr
** Remove fear of compilers
- [ ] Demitry Udemy Courses (Course)
- [ ] [[https://lobste.rs/s/r1ozz9/distinguishing_interpreter_from][Distinguishing an Interpreter from a Compiler | Lobsters]]
- [ ] [[https://amasad.me/compilers][Why Learn Compilers]]
- [ ] [[https://indradhanush.github.io/blog/write-a-compile-with-david-beazley/?s=35][Write a compiler with David Beazley | Cracking The Code]]
- [ ] [[https://news.ycombinator.com/item?id=34410776][Why we need to know LR and recursive descent parsing techniques]]
** No really, PLT fr
- [ ] [[https://mpc.sh/blog/a-gentle-intro-to-plt/][A Gentle Intro to PLT]]
- [ ] Programming Languages, Part A,B,C (Course)
- [ ] [[https://github.com/ziishaned/learn-regex][ziishaned/learn-regex: Learn regex the easy way]]
- [ ] [[https://htdp.org/2022-8-7/Book/index.html][How to Design Programs, Second Edition]] (Book)
** No time for Functional programming
- [ ] [[https://cs3110.github.io/textbook/cover.html][OCaml Programming: Correct + Efficient + Beautiful ‚Äî OCaml Programming]] (Course)
- [ ] [[https://robertwpearce.com/how-to-lose-functional-programming-at-work.html][How To Lose Functional Programming At Work]]
** DIY projects
- [ ] [[https://tiarkrompf.github.io/notes/?%2Fjust-write-the-parser%2F=][Tiark's Notebook - Just write the fucking parser]]
- [ ] [[https://www.buildyourownlisp.com/][Learn C ‚Ä¢ Build Your Own Lisp]] (Book)
- [ ] [[https://craftinginterpreters.com/][Crafting Interpreters]] (Book)
- [ ] [[https://interpreterbook.com/][Writing An Interpreter In Go | Thorsten Ball]] (Book)
- [ ] [[https://compilerbook.com/][Writing A Compiler In Go | Thorsten Ball]] (Book)
- [ ] [[https://notes.eatonphil.com/writing-a-simple-json-parser.html][Writing a simple JSON parser | notes.eatonphil.com]]
* [#A] ü¶Ü HB12: Comfortable w Distributed Systems
** General Dist Sys
- [ ] [[http://nil.csail.mit.edu/6.824/2020/schedule.html][6.824: Distributed Systems(2020)]] (Course)
- [ ] [[http://book.mixu.net/distsys/index.html][Distributed systems for fun and profit]] (Book)
- [ ] [[https://www.distributedsystemscourse.com/][Distributed Systems Course]] (Course)
- [ ] Distributed Systems 3rd edition (2017)
- [ ] [[https://prakhar.me/articles/understanding-rpcs/][Understanding RPCs - Part I - cat /dev/random]]
** Know how to formalize
- [[https://microsoft.github.io/z3guide/programming/Z3%20JavaScript%20Examples/][Z3 JavaScript | Online Z3 Guide]] (Book)
** Designing better systems
- [ ] [[https://fly.io/blog/globally-distributed-postgres/][Globally Distributed Postgres ¬∑ Fly]]
- [ ] [[https://massimo-nazaria.github.io/blog/2019/09/05/software-architecture-design-for-busy-developers.html][Software Architecture Design for Busy Developers]]
- [ ] [[https://www.softwareatscale.dev/p/guids-are-not-enough?s=r][GUIDs Are Not The Only Answer - by Utsav Shah]]
- [ ] [[https://www.netlify.com/blog/2017/03/02/to-message-bus-or-not-distributed-systems-design/][To Message Bus or Not: Distributed Systems Design]]
- [ ] [[https://robertheaton.com/2020/04/06/systems-design-for-advanced-beginners/][Systems design for advanced beginners | Robert Heaton]]
- [ ] [[https://aosabook.org/en/distsys.html][AOSA(Volume 2): Scalable Web Arch]]
- [ ] [[https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying][The Log: What every software engineer should know about real-time data]]
** Understand P2P
*** General P2P
- [ ] [[https://hypha.coop/dripline/p2p-primer-part-4/][Dripline: Check the specs: final thoughts on p2p options]]
- [ ] [[https://fiatjaf.com/759be3e8.html][A crappy course on torrents ‚Äì fiatjaf]]
- [ ] [[https://www.coursera.org/learn/peer-to-peer-protocols-local-area-networks][Peer-to-Peer Protocols and Local Area Networks]] (Course)
- [ ] [[https://www.zerotier.com/2014/08/25/the-state-of-nat-traversal/][The State of NAT Traversal ‚Äì ZeroTier]]
- [ ] [[https://tailscale.com/blog/how-nat-traversal-works/][How NAT traversal works ¬∑ Tailscale]]
- [ ] [[http://www.alexkyte.me/2016/10/how-bittorrent-really-works.html][Whitepapers With Friends: How BitTorrent Really Works]]
- [ ] [[https://webtorrent.github.io/workshop/][WebTorrent Workshop]]
- [ ] [[https://matrix.org/blog/2022/12/25/the-matrix-holiday-update-2022][The Matrix Holiday Update 2022 | Matrix.org]]
- [ ] [[https://subconscious.substack.com/p/redecentralization#%C2%A7content-addressing-decouples-data-from-origin][Redecentralization - by Gordon Brander - Subconscious]]
- [ ] [[https://blog.jse.li/posts/torrent/][Building a BitTorrent client from the ground up in Go]]
- [ ] [[https://lobste.rs/s/wzkqos/distributed_bittorrent_like_social][Distributed bittorrent-like social network? | Lobsters]]
- [ ] [[https://stackoverflow.com/questions/3844502/how-do-bittorrent-magnet-links-work/22240583#22240583][How do BitTorrent magnet links work? - Stack Overflow]]
- [ ] [[https://archive.is/2ZOLj#selection-88.0-88.2][p2p papers]]
*** Time for WebRTC
- [ ] [[https://webrtcforthecurious.com/][WebRTC For The Curious]] (Book)
** RPC
*** Others
- [ ] [[https://capnproto.org/][Cap'n Proto: Introduction]]
- [ ] [[https://lobste.rs/s/dsglpi/cap_n_proto_0_8_streaming_flow_control_http][Cap'n Proto 0.8: Streaming flow control, HTTP-over-RPC, fibers, etc | Lobsters]]
*** GRPC
- [ ] [[https://lobste.rs/s/htwjza/connect_better_grpc][Connect: A better gRPC | Lobsters]]
- [ ] [[https://lobste.rs/s/3bsg5h/grpc_best_practices][gRPC - Best Practices | Lobsters]]
** Welcome back Networks
- [ ] Unix Network Programming V1 (Book)
- [ ] [[https://archive.is/vwIdj][Network Programming Self-Study]]üåü
- [ ] [[https://explained-from-first-principles.com/][Explained from First Principles]]
- [ ] [[https://robertovitillo.com/what-every-developer-should-know-about-tcp/][What every developer should know about TCP]]
- [ ] [[https://www.snellman.net/blog/archive/2014-11-11-tcp-is-harder-than-it-looks.html][TCP is harder than it looks]]
- [ ] [[http://sites.inka.de/~bigred/devel/tcp-tcp.html][Why TCP Over TCP Is A Bad Idea]]
* üêÖ HB13: Really wanna Systems
#+attr_html: :class book-hint warning small-text
#+begin_quote
A word of warning for self here, I am interested in this stuff but it seems like there are not too many directly applicable jobs or projects I can work on, so study these accordingly.

But this info in-directly will always be helpful for me in other areas.
#+end_quote
** Basics
- [ ] [[https://github.com/spencertipping/shell-tutorial][spencertipping/shell-tutorial]]
- [ ] [[https://carltheperson.com/posts/10-things-linux/][Getting Better at Linux With 10 Mini-Projects]] (Make these with rust)
- [ ] [[http://emulator101.com/][Emulator 101]]
- [ ] [[https://biriukov.dev/docs/fd-pipe-session-terminal/0-sre-should-know-about-gnu-linux-shell-related-internals-file-descriptors-pipes-terminals-user-sessions-process-groups-and-daemons/][GNU/Linux shell related internals | Viacheslav Biriukov]]
- [ ] [[https://biriukov.dev/docs/page-cache/0-linux-page-cache-for-sre/][Linux Page Cache for SRE | Viacheslav Biriukov]]
** Containers
- [ ] [[https://www.tedinski.com/2018/04/03/why-containers.html][How did we end up with containers?]]
- [ ] [[https://blog.z3bra.org/2016/03/hand-crafted-containers.html][Hand-crafted containers]]
- [ ] [[https://fzakaria.com/2020/05/31/containers-from-first-principles.html][Containers from first principles]]
- [ ] [[https://earthly.dev/blog/chroot/][Containers are chroot with a Marketing Budget - Earthly Blog]]
- [ ] [[https://github.com/lizrice/containers-from-scratch][containers-from-scratch]]
- [ ] [[https://blog.jessfraz.com/post/containers-zones-jails-vms/][Ramblings from Jessie: Setting the Record Straight: containers vs. Zones]]
- [ ] [[https://blog.kintoandar.com/2018/01/Building-healthier-containers.html][Building healthier containers - kintoandar]]
** Virtualization
- [ ] [[https://fly.io/blog/sandboxing-and-workload-isolation/][Sandboxing and Workload Isolation ¬∑ Fly]]
- [ ] [[https://github.com/vijay03/cs378-f19][vijay03/cs378-f19: Repo for CS 378]]
- [ ] [[https://binarydebt.wordpress.com/2018/10/14/intel-virtualisation-how-vt-x-kvm-and-qemu-work-together/][How VT-x, KVM and QEMU Work Together ‚Äì Binary Debt]]
- [ ] [[https://arush15june.github.io/posts/2020-07-12-clocks-timers-virtualization/?s=35][Clocks, Timers and Virtualization silly onions ‚Äî Opinionated articles]]
- [ ] [[https://zserge.com/posts/kvm/][KVM host in a few lines of code]]
- [ ] [[https://github.com/dpw/kvm-hello-world][dpw/kvm-hello-world: A minimal kvm example]]
- [ ] [[https://www.jmeiners.com/lc3-vm/][Write your Own Virtual Machine]]
** BPF & eBPF
- [ ] [[https://ebpf.io/][eBPF - Introduction, Tutorials & Community Resources]]
- [ ] [[https://www.netronome.com/blog/bpf-ebpf-xdp-and-bpfilter-what-are-these-things-and-what-do-they-mean-enterprise/][BPF, eBPF, XDP and Bpfilter]]
- [ ] [[https://jvns.ca/blog/2017/06/28/notes-on-bpf---ebpf/][Notes on BPF & eBPF]]
- [ ] [[https://lwn.net/Articles/740157/][A thorough introduction to eBPF {LWN.net}]]
- [ ] [[https://lwn.net/Articles/787856/][BPF: what's good, what's coming, and what's needed {LWN.net}]]
- [ ] [[https://www.oreilly.com/content/ebpf-and-systems-performance/][eBPF and systems performance ‚Äì O‚ÄôReilly]]
- [ ] [[https://cilium.io/blog/2018/04/17/why-is-the-kernel-community-replacing-iptables/][Why is the kernel community replacing iptables with BPF?]]
** Syscalls
- [ ] [[https://thenewstack.io/how-io_uring-and-ebpf-will-revolutionize-programming-in-linux/][How io_uring and eBPF Will Revolutionize Programming in Linux]]
- [ ] [[https://blog.packagecloud.io/the-definitive-guide-to-linux-system-calls/][The Definitive Guide to Linux System Calls | Packagecloud Blog]]
- [ ] [[https://developers.mattermost.com/blog/hands-on-iouring-go/][Getting Hands-on with io_uring using Go]]
** Strace
- [ ] [[https://nanxiao.gitbooks.io/strace-little-book/content/][Strace little book]]
- [ ] [[https://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html][strace Wow Much Syscall]][[https://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html][strace Wow Much Syscall]]
- [ ] [[https://blog.packagecloud.io/how-does-strace-work/][How does strace work? | Packagecloud Blog]]
- [ ] [[https://jorge.fbarr.net/2014/01/19/introduction-to-strace/][Introduction to strace | The Road to Elysium]]
- [ ] [[https://theartofmachinery.com/2019/11/14/deployment_debugging_strace.html][Debugging Software Deployments with strace ‚Äî The Art of Machinery]]
- [ ] [[https://jvns.ca/blog/2020/04/29/why-strace-doesnt-work-in-docker/][Why strace doesn't work in Docker]]
** DIY
- [ ] [[https://build-your-own.org/redis/][Build Your Own Redis with C/C++ | Build Your Own Redis with C/C++]]
* [#A] üï∏ HB14: Scraping and Archival
** Scraping shit
- [ ] [[https://michaelnielsen.org/ddi/how-to-crawl-a-quarter-billion-webpages-in-40-hours/][How to crawl a quarter billion webpages in 40 hours | DDI]]
- [ ] [[https://news.ycombinator.com/item?id=33654177][Ask HN: Have you ever used anti detect browsers for web scraping? | Hacker News]]
- [ ] [[https://github.com/niespodd/browser-fingerprinting][Analysis of Bot Protection systems]]
* [#A] „äô HB15: Working with data
** Probability and Statistics
- [ ] Stats Without Tears (Book)
- [ ] [[https://seeing-theory.brown.edu/][Seeing Theory]] (Book)
- [ ] [[https://web.archive.org/web/20110702162929/https://zedshaw.com/essays/programmer_stats.html][Programmers Need To Learn Statistics Or I Will Kill Them All]]
- [ ] [[https://www.bcfoltz.com/stats-101/][STATISTICS 101 Playlists ‚Äì Brandon Foltz]]
- [ ] [[https://www.youtube.com/channel/UCtYLUTtgS3k1Fg4y5tAhLbw][StatQuest with Josh Starmer - YouTube]]
- [ ] [[https://xcelab.net/rm/statistical-rethinking/][Statistical Rethinking | Richard McElreath]]  (Book + Course), Follow [[https://github.com/pymc-devs/pymc-resources/tree/main/Rethinking_2][PyMC implementation]]
** Do the work with Data science
- [ ] Data Science from Scratch, 2nd Edition (Book)
- [ ] Everyday Data Science (Book)
- [ ] Effective Pandas (Book)
- [ ] [[https://khuyentran1401.github.io/Efficient_Python_tricks_and_tools_for_data_scientists/README.html?s=35][Efficient Python Tricks and Tools for Data Scientists]] (Book)
- [ ] [[https://ryxcommar.com/2022/11/27/goodbye-data-science/][Goodbye, Data Science ‚Äì r y x, r]]
- [ ] [[https://shakoist.substack.com/p/why-business-data-science-irritates?s=35][Why Business Data Science Irritates Me - by shako]]
- [ ] SQL
  - [ ] [[https://hakibenita.com/sql-for-data-analysis][Practical SQL for Data Analysis | Haki Benita]]
  - [ ] [[https://news.ycombinator.com/item?id=34578324][SQL should be the default choice for data transformation logic | Hacker News]]
- [ ] Deep learning üçú
  - [ ] [[https://news.ycombinator.com/item?id=34549724][Classical ML Still Relevant? | Hacker News]]
  - [ ] [[https://course.fast.ai/][Practical Deep Learning for Coders]]
  - [ ] [[https://karpathy.ai/zero-to-hero.html][Neural Networks: Zero To Hero]]
- [ ] Pandas and Numpy
  - [ ] [[https://pythonspeed.com/datascience/][Articles: Speed up your data science and scientific computing code]]
  - [ ] [[https://betterprogramming.pub/pandas-illustrated-the-definitive-visual-guide-to-pandas-c31fa921a43][Pandas Illustrated: The Definitive Visual Guide to Pandas | by Lev Maximov | ...]]
  - [ ] [[https://www.youtube.com/playlist?list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS][Pandas Tutorials - YouTube]]
  - [ ] [[https://www.machinelearningplus.com/python/101-numpy-exercises-python/][101 NumPy Exercises for Data Analysis (Python) - ML+]]
  - [ ] [[https://www.freecodecamp.org/learn/data-analysis-with-python][Data Analysis with Python]] (Course)
  - [ ] [[https://www.youtube.com/watch?v=5JnMutdy6Fw][Brandon Rhodes - Pandas From The Ground Up]]
- [ ] PCA
  - [ ] [[https://stats.stackexchange.com/questions/2691/making-sense-of-principal-component-analysis-eigenvectors-eigenvalues][pca - Making sense of principal component analysis, eigenvectors & eigenvalue]]
  - [ ] [[https://setosa.io/ev/principal-component-analysis/][Principal Component Analysis explained visually]]
** Data visualization
- [ ] [[https://www.coursera.org/learn/python-plotting?specialization=data-science-python][Applied Plotting, Charting & Data Representation in Python]] (Course)
- [ ] [[https://news.ycombinator.com/item?id=34574570][A baffling scale transform on a chart of university course selection trends]]
** Data processing
- [ ] [[https://www.oreilly.com/library/view/designing-data-intensive-applications/9781491903063/][Designing Data-Intensive Applications]] (Book)
- [ ] [[https://betterprogramming.pub/data-engineering-101-from-batch-processing-to-streaming-54f8c0da66fb][Data Engineering 101: From Batch Processing to Streaming | by Ben Rogojan | Better Programming]]
- [ ] [[https://www.oreilly.com/radar/the-world-beyond-batch-streaming-101/][Streaming 101: The world beyond batch ‚Äì O‚ÄôReilly]]
- [ ] [[https://news.ycombinator.com/item?id=27632949][Notes on streaming large API responses | Hacker News]]
- [ ] [[https://www.reddit.com/r/AskProgramming/comments/jw3tz8/how_do_streaming_apis_work/][How do streaming APIs work]]
- [ ] [[https://www.dr-josiah.com/2011/05/essentials-behind-building-streaming.html][A Dash of Technology: The Essentials Behind Building a Streaming API]]
- [ ] [[https://www.oreilly.com/content/why-local-state-is-a-fundamental-primitive-in-stream-processing/][Why local state is a fundamental primitive in stream processing ‚Äì O‚ÄôReilly]]
- [ ] [[https://betterprogramming.pub/data-engineering-101-from-batch-processing-to-streaming-54f8c0da66fb][Data Engineering 101: From Batch Processing to Streaming | by Ben Rogojan | Better Programming]]
- [ ] [[https://kapernikov.com/a-comparison-of-data-processing-frameworks/][A comparison of data processing frameworks ‚Äì Kapernikov]]
- [ ] [[https://orobinson.co.uk/posts/2023-01-04_tips_for_writing_long_running_scripts/][Tips for writing long running data processing scripts]]
- [ ] [[https://www.confluent.io/blog/databases-meet-stream-processing-the-future-of-sql/][The Future of SQL: Databases Meet Stream Processing | Confluent]]
- [ ] [[https://flink.apache.org/news/2019/02/13/unified-batch-streaming-blink.html][Apache Flink: Batch as a Special Case of Streaming and Alibaba's contribution of Blink]]
- [ ] [[https://www.confluent.io/blog/how-real-time-stream-processing-safely-scales-with-ksqldb/][How Real-Time Stream Processing Safely Scales with ksqlDB]]
** Deploying ML in prod
- [ ] [[https://fullstackdeeplearning.com/][Full Stack Deep Learning]]
- [ ] [[https://github.com/DataTalksClub/mlops-zoomcamp][Free MLOps course from DataTalks.Club]]
- [ ] [[https://madewithml.com/courses/mlops/design/][Designing Machine Learning Products - Made With ML]]
- [ ] [[https://www.serverless-ml.org/modules][Modules and details]]
- [ ] [[https://huggingface.co/course/chapter1/1][Introduction - Hugging Face Course]]
- [ ] [[https://www.ravirajag.dev/blog/mlops-summary][MLOps Basics {Week 10}: Summary]]
* üèú HB16: Some Art & Craft is nice
- [ ] Learn MagicaVoxel
- [ ] [[https://lospec.com/][Pixel Art resources]]
- [ ] Guitar
- [ ] Woodwork get tools and find a mentor
