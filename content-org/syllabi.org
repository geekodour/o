#+FILE_NAME: syllabi
#+HUGO_SECTION: docs/updates
#+HTML_CONTAINER: div
#+HTML_CONTAINER_CLASS: smol-table
#+TITLE: Syllabi

#+attr_html: :class book-hint warning small-text
#+begin_quote
**Why the titles are not subject names but some weird goals kind of thing?**

I always had issues relating what I am studying to how I am going to use it. A foolish attempt to resolve this is to mention =the why of the syllabus= instead of =the syllabus name(subject)=. Also it's easier to tell the why then to assign a subject because the resources I have under them are somewhat unstructured.
#+end_quote

#+attr_html: :class book-hint info small-text
#+begin_quote
Whenever I have a new information resource, I categorize it at entry. It can go under any one of these:
- This page, =/docs/updates/syllabi=
- The full [[/pages/syllabus][syllabus]]
- Dump file 1 [[/pages/tlr][Technical learning resources]] (need a better name no cap)
- Dump file 2 [[/pages/engineering_blogposts][Engineering blogposts]]
- Dump file 3 [[file:anti_lib.org::*Posts][anti_lib]]

I try my best to not repeat links across these pages. I have not setup any automated link checker for either duplication/backlinks/linkrots etc.
#+end_quote

This is my syllabi created in October'22.

* üíº HB01: How businesses works
** Understand basic economics
- [ ] The personal MBA (Book)
- [ ] Economics in One Lesson (Book)
    - [ ] [[https://longform.asmartbear.com/avoid-blundering/][Avoid blundering: 80% of a winning strategy]]
- [ ] An-Introduction-to-Stock-Options-for-the-Tech-Entrepreneur-or-Startup-Employee
- [ ] [[https://github.com/unbalancedparentheses/learn_economics][Economics √©tudes: books, papers and courses]]
- [ ] [[https://www.catem.be/app/sd-explainer/][Supply & Demand: An interactive explainer]]
- [ ] [[https://news.ycombinator.com/item?id=40030721][The Guide to Stock Options Conversations | Hacker News]]
- [ ] [[https://mru.org/][Marginal Revolution University]] (Course)
- [ ] [[https://in.coursera.org/learn/financial-markets-global?#syllabus][Financial Markets]] (Course)
- [ ] [[https://in.coursera.org/learn/microeconomics-part1/][Microeconomics: The Power of Markets]] (Course)
- [ ] [[https://ocw.mit.edu/courses/sts-081-innovation-systems-for-science-technology-energy-manufacturing-and-health-spring-2017/video_galleries/lecture-videos/][Innovation Systems for Science, Technology, Energy]] (Course)
** Additional cherry for businesses
- [ ] [[https://www.notion.so/geekodour/Venture-Capital-5e4dc7e23a9d42068d534f7db447dffd ][Understand how VCs work]]
- [ ] [[https://dlopuch.github.io/venture-dealr/][Venture Dealr]]
- [ ] [[https://www.lennysnewsletter.com/p/startup-to-exit-lessons-from-a-first][Startup to exit: Lessons from a first-time founder]]
- [ ] [[https://businessofsoftware.org/2011/03/hello-ladies-patrick-mckenzie-at-business-of-software-2010-marketing-to-minorities/][Marketing to Minorities | Patrick McKenzie | BoS 2010]]
- [ ] [[https://www.joelonsoftware.com/2002/06/12/strategy-letter-v/][Strategy Letter V ‚Äì Joel on Software]]
- [ ] [[https://news.ycombinator.com/item?id=33354858][Ask HN: Learning about fundraising as first-time tech founders | Hacker News]]
- [ ] [[https://world.hey.com/dhh/the-bubble-has-popped-for-unprofitable-software-companies-2a0a5f57][The bubble has popped for unprofitable software companies]]
- [ ] [[https://news.ycombinator.com/item?id=34368601][Working for a Dating Website (2015) | Hacker News]]
- [ ] [[https://www.reddit.com/r/smallbusiness/][/r/smallbz]]
** Understand how to start
- [ ] The Minimalist Entrepreneur (Book)
- [ ] MAKE Bootstrapper Handbook (Book)
- [ ] https://x.com/_swanand/status/1802609282380136563 (esop)
- [ ] [[https://www.youtube.com/playlist?list=PLoROMvodv4rNpMrTeeh-627Lajh6uSUgY][Startup School: The First 100 Days - Stanford CS183F - Spring 2017 - YouTube]]
- [ ] [[https://www.julian.com/guide/startup/intro][Startup Handbook by Julian Shapiro]]
- [ ] [[https://www.kalzumeus.com/greatest-hits/][Patio11's Greatest Hits]]
- [ ] [[https://startsmall.com/][Start Small, Stay Small]]
- [ ] [[https://www.youtube.com/watch?v=EZxP0i9ah8E][Paul Buchheit at Startup School 08 - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=i3d1asTrWUQ][Tyler tringas (StoreMapper): Micro Saas - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=m3nb_Qj3mRA][Bootstrapping Side Projects To Profit by Pieter Levels]]
- [ ] [[https://www.youtube.com/watch?v=0CDXJ6bMkMY][David Heinemeier Hansson at Startup School 08 - YouTube]]
* ü•ï HB02: Become more confident with problem solving
** Revisit the basics
- [-] Grokking Algorithms (Book)
- [ ] How to solve it (Book)
- [-] [[https://www3.cs.stonybrook.edu/~skiena/373/videos/][Skiena's Algorithms]] (Course)
- [ ] [[https://github.com/emirpasic/gods][GoDS (Go Data Structures)]]
- [X] [[https://pikuma.com/courses/bit-shifting-operator-tutorial][Bitshifting Operations]] (Course)
- [X] Primegen Course
- [ ] [[http://okasaki.blogspot.com/2008/05/designing-data-structure.html][Teaching, Playing, and Programming: Designing a Data Structure]]
** Deal with long term fears
- [ ] How to prove it (Book)
- [ ] Graphs
  - [ ] [[https://www.crockford.com/graphs.html][Trees and Graphs]]
  - [ ] [[https://www.redblobgames.com/pathfinding/grids/graphs.html][Grids and Graphs]]
- [ ] Dynamic programming
  - [ ] [[https://www.redblobgames.com/pathfinding/a-star/introduction.html][Introduction to the A* Algorithm]]
  - [ ] [[https://news.ycombinator.com/item?id=38988948][Dynamic programming is not black magic | Hacker News]]
  - [ ] [[https://avikdas.com/2019/04/15/a-graphical-introduction-to-dynamic-programming.html][A graphical introduction to dynamic programming]]
- [ ] Optimization
  - [ ] [[https://pganalyze.com/blog/a-practical-introduction-to-constraint-programming-using-cp-sat][A practical introduction to Constraint Programming using CP-SAT and Python]]
  - [ ] [[https://www.youtube.com/watch?v=wy45-JH8_yY][Better Algorithms for Bin Packing - YouTube]]
- [-] Recursion
  - [X] [[https://news.ycombinator.com/item?id=36088704][Show HN: Python Recursion: A Trampoline from the Mutual Head]]
  - [X] [[https://cestlaz.github.io/post/recursion/][On Teaching Recursion - C'est la Z]]
  - [ ] [[https://web.archive.org/web/20160217105600/https://anupcowkur.com/posts/master-theorem-simplified/][Master Theorem Simplified ‚Äì Anup Cowkur]]
    - [ ] [[https://math.stackexchange.com/questions/28887/how-to-convert-a-recurrence-relation-to-a-non-recursive-function][How to convert a recurrence relation to a non recursive function]]
  - [ ] [[https://eli.thegreenplace.net/2017/on-recursion-continuations-and-trampolines/][On Recursion, Continuations and Trampolines - Eli Bendersky's website]]
  - [ ] [[https://www.solipsys.co.uk/new/RecursionRevisited.html?tj15lo][Recursion Revisited]]
- [ ] Hash table & Bloom filters
  - [ ] [[https://lobste.rs/s/hwhuvh/simple_hash_table_c][A simple hash table in C | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=42486610][How bloom filters made SQLite 10x faster | Hacker News]]
- [ ] Immutable DS
  - [[https://qdrant.tech/articles/immutable-data-structures/][Qdrant Internals: Immutable Data Structures - Qdrant]]
* üÜò HB03: Get back at basic math
** Get introduced
- [ ] Do basic school math for 7 days straight from KhanAcademy (Course)
- [ ] Why Math? (Book) : Basics Revisit
- [ ] [[https://giam.southernct.edu/GIAM/][Homepage for A Gentle Introduction to the Art of Mathematics]]
- [ ] [[https://eli.thegreenplace.net/2024/notes-on-the-euler-formula/][Notes on the Euler formula - Eli Bendersky's website]]
- [ ] [[https://pikuma.com/blog/math-for-game-developers][Pikuma: Fundamental Math for Game Developers]]
- [ ] [[https://betterexplained.com/guides/calculus/][Calculus Learning Guide ‚Äì BetterExplained]]
      - [ ] [[https://jverzani.github.io/CalculusWithJuliaNotes.jl/][Calculus with Julia]]
- [X] [[https://www.susanrigetti.com/math][Math ‚Äî Susan Rigetti]]
- [X] [[https://www.people.vcu.edu/~dcranston/490/handouts/math-read.html][How to Read Mathematics]]
- [ ] [[https://nrich.maths.org/number-theory][An Introduction to Number Theory]]
- [ ] [[https://explained-from-first-principles.com/number-theory/][Number theory explained from first principles]]
** Resurface basic comp sci math
- [ ] [[https://www.youtube.com/playlist?list=PL0G-Nd0V5ZMqxECyXhHJDKF8YQZcMXx6D][Series - YouTube]]
- [ ] [[https://pimbook.org/][A Programmer's Introduction to Mathematics]] (Book)
- [ ] [[https://cims.nyu.edu/~regev/teaching/discrete_math_fall_2005/dmbook.pdf][Discrete Mathematics - L. Lov ÃÅasz and K. Vesztergombi]] (Book)
** Permutations and numbers
- [ ] [[https://www.goodreads.com/book/show/1575542.Discrete_and_Combinatorial_Mathematics?ac=1&from_search=true&qid=bp3bVdDUBk&rank=1][Discrete and Combinatorial Mathematics by Ralph P. Grimaldi]] (Book)
- [ ] [[https://www.goodreads.com/book/show/1586807.A_Friendly_Introduction_to_Number_Theory][A Friendly Introduction to Number Theory by Joseph H. Silverman]] (Book)
- [ ] [[https://www.youtube.com/watch?v=0NAASclUm4k&list=PLmdFyQYShrjfPLdHQxuNWvh2ct666Na3z&index=2][Permutations and Combinations | Counting | Don't Memorise - YouTube]]
** Linear Algebra
- [ ] Introduction to LA - GS (Book) | [[https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra][Graphical Notes]]
  - [ ] [[https://ocw.mit.edu/courses/18-06-linear-algebra-spring-2010/][Linear Algebra]] (Course)
- [ ] [[https://www.khanacademy.org/math/algebra][Algebra 1 | Math | Khan Academy]]
- [ ] [[https://www.youtube.com/watch?v=bm5xFEqYuiI][Life Lesson from Stanford CS Prof John Ousterhout - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab][Essence of linear algebra - YouTube]] (Course)
- [ ] [[https://linear.axler.net/LADRvideos.html][LA done right]] (Book)
** Binary math
- [X] [[https://www.andreinc.net/2023/02/01/demystifying-bitwise-ops][Demystifying bitwise operations, a gentle C tutorial]]
* üåé HB04: Get a grip over Web Development
** Get your HTTP basics right
- [-] Basics
  - [X] [[https://htmx.org/essays/how-did-rest-come-to-mean-the-opposite-of-rest/][How Did REST Come To Mean The Opposite of REST?]]
  - [X] [[https://lobste.rs/s/5wnigy/restful_is_scam_browsers_are_cool][restful is a scam, but browsers are cool | Lobsters]]
  - [X] [[https://www.mnot.net/blog/2022/06/06/http-core][A New Definition of HTTP]]
  - [X] [[https://howhttps.works/][How HTTPS works - How HTTPS works]]
  - [X] [[https://blog.cloudflare.com/the-state-of-http-in-2022/][The state of HTTP in 2022]]
  - [ ] [[https://news.ycombinator.com/item?id=33280605][The HTTP crash course nobody asked for | Hacker News]]
  - [ ] [[https://www.netmeister.org/blog/https-rrs.html][Use of HTTPS Resource Records]]
  - [ ] [[https://ananthakumaran.in/2022/11/12/trace-http-requests.html][Tracing HTTP Requests with tcpflow ¬∑ Anantha Kumaran]]
  - [ ] [[https://azeemba.com/posts/what-is-a-url.html][What Is a URL | Azeem Bande-Ali | Engineering Manager]]
  - [ ] [[https://news.ycombinator.com/item?id=35704101][Introduction to HTTP Multipart | Hacker News]]
- [X] Headers
  - [X] [[https://blog.appcanary.com/2017/http-security-headers.html][Everything you need to know about HTTP security headers]]
  - [X] [[https://algustionesa.com/security-headers/][How to Add Security Headers Using Cloudflare (8 Quick Steps)]]
  - [X] [[https://www.fastly.com/blog/improve-http-structured-headers][Improving HTTP with structured header fields | Fastly]]
- [X] Caching
  - [X] [[https://www.mnot.net/cache_docs/][Caching Tutorial for Web Authors and Webmasters]] üî•
  - [X] [[https://developers.cloudflare.com/cache/concepts/cache-behavior/][Cache behavior with HEAD requests and Set-Cookie header]]
  - [ ] [[https://www.wezm.net/v2/posts/2024/tiny-cdn/][Building a Tiny CDN With pyinfra and Chimera Linux - Wesley Moore]]
  - [ ] [[https://news.ycombinator.com/item?id=42712433][Why is Cloudflare Pages' bandwidth unlimited? | Hacker News]]
  - [X] Etags
    - [X] [[https://developers.cloudflare.com/cache/reference/etag-headers/][Using ETag Headers with Cloudflare ¬∑ Cloudflare Cache (CDN) docs]]
    - [X] [[https://fideloper.com/etags-and-optimistic-concurrency-control][ETags and Optimistic Concurrency Control]]
    - [X] [[https://medium.com/airasia-com-tech-blog/etag-101-tips-and-tricks-for-implementation-6072525b487b][ETag 101: Tips and Tricks for Implementation | by airasia super app | airasia Super App Tech Blog | Medium]]
- [ ] SSE
  - [ ] [[https://en.wikipedia.org/wiki/Server-sent_events][Server-sent events - Wikipedia]]
  - [ ] [[https://lobste.rs/s/idfifu/server_sent_events_alternative][Server-Sent Events: the alternative to WebSockets you should be using | Lobsters]]
  - [ ] [[https://github.com/whatwg/html/issues/2177][whatwg/html#2177 Setting headers for EventSource]]
  - [ ] [[https://news.ycombinator.com/item?id=42511318][Server-Sent Events (SSE) Are Underrated | Hacker News]]
- [X] Cookies
  - [X] [[https://www.youtube.com/watch?v=sovAIX4doOE][HTTP Cookies Crash Course - YouTube]]
  - [X] [[https://stormpath.com/blog/cookies-are-awesome-free-cookies][Recipe: The Best Darn HTTP Cookies]]
  - [X] [[https://blog.tomayac.com/2022/08/30/things-not-available-when-someone-blocks-all-cookies/][Things not available when someone blocks all cookies]]
  - [X] [[https://www.conradakunga.com/blog/what-do-you-actually-agree-to-when-you-accept-all-cookies/][What Do You Actually Agree To When You Accept All Cookies]]
- [ ] Usecases
  - [ ] [[https://www.rfc-editor.org/rfc/rfc9308.html][RFC 9308: Applicability of the QUIC Transport Protocol]]
  - [ ] [[https://quadratic.fm/p/how-meta-microsoft-google-github][How Meta, Google, Github and others leverage HTTP conditional requests]]
** React and Typescript way to mastery
- Javascript
  - [X] [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Overview][JavaScript language overview - JavaScript | MDN]]
  - [X] [[https://learnxinyminutes.com/docs/javascript/][Learn javascript in Y Minutes]]
  - [X] [[https://turriate.com/articles/modern-javascript-everything-you-missed-over-10-years][Modern Javascript: Everything you missed over the last 10 years]]
  - [X] [[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects][Standard built-in objects - JavaScript | MDN]]
  - [-] [[https://shamansir.github.io/JavaScript-Garden/][JavaScript Garden]]
  - [ ] [[https://eloquentjavascript.net/][Eloquent JavaScript]]
  - [ ] [[https://www.taniarascia.com/asynchronous-javascript-event-loop-callbacks-promises-async-await/][Understanding the Event Loop, Callbacks, Promises, and Async/Await in JS]]
- React
  - [X] [[https://reactjs.org/tutorial/tutorial.html][Tutorial: Intro to React ‚Äì React]]
  - [ ] [[https://prateeksurana.me/blog/future-of-rendering-in-react/][The future of rendering in React]]
- [X] State Management
  - [X] Client state
    - [X] [[https://redux.js.org/][Redux - A predictable state container for JavaScript apps]]
    - [X] [[https://redux-toolkit.js.org/][Redux Toolkit | Redux Toolkit]]
    - [ ] [[https://frontendatscale.com/blog/islands-architecture-state/][Sharing State with Islands Architecture | Frontend at Scale]]
  - [X] Server state
    - [X] [[https://tanstack.com/query/v4/docs/comparison?from=reactQueryV3&original=https%3A%2F%2Freact-query-v3.tanstack.com%2Fcomparison][Comparison | React Query vs SWR vs Apollo vs RTK Query vs React Router]]
    - [X] [[https://blog.logrocket.com/swr-vs-tanstack-query-react/][Caching clash: SWR vs. TanStack Query for React - LogRocket Blog]]
- Typescript
  - [-] [[https://github.com/type-challenges/type-challenges][type-challenges/type-challenges]]
  - [X] [[https://www.totaltypescript.com/tutorials/beginners-typescript][Beginner's TypeScript Tutorial | Total TypeScript]]
  - [ ] [[https://alexharri.com/blog/typescript-structural-typing][Why doesn't TypeScript properly type Object.keys?]]
  - [ ] [[https://react-typescript-cheatsheet.netlify.app/][React TypeScript Cheatsheets]]
** Get a hold of web engineering
- [ ] [[https://hpbn.co/][High Performance Browser Networking]] (Book)
- [ ] [[https://blog.sesse.net/blog/tech/2022-12-27-00-07_the_ultimate_single_page_app.html][The ultimate single-page app]]
- [ ] [[https://www.marcobehler.com/guides/load-testing][Load Testing: An Unorthodox Guide]]
- [ ] [[https://news.ycombinator.com/item?id=40531100][Engineering for Slow Internet | Hacker News]]
- [ ] [[https://alexharri.com/blog/clipboard][The web's clipboard, and how it stores data of different types]]
- [ ] [[https://jfhr.me/optimizing-images-with-the-html-picture-tag/][Optimizing images with the HTML picture tag | jfhr]]
- [ ] [[https://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces][How many ways can you slice a URL and name the pieces? - Tantek]]
- [ ] [[https://medium.com/airbnb-engineering/improving-performance-with-http-streaming-ba9e72c66408][Improving Performance with HTTP Streaming]]
- [ ] Video
  - [[https://jazco.dev/2024/07/05/hls/][How HLS Works ¬∑ Jaz's Blog]]
  - [[https://news.ycombinator.com/item?id=41018096][Ask HN: Share your FFmpeg settings for video hosting | Hacker News]]
- [ ] Devtools
  - [ ] [[https://news.ycombinator.com/item?id=35970712][Debug browser redirects without ruining your day | Hacker News]]
  - [ ] [[https://devtoolstips.org/][Learn how to use web developer tools]]
- [ ] Browsers
  - [ ] [[https://taligarsiel.com/Projects/howbrowserswork1.htm][How browsers work]]
  - [ ] [[https://cerebralab.com/The_universal_VM_we_call_browser][The universal VM we call browser]]
  - [ ] [[https://cprimozic.net/blog/building-a-signal-analyzer-with-modern-web-tech/][Building a Signal Analyzer with Modern Web Tech]]
- [ ] Web-workers
  - [ ] [[https://github.com/deebloo/things-you-can-do-in-a-web-worker][deebloo/things-you-can-do-in-a-web-worker]]
- [ ] Websockets
  - [ ] [[https://news.ycombinator.com/item?id=29893242][The WebSocket Handbook | Hacker News]]
  - [ ] [[https://www.mnot.net/blog/2022/02/20/websockets][Server-Sent Events, WebSockets, and HTTP]]
  - [ ] [[https://lobste.rs/s/qyler8/writing_chat_application_django_4_2_using][Django 4.2 w async StreamingHttpResponse, SSE and PG LISTEN/NOTIFY]]
  - [ ] [[https://news.ycombinator.com/item?id=42816359][The hidden complexity of scaling WebSockets | Hacker News]]
  - [ ] [[https://www.youtube.com/watch?v=rc_zVASAajU][I Wrote Websockets "From Scratch" - YouTube]]
  - [ ] [[https://www.aadhav.me/posts/websockets][Websockets: The Powerful Protocol]]
  - [ ] [[https://stackoverflow.blog/2019/12/18/websockets-for-fun-and-profit/][WebSockets for fun and profit - Stack Overflow Blog]]
  - [ ] [[https://cookie.engineer/weblog/articles/implementers-guide-to-websockets.html][Implementer's Guide to WebSockets - Cookie Engineer's Web Log]]
  - [ ] [[https://news.ycombinator.com/item?id=42600276][Back to basics: Why we chose long-polling over websockets | Hacker News]]
  - [ ] [[https://medium.com/@atakanserbes/websockets-shaping-real-time-communication-a216f79f9ef4][WebSockets: Shaping Real-time Communication | by Atakan Serbes | Oct, 2023 | Medium]]
  - [ ] [[https://news.ycombinator.com/item?id=31925145][Ask HN: How do you scale WebSocket? | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=29651447][Woe be unto you for using a WebSocket | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=32634038][Writing a toy WebSocket server from scratch | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=34850903][Direct Sockets: Proposal for a future web platform API | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=34639728][Show HN: DriftDB ‚Äì an open source WebSocket backend for real-time apps]]
** Time for Webassembly
- [X] [[https://xeiaso.net/talks/wasm-abi][The Go WebAssembly ABI at a Low Level - Xe]]
- [X] [[https://snarky.ca/webassembly-and-its-platform-targets/][WebAssembly and its platform targets]]
- [X] [[https://news.ycombinator.com/item?id=37498820][WASI Support in Go | Hacker News]]
- [X] [[https://www.youtube.com/watch?v=RcHER-3gFXI][WebAssembly: A new development paradigm for the web - YouTube]]
- [X] [[https://news.ycombinator.com/item?id=35288059][The tug-of-war over server-side WebAssembly]]
- [X] [[https://xeiaso.net/talks/unix-philosophy-logical-extreme-wasm][Reaching the Unix Philosophy's Logical Extreme with Webassembly - Xe Iaso]]
- [X] [[https://flak.tedunangst.com/post/www-which-wasm-works][www which wasm works]]
- [X] [[https://www.neversaw.us/2023/06/30/understanding-wasm/part2/whence-wasm/][Understanding Wasm, Part 2: Whence Wasm - Chris Dickinson]]
- [X] [[https://digest.browsertech.com/archive/determinism-is-webassemblys-hidden-superpower/][Determinism is WebAssembly‚Äôs hidden superpower]]
- [X] [[https://00f.net/2023/01/04/webassembly-benchmark-2023/][Performance of WebAssembly runtimes in 2023 | Frank DENIS random thoughts.]]
- [X] [[https://news.ycombinator.com/item?id=35667650][WebAssembly Text Code Samples | Hacker News]]
- [X] [[https://blog.scottlogic.com/2023/10/18/the-state-of-webassembly-2023.html][The State of WebAssembly 2023]]
- [X] [[https://wasmlabs.dev/articles/python-wasm32-wasi/][Adding Python support to Wasm Language Runtimes]]
- [ ] [[https://lobste.rs/s/djxada/missing_point_webassembly][missing the point of webassembly | Lobsters]]
- [ ] [[https://news.ycombinator.com/item?id=38744168][Understanding every byte in a WASM module | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=39143054][WASI 0.2.0 and Why It Matters | Hacker News]]
- [ ] [[https://eli.thegreenplace.net/2023/faas-in-go-with-wasm-wasi-and-rust/][FAAS in Go with WASM, WASI and Rust - Eli Bendersky's website]]
  - [ ] Check [[https://github.com/burntcarrot/wasmninja][burntcarrot/wasmninja]]
- [ ] [[https://news.ycombinator.com/item?id=35236272][A world to win: WebAssembly for the rest of us | Hacker News]], [[https://lobste.rs/s/gmjekk/world_win_webassembly_for_rest_us][Lobsters]]
- [ ] Tools
  - [ ] [[https://news.ycombinator.com/item?id=37751270][Extism makes WebAssembly easy | Hacker News]]
- [ ] Advanced
  - [ ] [[https://spritely.institute/news/scheme-wireworld-in-browser.html][Scheme in the browser: A Hoot of a tale -- Spritely Institute]]
  - [ ] [[https://news.ycombinator.com/item?id=38507594][Build your own WebAssembly Compiler (2019) | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=35470057][WebAssembly Tail Calls | Hacker News]]
  - [ ] [[http://troubles.md/wasm-is-not-a-stack-machine/][WebAssembly Troubles part 1: WebAssembly Is Not a Stack Machine]]
- [ ] Experiment
  - [ ] [[https://wordpress.github.io/wordpress-playground/][Start here | WordPress Playground]]
  - [ ] [[https://tigerbeetle.com/blog/2023-07-11-we-put-a-distributed-database-in-the-browser/][We Put a Distributed Database In the Browser ‚Äì And Made a Game of It! | TigerBeetle]]
  - [ ] [[https://github.com/EmNudge/watlings][GitHub - EmNudge/watlings: Learn WebAssembly by writing small programs!]]
  - [ ] Read [[https://lobste.rs/s/ymnile/wasi_socket_extensions_for_go_1_21][this codebase]] also [[https://github.com/brunoluiz/imagewand/tree/main][code for this image conversion tool]]
** Other experiments with web that are worth
- [ ] [[https://news.ycombinator.com/item?id=32518211][The web is a harsh manager | Hacker News]]
- [ ] [[https://alan.norbauer.com/articles/browser-debugging-tricks#even-calls-only][67 Weird Debugging Tricks Your Browser]]
- [ ] [[https://darekkay.com/blog/static-site-comments/][Various ways to include comments on your static site]]
- [ ] [[https://news.ycombinator.com/item?id=36049386][Instant flood fill with HTML Canvas]]
- [ ] [[https://driftingin.space/posts/session-lived-application-backends][Session Backends | Drifting in Space]]
- [ ] [[https://blog.jim-nielsen.com/2022/website-fidelity/][Website Fidelity - Jim Nielsen‚Äôs Blog]]
** Get your web security right
- [ ] [[https://web.stanford.edu/class/cs253/][CS253 - Web Security]] (Course)
- [ ] [[https://thecopenhagenbook.com/][The Copenhagen Book]] (Book)
- [ ] [[https://htmx.org/essays/web-security-basics-with-htmx/][</> htmx ~ Web Security Basics (with htmx)]]
- [ ] [[https://www.youtube.com/watch?v=i7of02icPyQ][Everything You Ever Wanted to Know About Web Authentication]]
- [ ] [[https://blog.excalidraw.com/end-to-end-encryption/][End-to-End Encryption in the Browser | Excalidraw Blog]]
- [ ] Certificates
  - [ ] [[https://xargs.org/][Aiken & Driscoll & Webb]] (Illustrated TLS and QUIC) üåü
  - [ ] [[https://news.ycombinator.com/item?id=39190096][Why Certificate Lifecycle Automation Matters | Hacker News]]
  - [ ] [[https://letsencrypt.org/2024/03/14/introducing-sunlight.html][Introducing Sunlight, a CT implementation built for scalability, ease of operation, and reduced cost - Let's Encrypt]]
  - [ ] [[https://news.ycombinator.com/item?id=39129806][We build X.509 chains so you don't have to | Hacker News]]
  - [ ] https://news.ycombinator.com/item?id=41106205
  - [ ] [[https://news.ycombinator.com/item?id=39007384][Pwned Certificates on the Fediverse | Hacker News]]
  - [ ] [[https://lobste.rs/s/yk1zuk/certificate_authority_model_does_not][The Certificate Authority model does not work for LAN devices | Lobsters]]
  - [ ] [[https://hohnstaedt.de/xca/][X CA manager]]
  - [ ] [[https://azeemba.com/posts/certificate-authorities-and-the-fragility-of-internet-safety.html][Certificate Authorities and the Fragility of Internet Safety | Azeem Bande-Ali | azeemba.com]]
  - [ ] https://www.ccadb.org/
    - [ ] https://certstream.calidog.io/
    - [ ] https://crt.sh/?q=geekodour.org
  - [ ] [[https://news.ycombinator.com/item?id=37537689][Running one‚Äôs own root Certificate Authority in 2023 | Hacker News]]
- [ ] HTTPS
  - [ ] [[https://devonperoutky.super.site/blog-posts/mediocre-engineers-guide-to-https][Mediocre Engineer‚Äôs guide to HTTPS]]
  - [ ] [[https://lobste.rs/s/ersr1j/expanding_what_https_means][Expanding what HTTPS means | Lobsters]]
  - [ ] [[https://carrickbartle.com/certificates.html][TLS Certificate]]
  - [ ] [[https://matt.life/writing/the-acme-protocol-in-practice-and-reality#acme-servers-and-clients][The ACME Protocol in Practice and Reality ‚Äî Matt Holt]]
  - [ ] [[https://smallstep.com/blog/the-embarrassing-state-of-enterprise-acme/][The Embarrassing State of Enterprise ACME Support]]
  - [ ] [[https://raymii.org/s/software/Which_Root_Certificates_Should_You_Trust_CertInfo.html][Which Root Certificates should you trust? Find out with CertInfo - Raymii.org]]
  - [ ] [[https://news.ycombinator.com/item?id=38674415][Ask HN: Why SSL certs are not decentralized? | Hacker News]]
  - [ ] [[https://lobste.rs/s/vbsnup/filling_knowledge_gap_https_tls][Filling in the Knowledge Gap: HTTPS/TLS Certificates | Lobsters]]
  - [ ] [[https://trofi.github.io/posts/295-ssh-over-https.html][SSH over HTTPS]]
    - [ ] [[https://lobste.rs/s/svptcn/ssh3_ssh_using_http_3_quic][SSH3: ssh using HTTP/3 and QUIC | Lobsters]]
  - [ ] [[https://www.agwa.name/blog/post/roots_intermediates_and_resellers][The Difference Between Root Certificate Authorities, Intermediates, and Resellers]]
  - [ ] [[https://news.ycombinator.com/item?id=36673793][Shortening the Let's Encrypt chain of trust | Hacker News]]
  - [ ] [[https://textslashplain.com/2018/02/14/understanding-the-limitations-of-https/][Understanding the Limitations of HTTPS ‚Äì text/plain]]
  - [ ] [[https://news.ycombinator.com/item?id=36674224][Easy HTTPS for your private networks | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=36281001][HSTS preload adoption and challenges]]
  - [ ] [[https://blog.vnaik.com/posts/web-attacks.html][CSRF, CORS, and HTTP Security headers Demystified]]
  - [ ] [[https://ergomake.dev/blog/hsts-introduction/][The fascinating world of HTTP Strict-Transport-Security | Ergomake]]
  - [ ] [[https://lobste.rs/s/mwydlr/browsers_biggest_tls_mistake][The browsers biggest TLS mistake | Lobsters]]
  - [ ] [[https://letsencrypt.org/docs/challenge-types/][Challenge Types - Let's Encrypt]]
  - [ ] [[https://fly.io/blog/how-cdns-generate-certificates/][How CDNs Generate Certificates ¬∑ Fly]]
  - [ ] [[https://paul.totterman.name/posts/ssh-pki-web-pki/][SSH PKI on top of Web PKI | Paul's page]]
- [ ] TLS
  - [ ] [[https://www.cloudflare.com/learning/ssl/what-happens-in-a-tls-handshake/][What happens in a TLS handshake? | SSL handshake | Cloudflare]]
  - [ ] [[https://jade.fyi/blog/announcing-clipper/][Announcing Clipper: TLS-transparent HTTP debugging for native apps - jade's www site]]
  - [ ] [[https://blog.benjojo.co.uk/post/debug-ssl-tls-with-ssldump-https][MITM'ing TLS/SSL for debugging purposes]]
  - [ ] [[http://netsekure.org/2010/03/tls-overhead/][TLS overhead - netsekure rng]]
  - [ ] [[https://news.ycombinator.com/item?id=38829235][Merkle Town: Explore the certificate transparency ecosystem | Hacker News]]
  - [ ] [[https://blog.squarelemon.com/tls-fingerprinting/][SquareLemonm TLS Fingerprinting]]
- [ ] SNI
  - [ ] [[https://en.wikipedia.org/wiki/Server_Name_Indication][Server Name Indication - Wikipedia]]
  - [ ] [[https://www.agwa.name/blog/post/writing_an_sni_proxy_in_go][Writing an SNI Proxy in 115 Lines of Go]]
  - [ ] Things like green tunnel bypass SNI detection using things like http chunking etc.
- [-] CORS
  - [-] [[https://httptoolkit.tech/blog/cache-your-cors/][Cache your CORS, for performance & profit | HTTP Toolkit]]
  - [ ] [[https://httptoolkit.tech/blog/public-cdn-risks/][Public CDNs Are Useless and Dangerous | HTTP Toolkit]]
    - [ ] [[https://lobste.rs/s/ljheax/public_cdns_are_useless_dangerous_2021][Public CDNs Are Useless and Dangerous (2021) | Lobsters]]
  - [-] [[https://jub0bs.com/posts/2023-02-08-fearless-cors/][A design philosophy for CORS middleware libraries]]
  - [ ] [[https://eli.thegreenplace.net/2023/introduction-to-cors-for-go-programmers/][Introduction to CORS for Go programmers - Eli Bendersky's website]]
  - [X] [[https://lobste.rs/s/2qr2nf/cors_is_such_mess_what_are_current_best][CORS is such a mess. What are current best practices?]]
  - [X] [[https://github.com/simonw/public-notes/issues/2][Figuring out the state of the art in CSRF protection]]
- [-] CSRF
  - [-] [[https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html][Cross-Site Request Forgery Prevention]]
  - [X] [[https://www.reddit.com/r/netsec/comments/vb941p/the_state_of_csrf_vulnerability_in_2022/][The State of CSRF Vulnerability in 2022 : netsec]]
  - [X] [[https://simonwillison.net/2021/Aug/3/samesite/][Exploring the SameSite cookie attribute for preventing CSRF]]
  - [X] [[https://github.com/pillarjs/understanding-csrf][What are CSRF tokens and how do they work?]]
  - [X] [[https://blog.vnaik.com/posts/web-attacks.html][CSRF, CORS, and HTTP Security headers Demystified]]
  - [X] [[https://scotthelme.co.uk/i-turned-on-csp-and-all-i-got-was-this-crappy-lawsuit/][I turned on CSP and all I got was this crappy lawsuit!]]
* üêÇ HB05: Computer graphics
** Basics of CG
- [ ] [[https://fgiesen.wordpress.com/2011/07/09/a-trip-through-the-graphics-pipeline-2011-index/][A trip through the Graphics Pipeline 2011: Index | The ryg blog]]
  - [ ] [[https://felipefarinon.com/articles/qt-widgets-rendering-pipeline/][Qt Widgets Rendering Pipeline]]
  - [ ] [[https://news.ycombinator.com/item?id=38702271][The Linux graphics stack in a nutshell | Hacker News]]
- [ ] [[https://graphics.cs.utah.edu/courses/cs4600/fall2022/][CS 4600 - Fall 2022 - Introduction to Computer Graphics]] (Course)
- [ ] [[https://www.youtube.com/playlist?app=desktop&list=PLqCJpWy5Fohe8ucwhksiv9hTF5sfid8lA][3D Programming Fundamentals - YouTube]] (Series)
- [ ] [[https://gpuopen.com/learn/how_do_you_become_a_graphics_programmer/][How do I become a graphics programmer?]]
- [ ] [[https://news.ycombinator.com/item?id=40660761][The GJK Algorithm: A weird and beautiful way to do a simple thing | Hacker News]]
- [ ] [[https://graphics.cs.utah.edu/courses/cs6610/spring2022/][CS 5610/6610 - Interactive Computer Graphics]] (Course)
- [ ] [[https://thebookofshaders.com/][The Book of Shaders]] (Book)
  - [ ] [[https://www.mayerowitz.io/blog/a-journey-into-shaders][A Journey Into Shaders]]
- [ ] [[https://learnopengl.com/Introduction][LearnOpenGL - Introduction]]  (Book)
- [ ] [[http://www.e-cartouche.ch/content_reg/cartouche/interactiv/en/html/index.html][Animation and Interactivity]]
- [ ] [[https://mrl.cs.nyu.edu/~perlin/graphics/]]
- [ ] [[https://news.ycombinator.com/item?id=42962508][Simulating water over terrain | Hacker News]]
** Ray tracing
- [ ] [[https://news.ycombinator.com/item?id=33128495][How Ray Tracing works]]
- [ ] [[https://raytracing.github.io/books/RayTracingInOneWeekend.html][Ray Tracing in One Weekend]]
- [ ] [[https://github.com/ssloy/tinyrenderer/wiki][software rendering in 500 lines of code]]
- [ ] [[https://pbrt.org/][Physically Based Rendering: From Theory to Implementation]]
** WebGPU
- [ ] [[https://alain.xyz/blog/raw-webgpu][Raw WebGPU]]
- [ ] [[https://surma.dev/things/webgpu/][WebGPU ‚Äî All of the cores, none of the canvas]]
- [ ] [[https://toji.github.io/webgpu-gltf-case-study/][Efficiently rendering glTF models | WebGPU glTF Renderer Case Study]]
- [ ] [[https://web.dev/gpu-compute/][Get started with GPU Compute on the web]]
- [ ] [[https://unzip.dev/0x00f-webgpu/][0x00F - WebGPU üåå]]
- [ ] [[https://cohost.org/mcc/post/1406157-i-want-to-talk-about-webgpu][I want to talk about WebGPU]]
** Easings
- [[https://github.com/Michaelangel007/easing][GitHub - Michaelangel007/easing: Easing Tutorial and Optimizations]]
- [[https://easings.net/#][Easing Functions Cheat Sheet]]
- [[https://medium.com/swlh/youre-using-lerp-wrong-73579052a3c3][You‚Äôre Using Lerp Wrong.]]
** ThreeJS
- [[https://sbcode.net/threejs/][Three.js Tutorials]]
- [[https://www.youtube.com/watch?v=DPl34H2ISsk][I wish I knew this before using React Three Fiber]]
- [[https://github.com/pmndrs/drei][GitHub - pmndrs/drei: ü•â useful helpers for react-three-fiber]]
- [[https://www.youtube.com/watch?v=Isr-hIveUK0][React Three Fiber Camera's Explained]]
- [[https://www.youtube.com/watch?v=FGG0EeMNUl0][Build a 3D World in React with Three.js - {React Three Fiber Tutorial}]]
- [[https://blog.maximeheckel.com/posts/the-magical-world-of-particles-with-react-three-fiber-and-shaders/][The magical world of Particles with React Three Fiber and Shaders]]
* üîç HB06: Basic security knowledge upgrade
** Server, sessions and web
- [X] [[https://supertokens.com/blog/cookies-vs-localstorage-for-sessions-everything-you-need-to-know][Cookies vs browser storage for sessions]]
- [ ] [[https://news.ycombinator.com/item?id=34569726][Ask HN: Best Way to Mess with Hackers? | Hacker News]] (Need to implement)
- [ ] [[https://fly.io/blog/how-cdns-generate-certificates/][How CDNs Generate Certificates ¬∑ Fly]]
- [ ] [[https://rachelbythebay.com/w/2023/01/03/ssl/][Why I still have an old-school cert on my https site]]
- [ ] [[https://www.devever.net/~hl/clientcert][Client certificates aren't universally more secure]]
** OAuth and OIDC and Tokens
- [ ] OAuth2
  - [ ] [[https://www.oauth.com/][OAuth.com - OAuth 2.0 Simplified]] (Book)
  - [ ] [[https://danschnau.com/blog/this_blog_automatically_posts_to_the_fediverse][A simple application of OAuth: Mastodon's API - Dan Schnau dot com]]
  - [ ] [[https://eli.thegreenplace.net/2023/sign-in-with-github-in-go/][Sign in with GitHub in Go - Eli Bendersky's website]]
  - [ ] [[https://news.ycombinator.com/item?id=38720544][Google OAuth is broken (sort of) | Hacker News]]
  - [ ] [[https://www.scottbrady91.com/oauth/oauth-is-not-user-authorization][OAuth is Not User Authorization]]
  - [ ] [[https://news.ycombinator.com/item?id=38009291][Oh-Auth ‚Äì Abusing OAuth to take over millions of accounts | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=35713518][Why is OAuth still hard in 2023? | Hacker News]]
  - [ ] [[https://aaronparecki.com/oauth-2-simplified/][OAuth 2 Simplified ‚Ä¢ Aaron Parecki]]
  - [ ] [[https://evertpot.com/oauth2-usability/][Does OAuth2 have a usability problem? (yes!)]]
  - [ ] [[https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2][An Introduction to OAuth 2 | DigitalOcean]]
  - [ ] [[https://alexbilbie.com/guide-to-oauth-2-grants/][A Guide To OAuth 2.0 Grants - Alex Bilbie]]
  - [ ] [[https://www.polarsparc.com/xhtml/OAuth2-OIDC.html][Understanding OAuth2 and OpenID Connect]]
- [ ] OIDC
  - [ ] [[https://www.youtube.com/watch?v=g_aVPdwBTfw&list=PLshTZo9V1-aEUg2S84KlisJBAyMEoEZ45][What's New With OAuth and OIDC?]]
  - [ ] [[https://news.ycombinator.com/item?id=36481470][Why use OpenID Connect instead of plain OAuth2? | Hacker News]]
  - [ ] [[https://fusionauth.io/articles/identity-basics/what-is-oidc][What Is OpenID Connect (OIDC)?]]
  - [ ] [[https://www.youtube.com/watch?v=GyCL8AJUhww][Introduction to OAuth 2.0 and OpenID Connect]]
- [-] Others
  - [X] [[https://fly.io/blog/api-tokens-a-tedious-survey/][API Tokens: A Tedious Survey ¬∑ Fly]]
  - [X] [[https://news.ycombinator.com/item?id=37173339][Short session expiration does not help security | Hacker News]]
  - [ ] [[https://github.com/Kong/mashape-oauth/blob/master/FLOWS.md][mashape-oauth/FLOWS.md at master ¬∑ Kong/mashape-oauth]]
  - [ ] [[https://drewdevault.com/2020/06/12/Can-we-talk-about-client-side-certs.html][Can we talk about client-side certificates?]]
- [-] JWT
  - [ ] [[https://lobste.rs/s/xd9tq1/stateless_authentication_persistence][Stateless Authentication Persistence: Unpacking the Power of JWTs | Lobsters]]
  - [X] [[https://supertokens.com/blog/are-you-using-jwts-for-user-sessions-in-the-correct-way][Are you using JWTs for user sessions in the correct way?]]
  - [X] [[https://mikkel.ca/blog/digging-into-quebecs-proof-of-vaccination/][JWTs done right: Quebec's proof of vaccination - Mikkel Paulson]]
** For personal knowledge
- [ ] [[https://pwn.college/][pwn.college]] (Course)
- [ ] [[https://github.com/step-security/supply-chain-goat][step-security/supply-chain-goat]] (Course)
- [ ] [[https://github.com/chvancooten/maldev-for-dummies][chvancooten/maldev-for-dummies: A workshop about Malware Development]]
- [ ] [[https://www.trickster.dev/post/decrypting-your-own-https-traffic-with-wireshark/][Decrypting your own HTTPS traffic with Wireshark ‚Äì Trickster Dev]]
- TCPDump
  - [ ] [[https://nanxiao.github.io/tcpdump-little-book/][TCP Dump - little book]]
  - [ ] [[https://news.ycombinator.com/item?id=34623604][tcpdump is amazing (2016) | Hacker News]]
  - [ ] [[https://danielmiessler.com/study/tcpdump/][A tcpdump Tutorial with Examples]]
  - [ ] [[https://hackertarget.com/tcpdump-examples/][Tcpdump Examples - 22 Tactical Commands | HackerTarget.com]]
** Cryptography
- [ ] [[https://computerscience.paris/security/][CSCI-UA.9480: Introduction to Computer Security]] (Course)
- [ ] [[https://intensecrypto.org/public/index.html][An intensive introduction to cryptography]] (Book)
- [ ] [[https://cryptography101.ca/][Cryptography 101 with Alfred Menezes ‚Äì Video lectures, notes, and exercises in all areas of applied cryptography]]
- [ ] [[https://www.crypto101.io/][Crypto 101]] (Book)
- [ ] [[https://cryptobook.nakov.com/cryptography-overview][Practical Cryptography for Developers]] (Book)
- [ ] [[https://www.khanacademy.org/computing/computer-science/cryptography][Cryptography | Computer science | Computing | Khan Academy]]  (Course)
- [ ] [[https://azeemba.com/posts/intuition-for-cryptography.html][Intuition for Cryptography | Azeem Bande-Ali | azeemba.com]]
- [ ] [[https://soatok.blog/2020/11/14/going-bark-a-furrys-guide-to-end-to-end-encryption/][Going Bark: A Furry‚Äôs Guide to End-to-End Encryption]]
- [ ] [[https://soatok.blog/2021/06/11/on-the-word-nonce-in-cryptography-and-the-uk/][On the Word ‚ÄúNonce‚Äù in Cryptography and the UK - Dhole Moments]]
- [ ] https://gist.github.com/geekodour/fa5561f3873af9a3ff1e0675368e91a8
- [ ] [[https://soatok.blog/2020/06/10/how-to-learn-cryptography-as-a-programmer/][How To Learn Cryptography as a Programmer]]
- [ ] [[https://loup-vaillant.fr/articles/crypto-is-not-magic][Cryptography is not Magic]]
- [-] Passwords
  - [X] [[https://paragonie.com/blog/2015/08/you-wouldnt-base64-a-password-cryptography-decoded][You Wouldn't Base64 a Password - Cryptography Decoded - Paragon Initiative Enterprises Blog]]
  - [X] [[https://cfrg.github.io/draft-irtf-cfrg-opaque/draft-irtf-cfrg-opaque.html#name-ake-private-key-storage][The OPAQUE Asymmetric PAKE Protocol]]
  - [X] [[https://blog.cryptographyengineering.com/2018/10/19/lets-talk-about-pake/][Let‚Äôs talk about PAKE ‚Äì A Few Thoughts on Cryptographic Engineering]]
  - [X] [[https://www.cryptologie.net/article/503/user-authentication-with-passwords-whats-srp/][User authentication with passwords, What‚Äôs SRP?]]
  - [-] Hash
    - [X] [[https://pthree.org/2016/06/28/lets-talk-password-hashing/][Aaron Toponce : Let's Talk Password Hashing]]
    - [ ] [[https://notes.volution.ro/v1/2022/07/notes/1290a79c/][The many flavors of hashing : Volution Notes]]
    - [ ] [[https://indy.codes/having-fun-with-hash-collisions][Having fun with hash collisions]]
    - [ ] [[https://lobste.rs/s/hpr3ux/colliding_secure_hashes][Colliding Secure Hashes | Lobsters]]
    - [ ] [[https://news.ycombinator.com/item?id=36176461][Hash Functions | Hacker News]]
    - [ ] [[https://news.ycombinator.com/item?id=36401747][Hashing | Hacker News]]
    - [ ] [[https://tylerneylon.com/a/lsh1/][Introduction to Locality-Sensitive Hashing]]
* üê≤ HB07: Become functional
** Be at ease with Python
- [ ] [[https://www.fluentpython.com/][Fluent Python, the lizard book]] (Book)
- [ ] [[https://benhoyt.com/writings/python-api-design/][Designing Pythonic library APIs]]
- [ ] [[https://dabeaz-course.github.io/practical-python/][Welcome! | practical-python]]
- [ ] [[https://dev.arie.bovenberg.net/blog/python-datetime-pitfalls/][Ten Python datetime pitfalls, and what libraries are (not) doing about it | Arie Bovenberg]]
- [ ] [[https://github.com/dabeaz-course/python-mastery][GitHub - dabeaz-course/python-mastery: Advanced Python Mastery (course by @dabeaz)]]
- [ ] [[https://peps.python.org/pep-0703/][PEP 703 ‚Äì Making the Global Interpreter Lock Optional in CPython | peps.python.org]] üåü (Python GIL)
- [ ] [[https://blog.miguelgrinberg.com/post/the-ultimate-guide-to-error-handling-in-python][The Ultimate Guide to Error Handling in Python - miguelgrinberg.com]]
- [ ] [[https://lwn.net/Articles/947138/][Progress on no-GIL CPython [LWN.net]‚Äã]]
  - [ ] [[https://lwn.net/Articles/939981/][GIL removal and the Faster CPython project [LWN.net]‚Äã]]
- [ ] [[https://mathspp.com/blog/how-to-create-a-python-package-in-2022][How to create a Python package in 2022]]
- [ ] [[https://simonwillison.net/2023/Sep/30/cli-tools-python/][Things I‚Äôve learned about building CLI tools in Python]]
- [ ] [[https://snarky.ca/how-virtual-environments-work/][How virtual environments work]]
- [ ] [[https://pradyunsg.me/blog/2023/01/21/thoughts-on-python-packaging/][Thoughts on the Python packaging ecosystem | Pradyun Gedam]]
- [ ] [[https://www.reddit.com/r/Python/comments/wyl1lp/which_not_so_well_known_python_packages_do_you/][Python Packages (Not well known but good)]]
- [ ] [[https://simonwillison.net/2023/Sep/30/cli-tools-python/][Things I‚Äôve learned about building CLI tools in Python]]
- [ ] [[https://github.com/zedr/clean-code-python][zedr/clean-code-python: Clean Code concepts adapted for Python]]
- [ ] [[https://github.com/satwikkansal/wtfpython#usage][GitHub - satwikkansal/wtfpython: What the f*ck Python? üò±]] (Satwik all round A1 guy btw!)
- [-] [[https://death.andgravity.com/caching-methods][Caching a lot of methods in Python - death and gravity]]
- [-] [[https://pymotw.com/3/][Python 3 Module of the Week ‚Äî PyMOTW 3]]
- [ ] [[https://www.dabeaz.com/generators/][Generator Tricks for Systems Programmers]]
- [ ] [[https://www.youtube.com/watch?v=MCs5OvhV9S4][David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015 - YouTube]]
- [ ] https://github.com/dabeaz/blog/blob/main/2023/three-problems.md
- [ ] https://github.com/dabeaz/blog/blob/main/2023/different-refactoring.md
- [ ] [[https://www.youtube.com/watch?v=RZ4Sn-Y7AP8][David Beazley: Discovering Python - PyCon 2014 - YouTube]]
- [X] https://github.com/dabeaz/blog/blob/main/2021/barely-interface.md
- [X] [[https://realpython.com/python-namespaces-scope/][Namespaces and Scope in Python ‚Äì Real Python]]
- [X] [[https://medium.com/@petefison/a-crash-course-in-python-comprehensions-and-generators-f069c8f8ca38][A crash course in Python ‚Äúcomprehensions‚Äù and ‚Äúgenerators‚Äù]]
- [X] [[https://news.ycombinator.com/item?id=34432173][What new Python features are the most useful for you? | Hacker News]]
- [X] [[https://death.andgravity.com/stdlib?s=35][Learn by reading code: Python standard library design decisions explained]]
- [X] [[https://stackoverflow.com/questions/35572663/using-python-decorator-with-or-without-parentheses/35572746#35572746][Using python decorator with or without parentheses - Stack Overflow]]
- [X] [[https://news.ycombinator.com/item?id=34787092][Data Classification: Does Python still have a need for class without dataclass]]
- [X] [[https://docs.python-guide.org/][The Hitchhiker‚Äôs Guide to Python! ‚Äî The Hitchhiker's Guide to Python]]
- [X] [[https://lukeplant.me.uk/blog/posts/pythons-disappointing-superpowers/][Python‚Äôs ‚ÄúDisappointing‚Äù Superpowers - lukeplant.me.uk]]
- [X] [[https://www.bbayles.com/index/decorator_factory][Bo Bayles Annex - Yo, I heard you like decorators]]
** Be at ease with shell scripting and my local system
- [X] Spend time reading manuals for tools that I use
- [X] Get cheatsheets organized. Think shift from cheat to =org-mode+fzf+rg=
- [X] Setup some basic emacs snippets for shell scripting
  - [X] [[https://google.github.io/styleguide/shellguide.html#s2.1-file-extensions][Google bash style guide]]
  - [X] [[https://sharats.me/posts/shell-script-best-practices/][Shell Script Best Practices ‚Äî The Sharat's]]
  - [X] [[https://blog.yossarian.net/2020/01/23/Anybody-can-write-good-bash-with-a-little-effort][Anybody can write good bash]]
** Be building with Golang
- [-] Basics
  - [-] [[https://github.com/teivah/100-go-mistakes][GitHub - teivah/100-go-mistakes: üìñ 100 Go Mistakes and How to Avoid Them]]
  - [ ] [[https://lobste.rs/s/vhivpd/absurd_cost_finalizers_go][The absurd cost of finalizers in Go | Lobsters]]
    - [ ] [[https://lobste.rs/s/oicggq/go_s_error_handling_is_perfect_actually][Go‚Äôs Error Handling Is Perfect, Actually | Lobsters]]
  - [ ] [[https://www.zarl.dev/articles/enums][Go Enums Suck]]
  - [ ] [[https://flak.tedunangst.com/post/fixing-the-other-go-loop-bug][fixing the other go loop bug]]
  - [ ] [[https://news.ycombinator.com/item?id=42043939][Writing secure Go code | Hacker News]]
  - [ ] [[https://www.evanjones.ca/go-stack-traces.html][Debugging Go with stack traces (evanjones.ca)]]
  - [ ] [[https://news.ycombinator.com/item?id=39992058][How I write unit tests in Go | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=39299715][Context Control in Go | Hacker News]]
  - [ ] [[https://gosamples.dev/postgresql-intro/][A practical introduction to PostgreSQL in Go (Golang)]]
  - [ ] [[https://vladimir.varank.in/notes/2024/01/client-side-pagination-in-go-range-over-function-edition/][Client-side pagination in Go (range-over function edition) - Vladimir Varankin]]
  - [ ] [[https://lobste.rs/s/uezbog/interfaces_are_not_meant_for][Interfaces Are Not Meant for That | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=39318867][How I write HTTP services in Go after 13 years | Hacker News]] üåü
  - [ ] [[https://fideloper.com/go-http][How Golang Handles HTTP]]
  - [ ] [[https://eli.thegreenplace.net/2021/go-internals-invariance-and-memory-layout-of-slices/][Go internals: invariance and memory layout of slices - Eli Bendersky's website]]
  - [X] [[https://github.com/thanos-io/thanos/blob/main/docs/contributing/coding-style-guide.md][Thanos coding style guide]]
  - [X] [[https://go.dev/tour/list][A Tour of Go]]
  - [X] [[https://go.dev/doc/effective_go][Effective Go - The Go Programming Language]] (Book)
  - [X] [[https://lobste.rs/s/vngxbv/what_is_go_function_variable][What is a Go function variable? | Lobsters]]
  - [X] [[https://utcc.utoronto.ca/~cks/space/blog/programming/GoFinalizerCostsNotes][Chris's Wiki blog/programming/GoFinalizerCostsNotes]]
  - [X] [[https://go.dev/doc/faq][Frequently Asked Questions (FAQ) - The Go Programming Language]]
  - [X] [[https://www.youtube.com/watch?v=MRbhtMptago][What's the proper way to wrap errors in Go? - YouTube]]
  - [X] [[https://build-your-own.org/blog/20230316_go_full_slice/][a{low:high:max} in Golang ‚Äî A Rare Slice Trick | Blog | build-your-own.org]]
  - [X] [[https://quii.gitbook.io/learn-go-with-tests/][Learn Go with Tests - Learn Go with tests]] (Course)
  - [X] [[https://www.youtube.com/watch?v=PAAkCSZUG1c&t=757s][Gopherfest 2015 | Go Proverbs with Rob Pike - YouTube]]
- [-] More Basics
  - [X] [[https://echorand.me/posts/go-http-client-middleware/][Writing HTTP client middleware in Go]]
  - [ ] [[https://vishnubharathi.codes/blog/a-silly-mistake-that-i-made-with-io.teereader/][A silly mistake that I made with io.TeeReader]]
    - [ ] [[https://vishnubharathi.codes/blog/against-the-io.teereader/?s=35][Against the io.TeeReader]]
  - [X] [[https://www.alexedwards.net/blog/which-go-router-should-i-use][Which Go router should I use? (with flowchart)]]
  - [X] [[https://mrkaran.dev/posts/structured-logging-in-go-with-slog/][Structured logging in Go with slog]]
  - [X] [[https://blog.carlmjohnson.net/post/2021/how-to-use-go-embed/][How to Use //go:embed ¬∑ The Ethically-Trained Programmer]]
  - [ ] [[https://news.ycombinator.com/item?id=40764507][Interface Upgrades in Go (2014) | Hacker News]]
  - [ ] [[https://lobste.rs/s/0bpj0o/error_handling_go_web_apps_shouldn_t_be_so][Error handling in Go web apps shouldn't be so awkward | Lobsters]]
  - [ ] [[https://preslav.me/2024/04/23/two-reasons-to-prefer-struct-pointers-in-golang/][The Two Reasons I Prefer Passing Struct Pointers Around ¬∑ Preslav Rachev]]
- [-] Concurrency (Not super go specific)
  - [X] [[https://cs.lmu.edu/~ray/notes/introconcurrency/][introconcurrency]]
  - [ ] [[https://ankush.dev/p/tip-concurrency-schedule][Solving Concurrency Bugs Using Schedules and Imagination | Ankush Menat]]
  - [ ] [[https://greenteapress.com/wp/semaphores/][The Little Book of Semaphores ‚Äì Green Tea Press]] (Book, mostly pseudo, python and little c)
  - [ ] [[https://lobste.rs/s/wr8jxb/tips_for_concurrent_programming][Tips for concurrent programming | Lobsters]]
  - [ ] [[https://unskilled.blog/posts/preemption-in-go-an-introduction/][Preemption in Go: an introduction - Unskilled]]
  - [ ] [[https://www.youtube.com/watch?v=yiVOJqXTWfc][GopherCon Europe 2024: Raghav Roy - Using Formal Reasoning to Build Concurrent Go Systems - YouTube]]
  - [ ] [[https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful/][Notes on structured concurrency, or: Go statement considered harmful ‚Äî njs blog]]
  - [ ] [[http://concurrencyfreaks.blogspot.com/2023/09/how-to-not-invent-concurrent-algorithms.html?m=1][Concurrency Freaks: How to (not) invent concurrent algorithms]]
  - [ ] [[https://lobste.rs/s/b0e2nt/time_is_not_synchronization_primitive][Time is not a synchronization primitive | Lobsters]]
  - [ ] [[https://in.coursera.org/learn/golang-concurrency][Concurrency in Go]] (Course)
  - [ ] [[https://github.com/golang/go/wiki/LearnConcurrency][LearnConcurrency ¬∑ golang/go Wiki ¬∑ GitHub]]
  - [ ] [[https://github.com/loong/go-concurrency-exercises][loong/go-concurrency-exercises]]
  - [ ] [[https://lobste.rs/s/n7e9ui/how_itch_io_uses_coroutines_for_non][How itch.io uses Coroutines for non-blocking IO | Lobsters]]
  - [ ] [[https://www.youtube.com/watch?v=QVZK3dapshY][The Art of Concurrency in Go]] with [[https://github.com/jboursiquot/portscan][this]]
  - [ ] [[https://news.ycombinator.com/item?id=35881520][File Locks on Linux | Hacker News]]
- Data related
  - [ ] [[https://notes.eatonphil.com/2023-10-05-go-database-sql-overhead-on-insert-heavy-workloads.html][Go database driver overhead on insert-heavy workloads | notes.eatonphil.com]]
- [ ] Others
  - [[https://ryjo.codes/articles/a-simple-tcp-server-written-in-go-and-clips.html][ryjo.codes - A Simple TCP Server Written in Go and CLIPS]] üåü
** Other things
- [ ] [[https://eugeneyan.com/writing/push/][Push Notifications: What to Push, What Not to Push, and How Often]]
- [ ] [[https://death.andgravity.com/pwned][Has your password been pwned?]]
- [ ] [[https://census.dev/blog/external-garbage-collection][External Garbage Collection ‚Äî Census Engineering]]
- [ ] [[https://antonz.org/mastering-curl/][Mastering curl: interactive text guide]]
* üö¢ HB08: Server Admin and network troubleshooter
** Deploying systems
- [ ] [[https://stackoverflow.com/questions/29569021/can-one-cache-and-secure-a-rest-api-with-cloudflare][caching - Can one cache and secure a REST API with Cloudflare? - Stack Overflow]] üåü
- [ ] [[https://news.ycombinator.com/item?id=42743019][So you want to build your own data center | Hacker News]]
- [ ] [[https://linkedin.github.io/school-of-sre/][School Of SRE]] (Book)
- [-] Infrastructure as Code, Patterns and Practices w Python and Terraform (Book)
- [ ] [[https://news.ycombinator.com/item?id=37778496][Where does my computer get the time from? | Hacker News]] (NTP)
- [ ] [[https://substrate.tools/blog/terraform-best-practices-for-reliability-at-any-scale][Terraform best practices for reliability at any scale - Substrate]]
- [ ] [[https://lobste.rs/s/qvyf5k/can_we_make_idiot_proof_infrastructure][Can We Make Idiot-Proof Infrastructure pt1? | Lobsters]]
- [ ] [[https://jwiegley.github.io/git-from-the-bottom-up/][Git from the Bottom Up]]  (Book)
- [ ] https://github.com/jvns/nginx-playground/ (Read code, tiny app)
- [ ] [[https://sysadmins.co.za/achieving-high-availability-with-haproxy-and-keepalived-building-a-redundant-load-balancer/][Achieving High Availability with HAProxy and Keepalived]]
- [ ] [[https://theleo.zone/posts/linux-upskill/][Sysadmin basics revisit]]
- [ ] [[https://ghiculescu.substack.com/p/11-years-of-hosting-a-saas][11 years of hosting a SaaS - Alex Ghiculescu's Newsletter]]
- [ ] [[https://iximiuz.com/en/posts/devops-sre-and-platform-engineering/][DevOps, SRE, and Platform Engineering]]
- [ ] [[https://github.com/fpereiro/backendlore][How I write backends]]
  - [ ] [[https://www.youtube.com/watch?v=WL0jY51PQR8][Multiplatform Maps Built As Layers on Rust (with Ian Wagner) - YouTube]]
  - [ ] https://pilcrowonpaper.com/blog/middleware-auth/?s=03
  - [ ] [[https://lobste.rs/s/9xtcun/complex_systems_bridging_between_spec][Complex systems and bridging between spec and implementation | Lobsters]]
  - [ ] [[https://notes.billmill.org/blog/2024/06/Serving_a_billion_web_requests_with_boring_code.html][Serving a billion web requests with boring code - llimllib notes]]
- [ ] [[https://ayende.com/blog/201153-B/building-a-serverless-secured-dead-drop][Building a serverless secured dead drop - Ayende @ Rahien]]
- [ ] [[https://brandur.org/http-transactions][Using Atomic Transactions to Power an Idempotent API]]
- [ ] [[https://lobste.rs/s/mzlyyf/how_i_run_my_servers][How I run my servers | Lobsters]]
- [ ] [[https://alexkrupp.typepad.com/sensemaking/2021/06/django-for-startup-founders-a-better-software-architecture-for-saas-startups-and-consumer-apps.html#predictability][Django for Startup Founders]]
- [ ] [[https://pketh.org/how-kinopio-is-made.html][How Kinopio is Made]]
- [ ] [[https://www.figma.com/blog/rust-in-production-at-figma/][How Mozilla‚Äôs Rust dramatically improved our server-side performance]]
- [ ] [[https://github.com/futurice/backend-best-practices][futurice/backend-best-practices]]
- [ ] [[https://lobste.rs/s/bqpwz9/secret_inside_one_million_checkboxes][The secret inside One Million Checkboxes | Lobsters]]
- [ ] [[https://thmsmlr.com/cheap-infra?s=35][Cheap Infra]]
- [-] [[https://architecturenotes.co/datasette-simon-willison/][Arc Note: Datasette - Simon Willison]]
- [ ] [[https://crawshaw.io/blog/one-process-programming-notes?s=35][One process programming notes (with Go and SQLite)]]
- [ ] [[https://www.reaktor.com/blog/how-to-deal-with-life-after-heroku/][Life after Heroku: What's a dev to do? - Reaktor]]
- [ ] [[https://www.larrymyers.com/posts/nomad-and-traefik/][Deploying Containers using Nomad and Traefik]]
- [ ] [[https://www.netmeister.org/blog/ops-lessons.html][(A few) Ops Lessons We All Learn The Hard Way]]
** Maintaining Services
- [ ] [[https://architecturenotes.co/][Architecture Notes]] (Series)
- [ ] [[https://www.singularity6.com/news/software-architecture-of-palia][The Software Architecture of Palia]]
- [ ] [[https://alexcabal.com/posts/standard-ebooks-and-classic-web-tech][How Standard Ebooks serves millions of requests per month with a 2GB VPS; or, a paean to the classic web - Alex Cabal]]
- [ ] [[https://www.scylladb.com/2023/10/02/introducing-database-performance-at-scale-a-free-open-source-book/][Introducing ‚ÄúDatabase Performance at Scale‚Äù- ScyllaDB]] (Book)
- [ ] [[https://daverupert.com/2024/02/three-architectures/][A tale of three architectures - daverupert.com]]
- [ ] [[https://aws.amazon.com/architecture/well-architected/?wa-lens-whitepapers.sort-by=item.additionalFields.sortDate&wa-lens-whitepapers.sort-order=desc&wa-guidance-whitepapers.sort-by=item.additionalFields.sortDate&wa-guidance-whitepapers.sort-order=desc][AWS Well-Architected]] (AWS, Book/Workshop)
- [ ] [[https://www.jvt.me/posts/2024/04/12/use-renovate/][Why I recommend Renovate over any other dependency update tools ¬∑ Jamie Tanna | Software Engineer]]
- [ ] [[https://www.reddit.com/r/RedditEng/comments/11xx5o0/you_broke_reddit_the_piday_outage/][Reddit - Postmortem]]
- [ ] [[https://lobste.rs/s/tszzzl/dsls_are_waste_time][DSLs are a waste of time | Lobsters]]
- [ ] [[https://gregoryszorc.com/blog/2021/04/07/modern-ci-is-too-complex-and-misdirected/][Gregory Szorc's Digital Home | Modern CI is Too Complex and Misdirected]]
- [ ] [[https://www.maxcountryman.com/articles/delivering-value-with-platform-engineering][Delivering Value with Platform Engineering - Max Countryman]]
- [ ] [[https://coywolf.pro/webdev/cloudflare-stream/][How to leverage Cloudflare Stream for high-availability and low-cost video streaming]]
- [ ] [[https://zknill.io/posts/edge-database/][So, you want to deploy on the edge? - /dev/knill]]
- [ ] [[https://web.archive.org/web/20190720064413/https://jbd.dev/prod-debugging/][Debugging in production ¬∑ jbd.dev]]
- [ ] [[https://surfingcomplexity.blog/2022/11/25/cache-invalidation-really-is-one-of-the-hardest-things-in-computer-science/][Cache invalidation really is one of the hardest problems in computer science ‚Äì Surfing Complexity]]
  - [ ] [[https://news.ycombinator.com/item?id=39093109][Caches: LRU vs. Random (2014) | Hacker News]]
- [ ] [[https://jbd.dev/debugging-latency/][Debugging latency ¬∑ jbd.dev]]
- [ ] [[https://brianschrader.com/archive/why-all-my-servers-have-an-8gb-empty-file/][Why All My Servers Have an 8GB Empty File]]
- [ ] [[https://news.ycombinator.com/item?id=34635129][Ask HN: Is a self-MitM HTTPS proxy that injects API keys useful?]]
- [ ] [[https://bas.codes/posts/aws-architecture-overengineering][Understanding AWS Services for Modern Cloud Architectures - Bas codes]]
- [ ] [[https://stackoverflow.com/questions/8888834/what-is-the-best-way-to-determine-the-number-of-threads-to-fire-off-in-a-machine][Determine the number of threads to fire off in a machine w n cores]]
- [ ] [[https://two-wrongs.com/event-sourcing-and-microservices-unix-style.html][Event Sourcing and Microservices ‚Äì Unix Style]]
- [ ] [[https://engineering.zalando.com/posts/2019/04/how-to-set-an-ideal-thread-pool-size.html][How to set an ideal thread pool size]]
- [ ] [[https://www.lockedinspace.com/posts/001.html][General guidance when working as a cloud engineer]]
- [ ] [[https://github.com/leandromoreira/cdn-up-and-running][leandromoreira/cdn-up-and-running]]
- [ ] [[https://github.com/learn-video/rtmp-live][Learn how to build a simple streaming platform based on the Real Time Messaging Protocol]]
- [ ] [[https://twitter.com/subhashchy/status/1536769406801309696][Dukaan vs Shopify]]
- [ ] Retries
  - [ ] [[https://encore.dev/blog/retries][Retries ‚Äì An interactive study of common retry methods]]
  - [ ] [[https://lobste.rs/s/2sixlc/timeouts_cancellation_for_humans_2018][Timeouts and cancellation for humans (2018) | Lobsters]]
  - [ ] [[https://www.schneems.com/2020/07/08/a-fast-car-needs-good-brakes-how-we-added-client-rate-throttling-to-the-platform-api-gem/][A Fast Car Needs Good Brakes]]
- [-] Rate limiting
  - [ ] [[https://redis.com/glossary/rate-limiting/][Rate Limiting - What is Rate Limiting? | Redis]]
  - [-] [[https://blog.fluxninja.com/blog/why-adaptive-rate-limiting-is-a-game-changer][Why Adaptive Rate Limiting is a Game-Changer | FluxNinja]]
  - [ ] [[https://www.youtube.com/watch?v=m64SWl9bfvk]["Stop Rate Limiting! Capacity Management Done Right" by Jon Moore - YouTube]]
  - [ ] [[https://dotat.at/@/2024-08-30-gcra.html][GCRA: leaky buckets without the buckets ‚Äì Tony Finch]]
  - [ ] See mogoz page on rate-limiting
- [ ] Load Balancing
  - [ ] [[https://samwho.dev/load-balancing/][Load Balancing Animations]]
  - [ ] [[https://blog.envoyproxy.io/introduction-to-modern-network-load-balancing-and-proxying-a57f6ff80236][Introduction to modern network load balancing and proxying]]
  - [ ] [[https://thehftguy.com/2016/10/03/haproxy-vs-nginx-why-you-should-never-use-nginx-for-load-balancing/][HAProxy vs nginx: Why you should NEVER use nginx for load balancing]]
  - [ ] [[https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/][Scaling a Web Service: Load Balancing]]
  - [ ] [[https://www.browserless.io/blog/managing-concurrencies-with-nginx-and-lua][How we manage individual user concurrencies with Nginx and Lua]]
  - [ ] [[https://www.browserless.io/blog/horizontally-scaling-chrome][Scaling Puppeteer and Chrome Horizontally]]
- [ ] Planning
  - [[https://jvns.ca/blog/2015/03/15/nancy-drew-and-the-case-of-the-slow-program/][Nancy Drew and the Case of the Slow Program]]
  - [[https://jvns.ca/blog/2016/03/20/how-do-you-do-capacity-planning/][How do you do capacity planning?]]
- [ ] SLO
  - [ ] [[https://last9.io/blog/a-practical-guide-to-implementing-slos/][A practical guide for implementing SLO | Last9]]
  - [ ] [[https://fiberplane.com/blog/an-adventure-with-slos-generic-prometheus-alerting-rules-and-complex-promql-queries][An adventure with SLOs, generic Prometheus alerting rules]]
- [ ] Scalability
  - [ ] [[https://motherduck.com/blog/the-simple-joys-of-scaling-up/?s=35][The Simple Joys of Scaling Up]]
  - [ ] [[https://blog.acolyer.org/2015/06/05/scalability-but-at-what-cost/][Scalability! But at what COST? | the morning paper]]
  - [ ] [[https://waseem.substack.com/p/scalability-is-overrated][Scalability is overrated - by Waseem Daher]]
  - [ ] [[http://widgetsandshit.com/teddziuba/2008/04/im-going-to-scale-my-foot-up-y.html][I'm Going To Scale My Foot Up Your Ass]]
  - [ ] [[https://news.ycombinator.com/item?id=35684874][Keep the monolith, but split the workloads | Hacker News]]
- [ ] Understand could costs
  - [ ] [[https://news.ycombinator.com/item?id=34633657][Ask HN: Aren‚Äôt high Egress fees clearly anti competitive? | Hacker News]]
** Containers
- [-] Containers
  - [ ] The podman manning (Book)
  - [-] https://github.com/containers/podman/blob/main/docs/tutorials/performance.md
  - [X] [[https://news.ycombinator.com/item?id=40352426][Using ARG in a Dockerfile ‚Äì beware the gotcha | Hacker News]]
  - [-] [[https://news.ycombinator.com/item?id=38181346][Go, Containers, and the Linux Scheduler | Hacker News]]
  - [ ] [[https://ikouchiha47.github.io/2024/02/05/how-containers-work.html][Troubleshooting containers - iko's logs]]
  - [X] [[https://earthly.dev/blog/chroot/][Containers are chroot with a Marketing Budget - Earthly Blog]]
  - [X] [[https://fzakaria.com/2020/05/31/containers-from-first-principles.html][Containers from first principles]]
  - [ ] [[https://blog.jessfraz.com/post/containers-zones-jails-vms/][Ramblings from Jessie: Setting the Record Straight: containers vs. Zones]]
  - [ ] [[https://news.ycombinator.com/item?id=38714607][How to Escape a Container | Hacker News]]
  - [X] [[https://blog.kintoandar.com/2018/01/Building-healthier-containers.html][Building healthier containers - kintoandar]]
  - [X] [[https://jvns.ca/blog/2016/10/10/what-even-is-a-container/][What even is a container: namespaces and cgroups]]
  - [X] [[https://iximiuz.com/en/posts/container-learning-path/][Learning Containers From The Bottom Up]]
  - [-] Deep dives
    - [-] [[https://github.com/saschagrunert/demystifying-containers][saschagrunert/demystifying-containers]]
    - [ ] [[https://www.schutzwerk.com/blog/linux-container-intro/][An Introduction to Linux Containers - SCHUTZWERK]]
    - [ ] [[https://medium.com/@teddyking/linux-namespaces-850489d3ccf][Linux Namespaces. Part 1 of the ‚ÄúNamespaces in Go‚Äù]]
  - [ ] Liz
    - [ ] [[https://www.youtube.com/watch?v=oSlheqvaRso][Liz Rice - Containers from scratch - YouTube]]
    - [ ] [[https://www.youtube.com/watch?v=jeTKgAEyhsA][Rootless Containers from Scratch - Liz Rice, Aqua Security - YouTube]]
    - [ ] [[https://www.youtube.com/watch?v=_TsSmSu57Zo][Containers from scratch: The sequel - Liz Rice (Aqua Security) - YouTube]]
- [-] Docker
  - [-] [[https://pythonspeed.com/docker/][Production-ready Docker packaging for Python developers]]
  - [ ] [[https://news.ycombinator.com/item?id=39277451][BuildKit in depth: Docker&#x27;s build engine explained | Hacker News]]
  - [X] [[https://computer.rip/2023-03-24-docker.html][Computers Are Bad: Docker]]
  - [X] [[https://lobste.rs/s/a7ndkr/docker_oci_container_ecosystem][Docker and the OCI container ecosystem]]
  - [X] [[https://news.ycombinator.com/item?id=34533930][Rails on Docker | Hacker News]]
  - [X] [[https://ochagavia.nl/blog/crafting-container-images-without-dockerfiles/][Crafting container images without Dockerfiles | Adolfo Ochagav√≠a]]
  - [X] [[https://docs.docker.com/engine/install/linux-postinstall/][Linux post-installation steps for Docker Engine | Docker Documentation]]
  - [X] [[https://docs.docker.com/engine/security/rootless/][Run the Docker daemon as a non-root user (Rootless mode) | Docker Documentation]]
  - [X] [[https://docs.docker.com/engine/security/#docker-daemon-attack-surface][Docker security | Docker Documentation]]
  - [X] [[https://blog.vnaik.com/posts/securing-docker.html][Securing Docker Containers]]
** Kubernetes
- [ ] [[https://github.com/jamiehannaford/what-happens-when-k8s][jamiehannaford/what-happens-when-k8s]]
- [ ] [[https://www.davd.io/posts/2024-03-20-kubernetes-and-back-why-i-dont-run-distributed-systems/][Kubernetes and back - Why I don't run distributed systems - davd.io]]
- [ ] [[https://news.ycombinator.com/item?id=37443404][Bare-Metal Kubernetes, Part I: Talos on Hetzner | Hacker News]]
- [ ] [[https://lobste.rs/s/wjitaf/why_kubernetes_needs_lts][Why Kubernetes needs an LTS | Lobsters]]
- [ ] [[https://questdb.io/blog/databases-on-k8s/][Running Databases on Kubernetes | QuestDB]]
- [ ] [[https://danpalmer.me/2021-03-20-kubernetes-is-not-a-hosting-platform/][Kubernetes is Not a Hosting Platform ‚Äî Dan Palmer]]
- [ ] [[https://lobste.rs/s/wtz8pg/upgrading_kubernetes_methodology][Upgrading Kubernetes - Methodology | Lobsters]]
- [ ] [[https://www.atomiccommits.io/everything-useful-i-know-about-kubectl][everything-useful-i-know-about-kubectl]]
** Oops! Observability
- [-] General
  - [X] [[https://john-millikin.com/sre-school/health-checking][SRE School: Health Checking]]
  - [X] [[https://philbooth.me/blog/six-ways-to-shoot-yourself-in-the-foot-with-healthchecks][Six ways to shoot yourself in the foot with healthchecks]]
  - [X] [[https://john-millikin.com/sre-school/instrumentation][SRE School: Instrumentation]]
  - [ ] [[https://john-millikin.com/sre-school/no-haunted-forests][SRE School: No Haunted Forests]]
  - [ ] [[https://github.com/sirupsen/napkin-math][Techniques and numbers for estimating system's performance from first-principles]]
  - [X] [[https://archive.is/nlN5B][Observability replacing monitoring?]]
  - [ ] [[https://www.polarsignals.com/blog/posts/2023/03/28/how-to-read-icicle-and-flame-graphs/][Ice and Fire: How to read icicle and flame graphs]]
  - [X] [[https://news.ycombinator.com/item?id=32037356][Monitoring tiny web services | Hacker News]]
- [-] Tactical
  - [ ] [[https://www.youtube.com/watch?v=lJ8ydIuPFeU]["How NOT to Measure Latency" by Gil Tene - YouTube]]
    - [ ] [[https://www.evanjones.ca/network-latencies-2021.html?s=35][Network Latencies in the Data Center (evanjones.ca)]]
  - [ ] [[https://encore.dev/blog/building-for-failure][Building for Failure: Hidden dangers in Event-Driven Systems ‚Äì Encore Blog]]
  - [ ] [[https://github.com/librariesio/metrics][librariesio/metrics: What to measure, how to measure it.]] (this is not really about telemetry)
  - [ ] [[https://www.bwplotka.dev/2021/correlations-exemplars/][Correlating Signals Efficiently in Modern Observability]]
  - [-] [[https://sirupsen.com/metrics][Metrics For Your Web Application's Dashboards]]
  - [X] [[https://lobste.rs/s/qiy7if/monitoring_is_pain][Monitoring is a Pain | Lobsters]]
  - [X] [[https://archive.is/Bc8iY][the two drivers of cardinality.]]
  - [X] [[https://medium.com/keepalerting/current-problems-in-the-alerting-space-8805f8a2419d][Current problems in the alerting space]]
- [ ] Advanced stuff
  - [ ] [[https://brendangregg.com/blog/2021-07-03/how-to-add-bpf-observability.html][How To Add eBPF Observability To Your Product]]
  - [ ] [[https://www.earth.li/~noodles/blog/2023/01/finally-using-bpftrace.html][Finally making use of bpftrace]]
  - [ ] [[https://www.markhansen.co.nz/profilerpedia/][Profilerpedia: A map of the Software Profiling Ecosystem]]
- [-] Prometheus
  - [ ] [[https://engineering.prezi.com/how-using-availability-zones-can-eat-up-your-budget-our-journey-from-prometheus-to-be8a816f7efe][How using Availability Zones can eat up your budget ‚Äî our journey from Prometheus to VictoriaMetrics]]
  - [ ] [[https://fly.io/blog/measuring-fly/][Fly's Prometheus Metrics ¬∑ Fly]]
  - [X] [[https://lobste.rs/s/xeubho/why_are_prometheus_queries_hard][Why are Prometheus queries hard? | Lobsters]]
  - [X] [[https://www.youtube.com/watch?v=STVMGrYIlfg][Introduction to the Prometheus Monitoring System]]
- [X] [[https://www.parseable.io/blog/log-ecosystem-overview][A deep dive into logging ecosystem | Parseable]]
** Oh CI/CD
- [ ] [[https://archive.is/0QsIk][Critical differences between what we‚Äôll refer to as ‚Äúlocal CD‚Äù and ‚Äúglobal CD]]
- [ ] [[https://makefiletutorial.com/][Makefile Tutorial By Example]] | [[https://gist.github.com/isaacs/62a2d1825d04437c6f08][another makefile tutorial]]
- [ ] [[http://gromnitsky.users.sourceforge.net/articles/notes-for-new-make-users/#4b6d995-dont-try-to-be-clever][Notes for new Make users]]
- [ ] [[https://daniel.haxx.se/blog/2023/02/01/curls-use-of-many-ci-services/][curl‚Äôs use of many CI services | daniel.haxx.se]]
- [ ] [[https://lobste.rs/s/mm7fcy/ideal_ci_cd_system][An Ideal CI/CD System | Lobsters]]
** Network must be up!
- [ ] General Networking
  - [ ] [[https://book.systemsapproach.org/index.html][Computer Networks: A Systems Approach]] (Book)
  - [ ] [[https://beta.computer-networking.info/syllabus/default/index.html][Computer Networking : Principles, Protocols and Practice]]
  - [ ] [[https://networkengineering.stackexchange.com/questions/35618/relation-between-ethernet-and-802-11-headers][vlan - Relation between Ethernet and 802.11 headers]]
  - [ ] [[https://www.youtube.com/playlist?list=PLWl7jvxH18r3nnotitKkyAjq268PQGc0-][CS-340 Intro to Computer Networking - YouTube]] (course)
  - [ ] [[https://explained-from-first-principles.com/internet/][The Internet explained from first principles]]
  - [ ] [[https://fgiesen.wordpress.com/2014/03/25/networks-all-the-way-down-part-2/][Networks all the way down, part 2. | The ryg blog]]
  - [ ] [[https://it-notes.dragas.net/2024/07/15/bridging-networks-across-vps-wireguard-vxlan-freebsd/][Bridging Networks Across VPS With Wireguard and VXLAN on FreeBSD - IT Notes]]
  - [ ] [[https://blog.benjojo.co.uk/post/ixp-xping-better-ix-monitoring][Better IX network quality monitoring]]
- [ ] IP
  - [ ] [[https://news.ycombinator.com/item?id=33894933][Tell HN: IPv6-only still pretty much unusable | Hacker News]]
  - [ ] [[https://lobste.rs/s/6xaeam/ipv6_is_disaster_we_can_fix_it][IPv6 Is A Disaster (but we can fix it) | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=35041829][I spent a week without IPv4 to understand IPv6 transition mechanisms]]
- [ ] What happens when
  - [ ] https://github.com/alex/what-happens-when
  - [ ] [[https://lobste.rs/s/563zjp/how_does_linux_machine_connect_internet][How does a Linux machine connect to the internet, really? | Lobsters]]
  - [ ] [[https://kamila.is//teaching/how-routers-work/][How do Routers Work, Really?]]
  - [ ] [[https://how-did-i-get-here.net/][How Did I Get Here?]]
  - [ ] [[https://syedali.net/2013/08/18/what-happens-when-you-type-in-www-cnn-com-in-your-browser/][What happens when you type in ‚Äòwww.cnn.com‚Äô]]
  - [ ] [[https://dotat.at/@/2023-05-26-whence-time.html][Where does my computer get the time from? ‚Äì Tony Finch]]
  - [ ] [[https://news.ycombinator.com/item?id=42233565][A Day in the Life: The Global BGP Table | Hacker News]]
- [ ] Tailscale
  - [ ] [[https://mrpowergamerbr.com/us/blog/2023-03-20-untangling-your-network-tailscale-in-docker-compose/][Untangling your Network and Services: Tailscale in Docker Compose ‚Ä¢ MrPowerGamerBR]]
  - [ ] [[https://tailscale.dev/blog/docker-mod-tailscale][Introducing the Tailscale Universal Docker Mod]]
  - [ ] [[https://soatok.blog/2023/10/10/a-plan-for-multicast-support-in-noise-based-protocols/][A Plan for Multicast Support in Noise-based Protocols - Dhole Moments]] üåü
  - [ ] [[https://securitycryptographywhatever.com/2023/04/22/mls/][Messaging Layer Security (MLS) with Raphael Robert]]
** What's up DNS?
- [-] [[https://jvns.ca/blog/2023/07/28/why-is-dns-still-hard-to-learn/][Why is DNS still hard to learn?]]
- [ ] [[https://news.ycombinator.com/item?id=42402079][The secret life of DNS packets (2019) | Hacker News]]
- [-] [[https://www.netmeister.org/blog/dns-rrs.html][(All) DNS Resource Records]]
- [ ] [[https://twitter.com/thej/status/1517881933329436672][Using dig]]
- [ ] [[https://www.freesoft.org/CIE/Course/Section2/index.htm][Section 2 - Domain Naming]] (Chapter)
- [ ] [[https://jvns.ca/blog/how-updating-dns-works/][What happens when you update your DNS?]]
- [ ] [[https://www.youtube.com/watch?v=ANmFZ8rbmnc][Toying with DNS | Kailash Nadh | India FOSS 3.0 | FOSS United - YouTube]]
- [ ] [[https://status.openai.com/incidents/ctrsv3lwd797][OpenAI Status - API, ChatGPT & Sora Facing Issues]]
- [ ] [[https://jvns.ca/blog/2021/12/06/dns-doesn-t-propagate/][DNS "propagation" is actually caches expiring]]
- [ ] [[https://www.nslookup.io/learning/][Learning Center ‚Äî NsLookup.io]] (Nice Series, Read all of it)
- [ ] [[https://www.zytrax.com/books/dns/][DNS for Rocket Scientists]] (Book)
- [ ] Implementing
  - [ ] [[https://news.ycombinator.com/item?id=35916064][Implement DNS in a Weekend | Hacker News]]
  - [ ] [[https://www.youtube.com/watch?v=tsxjNsFu_2g][RubyConf Mini 2022: Keynote: Learning DNS by Julia Evans - YouTube]]
  - [ ] [[https://github.com/EmilHernvall/dnsguide][A guide to writing a DNS Server from scratch]]
  - [ ] [[https://jvns.ca/blog/2022/11/06/making-a-dns-query-in-ruby-from-scratch/][Making a DNS query in Ruby from scratch]]
  - [ ] Experiment with [[https://github.com/yarrick/iodine][iodine]]
  - [ ] [[https://lobste.rs/s/5c1dl1/file_distribution_over_dns_ab_using_dns_as][File distribution over DNS: (ab)using DNS as a CDN | Lobsters]]
- [ ] Case studies
  - [ ] [[https://lobste.rs/s/wdcoab/logs_told_us_it_was_dns_it_looked_like_dns_it][Logs Told Us It Was DNS, It Looked like DNS, It Had to Be DNS, It Wasn't DNS]]
  - [ ] [[https://lobste.rs/s/zvpabd/intercepting_t_co_links_using_dns][Intercepting t.co links using DNS rewrites | Lobsters]]
  - [ ] [[https://blog.apnic.net/2022/02/15/journeying-into-xdp-fully-fledged-dns-service-augmentation/][Journeying into XDP: Fully-fledged DNS service augmentation | APNIC Blog]]
  - [ ] [[https://news.ycombinator.com/item?id=34691313][DNS0: The European public DNS that makes your internet safer]]
  - [ ] [[https://blog.replit.com/dns][Replit - Why We Built Our Own DNS Infrastructure]]
  - [ ] [[https://blog.adamchalmers.com/making-a-dns-client/][What I learned from making a DNS client in Rust]]
  - [ ] [[https://blog.apnic.net/2020/08/21/chromiums-impact-on-root-dns-traffic/][Chromium‚Äôs impact on root DNS traffic | APNIC Blog]]
  - [ ] [[https://jameshfisher.com/2017/02/08/how-does-geodns-work/][How does GeoDNS work?]]
  - [ ] [[https://news.ycombinator.com/item?id=33647689][Hardening unused (sub)domains | Hacker News]]
  - [ ] [[https://lobste.rs/s/5px6cu/io_domains_considered_harmful][.io domains considered harmful | Lobsters]]
  - [ ] [[https://blog.benjojo.co.uk/post/the-death-of-a-tld][The death of a TLD]]
  - [ ] [[https://tailscale.com/blog/sisyphean-dns-client-linux/?s=09][The Sisyphean Task Of DNS Client Config on Linux ¬∑ Tailscale]]
- [ ] Deeper fax
  - [ ] [[https://blog.benjojo.co.uk/post/dns-resolvers-ttl-lasts-over-one-week][Just how long do DNS resolvers cache last?]]
  - [ ] [[https://blog.cloudflare.com/introducing-cname-flattening-rfc-compliant-cnames-at-a-domains-root/][Introducing CNAME Flattening: RFC-Compliant CNAMEs]]
  - [ ] [[https://news.ycombinator.com/item?id=33527642][Stop using low DNS TTLs (2019) | Hacker News]]
  - [ ] [[https://blog.hboeck.de/archives/904-Please-do-not-put-IP-addresses-into-DNS-MX-records.html][Please do not put IP addresses into DNS MX records]]
  - [ ] [[https://www.netmeister.org/blog/dns-size.html][DNS Response Size]]
- mDNS
  - [ ] [[https://fabiensanglard.net/mdns/index.html][mDNS Primer]]
  - [ ] [[https://unix.stackexchange.com/questions/459991/how-to-configure-systemd-resolved-for-mdns-multicast-dns-on-local-network][How to configure systemd-resolved for mdns multicast dns on local network?]]
  - [ ] [[https://wiki.archlinux.org/title/VLC_media_player#Chromecast_support][VLC media player - ArchWiki]] (See Chromecast support)
* üêî HB09: Remove database fear
** DB general knowledge
- [-] Stanford intro to DB course (HDD/Course)
- [-] [[https://15445.courses.cs.cmu.edu/fall2019/][CMU 15-445/645 - Intro to Database Systems (Fall 2019)]] (Course, Updated 2022!)
- [ ] [[https://cs186berkeley.net/][Home - CS 186]] (Course)
- [ ] [[https://15799.courses.cs.cmu.edu/spring2025/][CMU 15-799 Special Topics in Databases: Query Optimization (Spring 2025)]]
- [ ] [[https://kb.databasedesignbook.com/posts/google-calendar/][Database Design for Google Calendar: a tutorial | Database Design Book]] üåü
- [ ] [[https://github.com/timelinize/timelinize/wiki/Schema][Database design of Timelinize]]
- [ ] [[https://project-a.github.io/on-site-search-design-patterns-for-e-commerce/][On-site search design patterns for e-commerce: schema structure, data driven ranking & more]]
- [ ] [[https://tontinton.com/posts/database-fundementals/][Database Fundamentals]]
- [X] [[https://rakyll.medium.com/things-i-wished-more-developers-knew-about-databases-2d0178464f78][Things I Wished More Developers Knew About Databases]]
- [X] [[https://blog.whimslab.io/how-modern-sql-databases-are-changing-web-development-4d1f15b0daea][How Modern SQL Databases Are Changing Web Development]]
- [X] [[https://architecturenotes.co/things-you-should-know-about-databases/][Relational Databases Explained]]
- [X] [[https://www.evanjones.ca/ordered-vs-unordered-indexes.html][Why databases use ordered indexes but programming uses hash tables]]
- [-] [[https://dineshgowda.com/posts/demystifying-database-transcations/][Demystifying Database Transcations | Dinesh Gowda]]
- [-] [[https://borretti.me/article/sketch-post-orm][Sketch of a Post-ORM]]
- [X] [[https://www.damirsystems.com/sql-x-to-y/][What is the correct way to model]]
- [-] Normalization
  - [X] [[https://news.ycombinator.com/item?id=35924259][I stopped worrying and learned to love denormalized tables]]
  - [X] [[https://news.ycombinator.com/item?id=36422637][Ask HN: When denormalize is preferred instead normalization? | Hacker News]]
  - [ ] [[https://www.damirsystems.com/grok-normalization/][Gork Normalization]]
  - [X] [[https://datademythed.com/posts/the-case-against-denormalization/][The Case Against Denormalization -Data Demythed]]
- [-] Primary Keys
  - [X] [[https://news.ycombinator.com/item?id=34175639][ULIDs and Primary Keys | Hacker News]]
  - [X] [[https://supabase.com/blog/choosing-a-postgres-primary-key][Choosing a Postgres Primary Key]]
  - [ ] [[https://instagram-engineering.com/sharding-ids-at-instagram-1cf5a71e5a5c][Sharding & IDs at Instagram. With more than 25 photos and 90 likes‚Ä¶ | by Instagram Engineering | Instagram Engineering]]
** SQL Basics
- [-] [[https://news.ycombinator.com/item?id=38723509][Do you really need foreign keys? | Hacker News]]
- [ ] [[https://sqlbolt.com/][SQLBolt - Learn SQL - Introduction to SQL]]
- [-] [[https://datasette.io/tutorials/learn-sql][Learn SQL with Datasette - Tutorial]]
- [ ] [[https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html][SQL Injection Prevention - OWASP Cheat Sheet Series]]
- [ ] https://github.com/remysucre/blog/blob/main/posts/sql-eq.md
- [ ] [[https://buttondown.email/jaffray/archive/the-case-of-a-curious-sql-query/][The Case of a Curious SQL Query ‚Ä¢ Buttondown]]
- [ ] [[https://news.ycombinator.com/item?id=37641628][Upsert in SQL | Hacker News]]
- [ ] [[https://www.reddit.com/r/SQL/comments/g4ct1l/what_are_some_good_resources_to_practice_sql/][What are some good resources to practice SQL? (Practice through exercises)]]
- [ ] [[https://news.ycombinator.com/item?id=37118633][Python: Just Write SQL | Hacker News]]
- [ ] [[https://forta.com/2023/07/10/how-to-generate-sql-statements-with-chatgpt/][How To Generate SQL Statements with ChatGPT ‚Äì Ben Forta]]
- [ ] [[http://peter.eisentraut.org/blog/2023/09/20/grouping-digits-in-sql][Grouping digits in SQL | Peter Eisentraut]]
- [ ] [[https://news.ycombinator.com/item?id=34602318][Ask HN: How do you test SQL? | Hacker News]]
- [ ] [[https://www.dolthub.com/blog/2020-06-01-learn-sql-dolt/][Learn SQL with Real Data using Dolt | DoltHub Blog]]
** Context on DBs
- [ ] Architecture of a Database System (Book)
- [ ] Readings in Database Systems (Book)
- [ ] [[https://www.youtube.com/watch?v=bTEfRmdBq7I&t=457s][Wide Column Store NoSQL vs SQL Data Modeling - YouTube]]
- [ ] [[http://muratbuffalo.blogspot.com/2024/01/scalable-oltp-in-cloud-whats-big-deal.html][Scalable OLTP in the Cloud: What‚Äôs the BIG DEAL?]]
  - [ ] [[https://notes.eatonphil.com/2024-02-08-an-intuition-for-distributed-consensus-in-oltp-systems.html][An intuition for distributed consensus in OLTP systems | notes.eatonphil.com]]
- [ ] [[https://vadimkravcenko.com/shorts/database-migrations/][Database Migrations]]
- [ ] [[https://vikramoberoi.com/a-primer-on-roaring-bitmaps-what-they-are-and-how-they-work/][A primer on Roaring bitmaps: what they are and how they work]]
- [ ] [[https://skyzh.github.io/mini-lsm/00-overview.html][Mini-LSM Overview - LSM in a Week]]
- [X] [[https://justinjaffray.com/what-is-a-query-optimizer-for/][What is a Query Optimizer for?]]
- [ ] [[https://www.figma.com/blog/how-figma-scaled-to-multiple-databases/][The growing pains of database architecture]]
- [ ] [[https://news.ycombinator.com/item?id=37415494][How Query Engines Work | Hacker News]]
  - [ ] [[https://github.com/marsupialtail/quokka/blob/master/blog/why.md]]
- [ ] [[https://link.springer.com/book/10.1007/978-1-4842-9711-7?s=35][Database Performance at Scale: A Practical Guide | SpringerLink]] (book)
- [ ] [[https://www.youtube.com/watch?v=HubezKbFL7E][Things every developer absolutely, positively needs to know about database indexing]]
- [ ] [[https://artem.krylysov.com/blog/2023/04/19/how-rocksdb-works/][How RocksDB works - Artem Krylysov]]
- [-] B-tree
  - [ ] [[https://www.youtube.com/watch?v=xprkGzP36TI][Could Conventional B-Trees harm Solid State Drives? - YouTube]]
  - [-] [[https://lobste.rs/s/iku0es/four_levels_time_handling_database][Four levels of time handling in a database | Lobsters]]
  - [ ] [[https://www.youtube.com/watch?v=UzHl2VzyZS4][B-tree vs B+ tree in Database Systems - YouTube]]
  - [ ] [[https://news.ycombinator.com/item?id=38748433][How does a B-tree make queries fast? | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=38805383][How the append-only btree works (2010) | Hacker News]]
- [ ] [[https://buttondown.email/jaffray/archive/representing-columns-in-query-optimizers/][Representing Columns in Query Optimizers ‚Ä¢ Buttondown]]
- [ ] [[https://avi.im/blag/2024/s3-log/][Building a distributed log using S3 (under 150 lines of Go) - blag]]
- [-] Consistency Models
  - [-] [[https://aphyr.com/posts/313-strong-consistency-models][Strong consistency models]]
  - [-] [[https://anishathalye.com/testing-distributed-systems-for-linearizability/][Testing Distributed Systems for Linearizability]]
  - [X] [[https://jepsen.io/consistency][Consistency Models]]
- [ ] Reading lists
  - [[https://github.com/auxten/go-sqldb/issues/7][Database Papers that I like ¬∑ Issue #7 ¬∑ auxten/go-sqldb ¬∑ GitHub]] üåü
  - https://web.stanford.edu/class/cs245/#schedule
** Joins
- [X] [[https://blog.codinghorror.com/a-visual-explanation-of-sql-joins/][A Visual Explanation of SQL Joins]]
- [X] [[https://antonz.org/sql-join/][SQL join flavors]]
- [X] [[https://blog.jooq.org/say-no-to-venn-diagrams-when-explaining-joins/][Say NO to Venn Diagrams When Explaining JOINs]]
- [X] [[https://minimalmodeling.substack.com/p/many-faces-of-left-join?s=r][Many faces of left join - by Alexey Makhotkin]]
- [-] [[https://news.ycombinator.com/item?id=36575784][Joins 13 Ways | Hacker News]]
** SQLite
- [ ] [[https://www.youtube.com/playlist?list=PLWENznQwkAoxww-cDEfIJ-uuPDfFwbeiJ][SQLite for beginners - YouTube]]
- [ ] [[https://lobste.rs/s/gnv9ho/tracking_sqlite_database_changes_git][Tracking SQLite Database Changes in Git | Lobsters]]
- [X] [[https://tantaman.com/2022-08-23-why-sqlite-why-now.html][Why SQLite? Why Now? üêá - Tantamanlands]]
- [X] [[https://www.unixsheikh.com/articles/sqlite-the-only-database-you-will-ever-need-in-most-cases.html][SQLite the only database you will ever need in most cases]]
- [ ] [[https://www.vldb.org/pvldb/vol15/p3535-gaffney.pdf][SQLite: Past, Present, and Future]]
- [ ] [[https://news.ycombinator.com/item?id=38036921][Why you should probably be using SQLite | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=34162001][SQLite's Automatic Indexes | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=37082941][SQLite Functions for Working with JSON | Hacker News]]
- [-] New trends in sqlite
  - [X] [[https://news.ycombinator.com/item?id=35740683][Exciting SQLite Improvements Since 2020 | Hacker News]]
  - [X] [[https://news.ycombinator.com/item?id=36208568][Why SQLite is so great for the edge | Hacker News]]
  - [X] [[https://fly.io/blog/all-in-on-sqlite-litestream/][I'm All-In on Server-Side SQLite ¬∑ Fly]]
  - [ ] [[https://ma.rkusa.st/store-sqlite-in-cloudflare-durable-objects][Store SQLite in Cloudflare Durable Objects - Markus Ast]]
  - [ ] [[https://news.ycombinator.com/item?id=38171322][Bluesky migrates to single-tenant SQLite | Hacker News]]
- [ ] Deeper dives
  - [ ] [[https://fly.io/blog/sqlite-internals-btree/][SQLite Internals: Pages & B-trees ¬∑ Fly]]
  - [ ] [[https://fly.io/blog/sqlite-virtual-machine/][How the SQLite Virtual Machine Works ¬∑ Fly]]
  - [ ] [[https://news.ycombinator.com/item?id=23663071][How Does Sqlite Work? (2014) | Hacker News]]
    - [ ] [[https://jvns.ca/blog/2014/09/27/how-does-sqlite-work-part-1-pages/][How does SQLite work? Part 1: pages!]]
    - [ ] [[https://jvns.ca/blog/2014/10/02/how-does-sqlite-work-part-2-btrees/][How does SQLite work? Part 2: btrees! (or: disk seeks are slow don't do them!)]]
- [-] Experiments
  - [-] [[https://www.powersync.co/blog/sqlite-persistence-on-the-web][The Current State of SQLite Persistence on the Web]]
  - [-] [[https://phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/][Hosting SQLite databases on Github Pages]]
  - [ ] [[https://news.ycombinator.com/item?id=37114141][Show HN: I wrote a RDBMS (SQLite clone) from scratch in pure Python | Hacker News]]
- [ ] Advanced usage
  - [ ] [[https://antonz.org/sqlite-pivot-table/][Building a pivot table in SQLite]]
  - [ ] [[https://use.expensify.com/blog/scaling-sqlite-to-4m-qps-on-a-single-server][Scaling SQLite to 4M QPS on a Single Server (EC2 vs Bare Metal)]]
** Postgres
- [ ] The Art of PostgreSQL (Book)
- [ ] [[https://news.ycombinator.com/item?id=39273954][pg is enough]]
- [ ] [[https://news.ycombinator.com/item?id=39413972][My notes on Gitlab's Postgres schema design (2022) | Hacker News]]
- [ ] [[https://sophiabits.com/blog/identifying-slow-postgresql-queries][Identifying slow PostgreSQL queries | Sophia Willows]]
    - [ ] [[https://lobste.rs/s/nm36zs/designing_one_one_relationships][Designing one-to-one relationships in PostgreSQL | Lobsters]]
- [ ] [[https://www.fabianzeindl.com/posts/business-information-server][The business information server]]
- [ ] [[https://themythicalengineer.com/how-postgres-triggers-can-simplify-your-backend-development.html][How Postgres Triggers Can Simplify Your Backend Development | The Mythical Engineer]]
- [ ] [[https://www.postgresql.fastware.com/blog/inside-logical-replication-in-postgresql][Inside logical replication in PostgreSQL: How it works]]
- [ ] [[https://patrick.engineering/posts/postgres-internals/][PostgreSQL Internals: 3 Things to Know About UPDATE Statements | Patrick's Engineering Blog]]
- [ ] [[https://www.avestura.dev/blog/explaining-the-postgres-meme][Explaining The Postgres Meme]]
  - [ ] [[https://www.youtube.com/watch?v=JZRWkfXNQOk][SQL iceberg explained - YouTube]]
- [ ] [[https://news.ycombinator.com/item?id=38914764][An overview of distributed Postgres architectures | Hacker News]]
- [ ] [[https://notes.eatonphil.com/2023-11-19-exploring-a-postgres-query-plan.html][Exploring a Postgres query plan | notes.eatonphil.com]]
- [ ] [[https://www.percona.com/blog/postgresql-indexes-can-hurt-you-negative-effects-and-the-costs-involved/][PostgreSQL Indexes Can Hurt You: Negative Effects and the Costs Involved]]
- [-] [[https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html][PgBouncer is useful, important, and fraught with peril - JP Camara]]
- [ ] [[https://news.ycombinator.com/item?id=37496696][Why people care about PostGIS and Postgres | Hacker News]]
- [ ] [[https://www.hezmatt.org/~mpalmer/blog/2023/11/07/postgresql-encryption-options.html][Brane Dump: PostgreSQL Encryption: The Available Options]]
- [ ] [[https://news.ycombinator.com/item?id=38167423][Building a Streaming Platform in Go for Postgres | Hacker News]]
- [ ] [[https://lobste.rs/s/dhan61/pg_advisory_locks_go_with_built_hashes][PG advisory locks in Go with built-in hashes | Lobsters]]
- [ ] [[https://www.youtube.com/watch?v=JxMz-tyicgo]["UPDATE Considered Harmful" by Jeremy Taylor - YouTube]]
- [ ] [[https://tembo.io/blog/optimizing-postgres-auto-vacuum/][Optimizing Postgres's Autovacuum for High-Churn Tables | Tembo]]
- [ ] [[https://lobste.rs/s/hqcasu/scaling_postgres_1_million_connections][Scaling Postgres to 1 Million Connections | Lobsters]]
- [ ] [[https://brandur.org/fragments/postgres-logs-in-github-actions][Getting Postgres logs in a GitHub Action]]
- [ ] [[https://www.citusdata.com/blog/2023/08/04/understanding-partitioning-and-sharding-in-postgres-and-citus/][Understanding partitioning and sharding in Postgres and Citus]]
- [ ] [[https://news.ycombinator.com/item?id=35684220][Ways to shoot yourself in the foot with Postgres | Hacker News]]
- [ ] [[https://lobste.rs/s/zh3dek/indexing_column_large_postgres_table][Indexing a column of a large postgres table | Lobsters]]
- [ ] [[https://news.ycombinator.com/item?id=36699016][Creating a search engine with PostgreSQL | Hacker News]]
- [ ] [[https://erthalion.info/2019/12/06/postgresql-stay-curious/][PostgreSQL at low level: stay curious! ¬∑ Erthalion's blog]]
- [ ] [[https://news.ycombinator.com/item?id=35716963][The part of Postgres we hate the most: MMVC]]
- [ ] [[https://neon.tech/blog/http-vs-websockets-for-postgres-queries-at-the-edge][HTTP vs. WebSockets: Which protocol for your Postgres queries at the Edge - Neon]]
- [ ] [[https://news.ycombinator.com/item?id=39315833][Postgres as queue | Hacker News]]
  - [ ] [[https://docs.hatchet.run/blog/multi-tenant-queues][Hatchet Documentation Multi Tenant PG]]
- [ ] Postgres operations (wiki has more stuff) / Backup etc.
  - [ ] I've to make sections in notes about replication, migration, backup, recovery, other things that are more specific to handling the data in prostgres and moving it around when needed
  - [ ] [[https://lobste.rs/s/rj0jud/introducing_pgroll_zero_downtime][Introducing pgroll: zero-downtime, reversible, schema migrations for Postgres | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=38961463][Postgres Incremental Backup | Hacker News]]
  - [ ] [[https://blog.val.town/blog/migrating-from-supabase][Migrating from Supabase]]
  - [ ] [[https://supabase.com/blog/supabase-local-dev][Supabase Local Dev: migrations, branching, and observability]]
** Too long Redis
- [ ] [[https://tech.trivago.com/post/learn-redis-the-hard-way/][Learn Redis the hard way (in production)]]
- [ ] [[https://architecturenotes.co/redis/][Redis Explained]]
- [ ] [[https://docs.aws.amazon.com/whitepapers/latest/database-caching-strategies-using-redis/caching-patterns.html][Caching patterns - Database Caching Strategies Using Redis]]
- [ ] [[https://redisson.org/glossary/write-through-and-write-behind-caching.html][What are write-through and write-behind caching? | Redisson]]
- [ ] [[https://philbooth.me/blog/four-ways-to-shoot-yourself-in-the-foot-with-redis][Four ways to shoot yourself in the foot with Redis]]
- [ ] [[https://spin.atomicobject.com/2021/02/04/redis-postgresql/][Do You Need Redis? PostgreSQL Does Queuing, Locking, & Pub/Sub]]
- [ ] [[https://build-your-own.org/redis/][Build Your Own Redis with C/C++ | Build Your Own Redis with C/C++]]
- [ ] [[https://thenewstack.io/how-to-boost-mastodon-server-performance-with-redis/][How to Boost Mastodon Server Performance with Redis - The New Stack]]
** Infra Operations & Security
- [ ] [[https://www.brianstorti.com/replication/][A Primer on Database Replication]]
- [ ] [[https://soatok.blog/2023/03/01/database-cryptography-fur-the-rest-of-us/][Database Cryptography Fur the Rest of Us - Dhole Moments]]
- [X] [[https://medium.com/@jeeyoungk/how-sharding-works-b4dec46b3f6][How Sharding Works]]
- [X] [[https://news.ycombinator.com/item?id=35476518][How does database sharding work? | Hacker News]]
- [X] [[https://stackoverflow.blog/2022/03/14/how-sharding-a-database-can-make-it-faster/][How sharding a database can make it faster]]
- [ ] Scaling OLTP
  - [ ] [[https://www.youtube.com/watch?v=ONkfXvPSSpc][AWS Aurora Distributed SQL internals with Marc Brooker - ‚Äã @amazonwebservices - YouTube]]
  - [ ] [[https://news.ycombinator.com/item?id=42836306][Scalable OLTP in the Cloud: What's the Big Deal? | Hacker News]]
* üêñ HB10: Become pragmatic
** Gain old wisdom
- [ ] The Pragmatic Programmer (Book)
- [ ] [[https://htdp.org/2023-3-6/Book/index.html][How to Design Programs, Second Edition]] (Book)
- [ ] [[https://mfleck.cs.illinois.edu/building-blocks/index-sp2020.html][Building Blocks for Theoretical Computer Science]]  (Course) üåü
- [ ] [[https://lobste.rs/s/jswuxr/cognitive_load_software_development][Cognitive Load In Software Development | Lobsters]]
- [ ] [[https://www.youtube.com/watch?v=HrVtA-ue-x0][Software Engineering's Greatest Hits - YouTube]]
- [ ] [[https://lobste.rs/s/qyrsfx/practices_reliable_software_design][Practices of Reliable Software Design | Lobsters]]
- [ ] [[https://fika.bar/blogs/paoramen/fear-of-over-engineering-has-killed-engineering-altogether-01J3MM2Y3RGK8AZWYHHFJMAGJJ][paoramen - Fear of over-engineering has killed engineering altogether]]
- [ ] [[https://www.oilshell.org/blog/2022/03/backlog-arch.html][A Sketch of the Biggest Idea in Software Architecture]]
- [ ] [[https://github.com/HugoMatilla/Refactoring-Summary][HugoMatilla/Refactoring-Summary]]
- [ ] [[https://news.ycombinator.com/item?id=38777647][Things software developers should learn about learning | Hacker News]]
- [ ] [[https://abseil.io/resources/swe-book/html/toc.html][Software Engineering at Google]] (Book)
- [ ] [[https://news.ycombinator.com/item?id=38236607][Wisdom from computing]]
- [ ] Coding theory by Venkatesan Guruswami (Book)
- [ ] [[https://github.com/braydie/HowToBeAProgrammer][A guide on how to be a Programmer]]
- [ ] [[https://www.youtube.com/watch?v=bmSAYlu0NcY][A Philosophy of Software Design | John Ousterhout]]
- [ ] [[https://www.youtube.com/watch?v=LtRWu9DErgU][Can Great Programmers Be Taught? - John Ousterhout - Agile LnL - YouTube]]
- [ ] [[https://www.hillelwayne.com/post/cleverness/][Clever vs Insightful Code ‚Ä¢ Hillel Wayne]]
** Advice by other people
- [ ] [[https://news.ycombinator.com/item?id=36161397][My Approach to Building Large Technical Projects ‚Äì Mitchell Hashimoto]]
- [ ] Code review
  - [ ] [[https://lobste.rs/s/slhe5j/how_jane_street_does_code_review_2017][How Jane Street Does Code Review (2017) | Lobsters]]
  - [ ] [[https://lobste.rs/s/2aeh8l/art_good_code_review][The art of good code review | Lobsters]]
- [ ] TigerStyle!
  - [ ] [[https://github.com/tigerbeetle/tigerbeetle/blob/main/docs/TIGER_STYLE.md][tigerbeetle/docs/TIGER_STYLE.md at main ¬∑ tigerbeetle/tigerbeetle ¬∑ GitHub]]
  - [ ] [[https://www.youtube.com/watch?v=sC1B3d9C_sI][The FASTEST and SAFEST Database - YouTube]]
- [ ] [[https://gist.github.com/adamwiggins/5687294][My Heroku values ¬∑ GitHub]]
- [ ] [[https://apenwarr.ca/log/20230415][Systems design 2: What we hope we know - apenwarr]]
- [ ] [[https://jmmv.dev/2023/09/performance-is-not-big-o.html][Good performance is not just big O - Julio Merino (jmmv.dev)]]
- [ ] [[https://betterprogramming.pub/why-domain-driven-design-203099adf32a][Why Domain-Driven Design?]]
- [ ] [[https://danluu.com/simple-architectures/#fn:R][In defense of simple architectures]]
- [ ] [[https://muratbuffalo.blogspot.com/2024/06/always-measure-one-level-deeper.html][Always Measure One Level Deeper]]
- [ ] DDD
  - [ ] [[https://dev.tasubo.com/2022/07/crash-course-domain-driven-design.html][Crash course on Domain-Driven Design]]
  - [ ] [[https://www.youtube.com/watch?v=yBEcq23OgB4][A Daily Practice of Empirical Software Design - Kent Beck - DDD Europe 2023 - YouTube]]
  - [ ] [[https://guide.handmade-seattle.com/c/2021/practical-dod/][Practical DOD ‚Ä¢ 2021 ‚Ä¢ Conference Guide ‚Ä¢ Handmade Seattle]]  (Data Oriented Design) (different from the other DOD)
- [ ] [[https://loige.co/the-senior-dev/][The Definition of Senior: A Look at the expectations for Software Engineers]]
- [ ] [[https://kevinmahoney.co.uk/articles/my-principles-for-building-software/][My Principles for Building Software]]
- [ ] [[https://nat.org/?s=35][Nat Friedman]]
- [ ] [[https://kenkantzer.com/learnings-from-5-years-of-tech-startup-code-audits/][Learnings from 5 years of tech startup code audits]]
- [ ] [[https://neilkakkar.com/things-I-learnt-from-a-senior-dev.html][Things I Learnt from a Senior Software Engineer | Neil Kakkar]]
- [ ] [[https://wippler.dev/posts/synchronization-is-bad-for-scale][Synchronization is bad for scale]]
- [ ] [[https://www.adhocteam.us/2017/10/10/stop-your-business-rules-engines/][Stop your (business rules) engines! - Ad Hoc]]
- [ ] [[https://alexewerlof.medium.com/my-guiding-principles-after-20-years-of-programming-a087dc55596c][My guiding principles after 20 years of programming]]
- [ ] [[https://adamj.eu/tech/2022/06/17/mike-actons-expectations-of-professional-software-engineers/][Mike Acton‚Äôs Expectations of Professional Software Engineers]]
- [ ] [[https://blog.devgenius.io/the-hardest-thing-about-engineering-is-requirements-28a6a70c4db4][The Hardest thing about Engineering is Requirements]]
- [ ] [[https://blog.regehr.org/archives/199][How to Debug ‚Äì Embedded in Academia]]
- [ ] [[https://programmingisterrible.com/post/139222674273/how-to-write-disposable-code-in-large-systems][Write code that is easy to delete]]
- [ ] [[https://blog.charliemeyer.co/code-doesnt-happen-to-you/][Code Doesn't Happen to You]]
** Testing shit
- [ ] [[https://matklad.github.io//2021/05/31/how-to-test.html][How to Test]]
- [ ] [[https://buttondown.email/hillelwayne/archive/oracle-testing/][Oracle Testing ‚Ä¢ Buttondown]]
- [ ] [[https://fuzzing-project.org/background.html][The Fuzzing Project - Misc]]
  - [ ] [[https://mtlynch.io/nix-fuzz-testing-1/][Using Nix to Fuzz Test a PDF Parser (Part One) ¬∑ mtlynch.io]]
  - [ ] https://github.com/antonio-morales/Fuzzing101
- [ ] [[https://lobste.rs/s/uyj3vj/lambda_capabilities][Lambda Capabilities | Lobsters]]
** Learn more about API design
*** General API
- [ ] [[https://www.manning.com/books/api-design-patterns][API Design Patterns]] (Book)
- [ ] [[https://nibblestew.blogspot.com/2023/02/plain-c-api-design-real-world-kobayashi.html][Nibble Stew: Plain C API design, the real world Kobayashi Maru test]]
- [ ] [[https://news.ycombinator.com/item?id=40161794][No Abstractions: our API design principle | Hacker News]]
- [ ] [[https://snyk.io/blog/verifying-webhook-signatures/][The importance of verifying webhook signatures | Snyk]]
- [ ] [[https://kislayverma.com/uncategorized/guidelines-for-writing-useful-libraries/][Guidelines for writing useful libraries | Kislay Verma]]
- [ ] [[https://lobste.rs/s/edznnr/finding_fixing_eventual_consistency][Finding and fixing eventual consistency with Stripe events | Lobsters]]
- [ ] [[https://ozlabs.org/~rusty/index.cgi/tech/2008-04-01.html][What If I Don't Actually Like My Users?]]
- [ ] [[https://www.roguelynn.com/talks/everyday-apis/][The Design of Everyday APIs ‚Äì roguelynn]]
- [ ] [[https://ozlabs.org/~rusty/index.cgi/tech/2008-03-30.html][How Do I Make This Hard to Misuse?]]
- [ ] [[https://www.youtube.com/watch?v=heh4OeB9A-c][How To Design A Good API and Why it Matters - YouTube]]
- [ ] [[https://google.aip.dev/][API Improvement Proposals]]
*** Web API design
- [ ] [[https://speakerdeck.com/pietercolpaert/graphql-vs-rest][GraphQL vs. REST - Speaker Deck]]
- [ ] [[https://jcs.org/2023/07/12/api][Advice for Operating a Public-Facing API - joshua stein]]
- [ ] [[https://news.ycombinator.com/item?id=41432101][The Elements of APIs (2021) | Hacker News]]
- [ ] [[https://lobste.rs/s/ctifwl/how_how_not_design_rest_apis][How to (and how not to) design REST APIs | Lobsters]]
- [ ] [[https://lobste.rs/s/czlmyn/how_how_not_design_rest_apis][How to (and how not to) design REST APIs | Lobsters 2]]
- [ ] [[https://apisyouwonthate.com/blog/api-versioning-has-no-right-way][API Versioning Has No "Right Way"]]
- [ ] [[https://r.bluethl.net/how-to-design-better-apis][How to design better APIs]]
- [ ] [[https://www.nylas.com/blog/secrets-to-great-api-design/][Secrets to Great API Design | Nylas]]
- [ ] [[https://paul.totterman.name/posts/rfc7807/][RFC7807 - Problem Details for HTTP APIs | Paul's page]] üåü
- [ ] [[https://medium.com/@atakanserbes/api-best-practices-d27876b1a1bd][API Best Practices for crafting superior APIs | Atakan Serbes | Medium]]
- [ ] Webhooks
  - [ ] [[https://deno.com/blog/webhooks-suck][Webhooks suck, but here are alternatives]]
  - [ ] [[https://www.shortcut.com/blog/more-reliable-webhooks-with-queues][More reliable webhooks with queues | Shortcut Blog]]
  - [ ] [[https://blog.sequin.io/events-not-webhooks/][Give me /events, not webhooks]]
  - [ ] [[https://news.ycombinator.com/item?id=37514801][Webhook Failure Scenarios | Hacker News]]
  - [ ] [[https://github.com/standard-webhooks/standard-webhooks/blob/main/spec%2Fstandard-webhooks.md][Open source tools and guidelines for sending webhooks easily, securely and reliably]]
- [ ] Feature Flags
  - [ ] [[https://lobste.rs/s/tjtxpt/feature_flags_authorization_are_same][Feature flags and authorization are the same idea | Lobsters]]
  - [ ] [[https://docs.getunleash.io/topics/feature-flags/feature-flag-best-practices][11 Principles for building and scaling feature flag systems | Unleash]]
- [ ] Pagination
  - [ ] [[https://www.informit.com/articles/article.aspx?p=3171761][How to Shape Responses to API Calls | Option 1: Pagination | InformIT]]
  - [ ] [[https://solovyov.net/blog/2020/api-pagination-design/][API pagination design]]
  - [ ] [[https://brandur.org/fragments/offset-pagination][What's good about offset pagination]]
  - [ ] [[https://lobste.rs/s/hderm9/pagination_for_database_objects][Pagination for database objects | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=42179773][Hyrumtoken: A Go package to encrypt pagination tokens | Hacker News]]
- [ ] Extraction
  - [ ] [[https://blog.sequin.io/design-patterns-for-extracting-from-rest-apis/][Design patterns for extracting from REST APIs]]
** Caching
- [ ] [[https://calpaterson.com/ttl-hell.html][Staying out of TTL hell]]
- [ ] [[https://blog.khanacademy.org/memcached-backed-content-infrastructure/][Memcached-Backed Content Infrastructure | Khan Academy Blog]]
- [ ] [[https://yihui.org/en/2018/06/cache-invalidation/][On Cache Invalidation - Why is it hard?]]
- [ ] [[https://lobste.rs/s/xszyoz/fifo_queues_are_all_you_need_for_cache][FIFO queues are all you need for cache eviction | Lobsters]]
* üå∫ HB11: Languages and how they are made
** Experiment with Rust
- [ ] [[https://doc.rust-lang.org/book/foreword.html][The Rust Programming Language]] (Book)
- [ ] [[https://rust-book.cs.brown.edu/title-page.html][The Rust Programming Language - Brown fork]] (Book)
- [ ] [[https://www.oreilly.com/library/view/command-line-rust/9781098109424/][Command-Line Rust]] (Book)
    - [ ] [[https://www.lurklurk.org/effective-rust/preface.html][Preface - Effective Rust]]
- [ ] [[https://doc.rust-lang.org/stable/rust-by-example/][Rust By Example]] (Book)
- [ ] [[https://github.com/rust-lang/rustlings][rust-lang/rustlings]]
- [ ] [[https://news.ycombinator.com/item?id=34567550][Why should you use Tokio vs. threads in Rust? | Hacker News]]
- [ ] [[https://github.com/sunface/rust-by-practice][sunface/ruse-by-practice]]
- [ ] [[https://blessed.rs/crates][Crate List - Blessed.rs]]
** Experiment with Elixr
- [[https://aswinmohan.me/liveview-production][Phoenix LiveView in Production ¬∑ aswinmohan.me]]
- [[https://maciej.gryka.net/building-secretwords][Building Secretwords]]
** Remove fear of compilers
- [ ] Demitry Udemy Courses (Course)
- [ ] [[https://lobste.rs/s/ndkycy/why_split_lexing_parsing_into_two][Why Split Lexing and Parsing Into Two Separate Phases? | Lobsters]]
- [ ] [[https://lobste.rs/s/r1ozz9/distinguishing_interpreter_from][Distinguishing an Interpreter from a Compiler | Lobsters]]
- [ ] [[https://news.ycombinator.com/item?id=38182461][Writing a Compiler is Surprisingly Easy (part 1) | Hacker News]]
- [ ] [[https://lowlevelbits.org/how-to-learn-compilers-llvm-edition/][How to learn compilers: LLVM Edition - Low Level Bits üá∫üá¶]]
- [ ] [[https://lobste.rs/s/tpe028/on_learning_compilers_creating][On Learning Compilers and Creating Programming Languages | Lobsters]]
- [ ] [[https://www.youtube.com/watch?v=wSdV1M7n4gQ][Anders Hejlsberg on Modern Compiler Construction - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=HxaD_trXwRE][Lexical Scanning in Go - Rob Pike - YouTube]]
- [ ] [[https://blog.regehr.org/archives/169][Why Take a Compiler Course? ‚Äì Embedded in Academia]]
- [ ] [[https://amasad.me/compilers][Why Learn Compilers]]
- [ ] [[https://indradhanush.github.io/blog/write-a-compile-with-david-beazley/?s=35][Write a compiler with David Beazley | Cracking The Code]]
- [ ] [[https://news.ycombinator.com/item?id=34410776][Why we need to know LR and recursive descent parsing techniques]]
- [ ] [[https://isuckatcs.github.io/how-to-compile-your-language/index.html][How to Compile Your Language]]
- [ ] [[https://mapping-high-level-constructs-to-llvm-ir.readthedocs.io/en/latest/index.html][Mapping High Level Constructs to LLVM IR ‚Äî Mapping High Level Constructs to LLVM IR documentation]]
** No really, PLT fr
- [ ] [[https://mpc.sh/blog/a-gentle-intro-to-plt/][A Gentle Intro to PLT]]
- [ ] [[https://www.cas.mcmaster.ca/~carette/CAS761/W2024/index.html][CAS 761: Generative Programming]]
- [ ] [[https://www.youtube.com/watch?v=sokb6zZC-ZE][Cuis Smalltalk and the History of Computing‚Äôs Future (with Juan Vuletich) - YouTube]]
- [ ] [[https://news.ycombinator.com/item?id=39182721][A Tour of the Lisps | Hacker News]]
- [ ] [[https://www.youtube.com/watch?v=7HKbjYqqPPQ][2017 ACM PPoPP Keynote: It's Time for a New Old Language - YouTube]]
- [ ] [[https://www.garshol.priv.no/download/text/bnf.html#id1.1][BNF and EBNF: What are they and how do they work?]]
- [ ] [[https://www.youtube.com/watch?v=FQYOpD7tv30][The Mathematician's Weapon | An Introduction to Category Theory, Abstraction and Algebra | #SoME3 - YouTube]]
- [ ] [[https://langdev.stackexchange.com/questions/2692/how-should-i-read-type-system-notation][How should I read type system notation? - Programming Language Design and Implementation Stack Exchange]]
- [ ] [[https://arxiv.org/abs/1409.2378][[1409.2378] Design Guidelines for Domain Specific Languages]]
- [ ] Programming Languages, Part A,B,C (Course)
- [ ] [[https://kmicinski.com/cis352-f22/][CIS352]] by Kristopher Micinski
** No time for Functional programming
- [-] [[https://cs3110.github.io/textbook/cover.html][OCaml Programming: Correct + Efficient + Beautiful ‚Äî OCaml Programming]] (Course)
- [ ] [[https://nostarch.com/learn-physics-functional-programming][Learn Physics with Functional Programming | No Starch Press]]
- [ ] [[https://robertwpearce.com/how-to-lose-functional-programming-at-work.html][How To Lose Functional Programming At Work]]
- [ ] [[https://discuss.ocaml.org/t/category-theory-for-programmers-book-ocaml-flavor/3905/4][Category theory for Programmers book - OCaml flavor - #4 by XVilka - Community - OCaml]]
** DIY projects
- [X] [[https://www.buildyourownlisp.com/][Learn C ‚Ä¢ Build Your Own Lisp]] (Book)
- [X] [[https://blog.varunramesh.net/posts/intro-parser-combinators/][An Introduction to Parser Combinators - Varun Ramesh's Blog]]
- [ ] [[https://tiarkrompf.github.io/notes/?%2Fjust-write-the-parser%2F=][Tiark's Notebook - Just write the fucking parser]]
- [ ] [[https://craftinginterpreters.com/][Crafting Interpreters]] (Book) See [[https://github.com/malavbhavsar/rlox][malavbhavsar/rlox]] for section 1
  - [[https://gist.github.com/zackradisic/384f762e07efd9403bc918a6b5067c8b][Visitor pattern vs sum types and pattern matching ¬∑ GitHub]]
- [ ] [[https://news.ycombinator.com/item?id=38150833][Building a high performance JSON parser | Hacker News]]
- [ ] [[https://interpreterbook.com/][Writing An Interpreter In Go | Thorsten Ball]] (Book)
- [ ] [[https://compilerbook.com/][Writing A Compiler In Go | Thorsten Ball]] (Book)
- [ ] [[https://notes.eatonphil.com/writing-a-simple-json-parser.html][Writing a simple JSON parser | notes.eatonphil.com]]
- [ ] [[https://blog.varunramesh.net/posts/algebraic-expressions-using-parser-combinators/][Evaluating Algebraic Expressions using Parser Combinators - Varun Ramesh's Blog]]
* ü¶Ü HB12: Comfortable w Distributed Systems
** General Dist Sys
- [-] Courses
  - [-] [[http://nil.csail.mit.edu/6.824/2020/schedule.html][6.824: Distributed Systems(2020)]] (Course)
  - [-] [[https://www.youtube.com/playlist?list=PLeKd45zvjcDFUEv_ohr_HdUFe97RItdiB][Distributed Systems lecture series - YouTube]] (Course, MK)
  - [ ] https://www.scs.stanford.edu/22sp-cs244b/labs/project.html (good project ideas in dist sys)
- [-] Distributed Systems 3rd edition (Book, 2017)
- [ ] [[http://book.mixu.net/distsys/index.html][Distributed systems for fun and profit]] (Book, Good for casual reading, might print)
- [ ] [[https://muratbuffalo.blogspot.com/2023/10/hints-for-distributed-systems-design.html][Hints for Distributed Systems Design]] üåü
- [ ] [[https://www.youtube.com/watch?v=TlU1opuCXB0]["Hopelessness and Confidence in Distributed Systems Design"]]
- [X] [[https://www.boingram.com/2019-11-17-cap-theorem/][Putting Our Thinking CAP On: Taking a Look at the CAP Theorem | Bo Ingram]]
- [ ] [[https://apple.github.io/foundationdb/cap-theorem.html?s=35][CAP Theorem ‚Äî FoundationDB 7.1]]
- [ ] Consistent hashing
  - [ ] [[https://lobste.rs/s/vdvv0a/range_partitioning_zero_one][Range Partitioning: Zero to One | Lobsters]]
  - [ ] [[https://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html][The Simple Magic of Consistent Hashing | Mathias Meyer]]
  - [ ] [[https://news.ycombinator.com/item?id=36225161][Work Distribution with Jump Consistent Hashing | Hacker News]]
  - [ ] [[http://highscalability.com/blog/2023/2/22/consistent-hashing-algorithm.html][Consistent hashing¬†algorithm - High Scalability]]
- [ ] Clocks & Time
  - [ ] [[https://lobste.rs/s/s7qmxq/lamport_clocks][Lamport clocks | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=39299482][Lamport Clocks | Hacker News]]
  - [ ] [[https://vishnubharathi.codes/blog/too-many-clocks-at-my-home/][Too many clocks at my home]]
  - [ ] https://news.ycombinator.com/item?id=42512371
  - [ ] [[https://muratbuffalo.blogspot.com/2024/12/utilizing-highly-synchronized-clocks-in.html][Utilizing highly synchronized clocks in distributed databases]]
  - [ ] [[https://buttondown.com/jaffray/archive/what-are-the-magical-clocks-for/][What are the Magical Clocks for? ‚Ä¢ Buttondown]]
  - [ ] [[https://www.exhypothesi.com/clocks-and-causality/][Clocks and Causality - Ordering Events in Distributed Systems]]
  - [ ] [[https://lobste.rs/s/acsyc8/how_think_about_time][How to Think About Time | Lobsters]]
  - [ ] [[https://ciju.in/posts/2021-09-on-time-clock-and-ordering-of-events][On Time, clock and ordering paper - ciju]]
  - [ ] [[https://brooker.co.za/blog/2023/11/27/about-time.html?s=35][It's About Time! - Marc's Blog]]
  - [ ] [[https://decomposition.al/blog/2023/04/08/who-invented-vector-clocks/][Who invented vector clocks? - decomposition ‚àò al]]
  - [ ] [[https://www.cockroachlabs.com/blog/living-without-atomic-clocks/][Living without atomic clocks: Where CockroachDB and Spanner diverge]]
  - [ ] [[https://brooker.co.za/blog/2023/11/27/about-time.html][It's About Time! - Marc's Blog]]
  - [ ] Lamport
    - [ ] [[https://www.youtube.com/watch?v=SXt3-iZpQQc][Oral History of Leslie Lamport - Part 1 - YouTube]]
    - [ ] [[https://www.youtube.com/watch?v=uK9yGNuGWKE][Oral History of Leslie Lamport Part 2 - YouTube]]
    - [ ] [[https://sookocheff.com/post/tlaplus/getting-started-with-tlaplus/][Getting Started With TLA+ | Kevin Sookocheff]]
    - [ ] https://github.com/Dicklesworthstone/bakery_algorithm
- [ ] Consensus
  - [ ] [[https://lamport.azurewebsites.net/tla/paxos-algorithm.html][Paxos Algorithm]]  (2 lectures & materials by LL the great) üåü
  - [ ] [[https://news.ycombinator.com/item?id=30256753][Garage, our self-hosted distributed object storage solution | Hacker News]] (Read the discussion around raft)
  - [ ] [[http://thesecretlivesofdata.com/raft/][Raft Viz presentation]]
  - [ ] [[https://ellismichael.com/blog/2017/02/28/raft-equivalency/][Raft is (Equivalent to) Paxos, VR]]
  - [ ] [[https://news.ycombinator.com/item?id=37369826][The Raft Consensus Algorithm (2015) | Hacker News]]
  - [ ] [[https://notes.eatonphil.com/2023-05-25-raft.html][Implementing a distributed key-value store on top of implementing Raft in Go]]
  - [ ] [[https://thesquareplanet.com/blog/students-guide-to-raft/][Students' Guide to Raft - Jon Gjengset]]
  - [ ] [[https://lobste.rs/s/dutlhf/raft_does_not_guarantee_liveness_face][Raft does not Guarantee Liveness in the face of Network Faults (2020) | Lobsters]]
  - [ ] [[https://omnipaxos.com/blog/how-omnipaxos-handles-partial-connectivity-and-why-other-protocols-cant/][How OmniPaxos handles partial connectivity]]
  - [ ] [[https://eli.thegreenplace.net/2020/implementing-raft-part-0-introduction/][Implementing Raft: Part 0 - Introduction - Eli Bendersky's website]]
** Designing better systems
- [ ] [[https://fly.io/blog/globally-distributed-postgres/][Globally Distributed Postgres ¬∑ Fly]]
- [ ] [[https://massimo-nazaria.github.io/blog/2019/09/05/software-architecture-design-for-busy-developers.html][Software Architecture Design for Busy Developers]]
- [-] [[https://news.ycombinator.com/item?id=37706893][50 years later, is two-phase locking the best we can do? | Hacker News]]
  - [-] [[https://justinjaffray.com/two-phase-commit-three-ways/][Two-Phase Commit Three Ways]]
- [ ] [[https://www.softwareatscale.dev/p/guids-are-not-enough?s=r][GUIDs Are Not The Only Answer - by Utsav Shah]]
- [ ] [[https://azeemba.com/posts/breaking-changes-in-distributed-systems.html][Breaking Changes in Distributed Systems | Azeem Bande-Ali | azeemba.com]]
- [ ] [[https://en.oceanbase.com/blog/2596985600][Designing Distributed SQL Engine]]
- [ ] [[https://www.youtube.com/watch?v=5aRamFLgtis][The genius of long polling - YouTube]]
- [ ] [[https://rednafi.com/go/circuit_breaker/?s=35][Writing a circuit breaker in Go | Redowan's Reflections]]
- [ ] [[https://fly.io/blog/a-foolish-consistency/][A Foolish Consistency: Consul at Fly.io ¬∑ The Fly Blog]]
- [ ] [[https://lobste.rs/s/ywee4w/avoiding_fallback_distributed_systems][Avoiding fallback in distributed systems (2020) | Lobsters]]
- [ ] [[https://robertheaton.com/2020/04/06/systems-design-for-advanced-beginners/][Systems design for advanced beginners | Robert Heaton]]
- [ ] [[https://aosabook.org/en/distsys.html][AOSA(Volume 2): Scalable Web Arch]]
- [ ] [[https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying][The Log: What every software engineer should know about real-time data]]
- [ ] Message Queues
  - [ ] [[https://guide.handmade-seattle.com/c/2019/talks/lets-talk-about-queues/][Let's Talk About Queues ‚Ä¢ Talks ‚Ä¢ Conference Guide ‚Ä¢ Handmade Seattle]]
  - [ ] [[https://gist.github.com/FeepingCreature/a8099d2bcf850a9c388ed045fa3b5c0e][Investigating an Event Queue Hang: The Code Works Correctly ¬∑ GitHub]]
  - [ ] [[https://www.netlify.com/blog/2017/03/02/to-message-bus-or-not-distributed-systems-design/][To Message Bus or Not: Distributed Systems Design]]
  - [ ] [[https://goodyduru.github.io//os/2023/11/13/ipc-message-queues.html][IPC - Message Queues | Goodness‚Äôs blog]]
  - [ ] [[https://news.ycombinator.com/item?id=39180891][The Big Little Guide to Message Queues (2020) | Hacker News]]
  - [ ] [[https://lobste.rs/s/h0t07p/no_sleep_until_we_build_ideal_pub_sub][No sleep until we build the ideal pub/sub library in Go | Lobsters]]
  - [ ] [[https://lobste.rs/s/oue8xd/simple_event_broker_tries_tiger_style][Simple event broker tries Tiger Style | Lobsters]]
  - [ ] [[https://www.alibabacloud.com/blog/modern-message-queue-services-and-cloud-storage_601410][Modern Message Queue Services and Cloud Storage - Alibaba Cloud Community]]
* üêÖ HB13: Really wanna Systems
#+attr_html: :class book-hint warning small-text
#+begin_quote
A word of warning for self here, I am interested in this stuff but it seems like there are not too many directly applicable jobs or projects I can work on, so study these accordingly.

But this info in-directly will always be helpful for me in other areas.
#+end_quote
** Basics
- [ ] [[https://github.com/spencertipping/shell-tutorial][spencertipping/shell-tutorial]]
- [ ] [[https://carltheperson.com/posts/10-things-linux/][Getting Better at Linux With 10 Mini-Projects]] (Make these with rust)
- [ ] [[https://notes.eatonphil.com/2023-10-01-intercepting-and-modifying-linux-system-calls-with-ptrace.html][Intercepting and modifying Linux system calls with ptrace | notes.eatonphil.com]]
- [ ] [[https://media.ccc.de/v/all-systems-go-2023-193-adventures-of-linux-userspace-at-meta][Adventures of Linux Userspace at Meta - media.ccc.de]]
- [ ] [[https://www.youtube.com/playlist?list=PLSIUOFhnxEiC3YTdxwqZqgEY5imVL8U8J][Greybeard Qualification - Linux Internals - YouTube]]
- [ ] [[https://news.ycombinator.com/item?id=35092049][What Is Systems Programming, Really? (2018) | Hacker News]]
- [ ] [[https://nullprogram.com/blog/2023/10/05/][A simple, arena-backed, generic dynamic array for C]]
- [ ] [[https://www.youtube.com/watch?v=0ihChIaN8d0][Getting up in another processes memory - YouTube]]
- [ ] [[https://lobste.rs/s/k8knw4/two_kinds_threads_pools_why_you_need_both][Two kinds of threads pools, and why you need both | Lobsters]]
- [ ] [[https://www.youtube.com/watch?v=d0gS5TXarXc][Signals. I spent 2 years to understand this part. - YouTube]]
- [ ] [[https://biriukov.dev/docs/page-cache/0-linux-page-cache-for-sre/][Linux Page Cache for SRE | Viacheslav Biriukov]]
- [X] FD
  - [X] [[https://biriukov.dev/docs/fd-pipe-session-terminal/0-sre-should-know-about-gnu-linux-shell-related-internals-file-descriptors-pipes-terminals-user-sessions-process-groups-and-daemons/][GNU/Linux shell related internals | Viacheslav Biriukov]]
  - [X] [[http://0pointer.net/blog/file-descriptor-limits.html][File Descriptor Limits]]
  - [X] [[https://news.ycombinator.com/item?id=38009458][Dup()'s shared file IO offset is a necessary part of Unix]]
** Arch
- https://simplecpudesign.com/
- https://www.nand2tetris.org/
- CMU Arch
** Virtualization
- [ ] [[https://github.com/vijay03/cs378-f19][vijay03/cs378-f19: Repo for CS 378]] (Course)
- [ ] [[https://fly.io/blog/sandboxing-and-workload-isolation/][Sandboxing and Workload Isolation ¬∑ Fly]]
- [ ] [[http://emulator101.com/][Emulator 101]]
- [ ] [[https://news.ycombinator.com/item?id=34964197][Firecracker internals: Inside the technology powering AWS Lambda (2021)]]
- [ ] [[https://binarydebt.wordpress.com/2018/10/14/intel-virtualisation-how-vt-x-kvm-and-qemu-work-together/][How VT-x, KVM and QEMU Work Together ‚Äì Binary Debt]]
- [ ] [[https://arush15june.github.io/posts/2020-07-12-clocks-timers-virtualization/?s=35][Clocks, Timers and Virtualization silly onions ‚Äî Opinionated articles]]
- [ ] [[https://zserge.com/posts/kvm/][KVM host in a few lines of code]]
- [ ] [[https://memn0ps.github.io/hypervisor-development-in-rust-part-1/][Hypervisor Development in Rust Part 1 - memN0ps]]
- [ ] [[https://github.com/dpw/kvm-hello-world][dpw/kvm-hello-world: A minimal kvm example]]
- [ ] [[https://www.jmeiners.com/lc3-vm/][Write your Own Virtual Machine]]
** Finally File-systems and Storage
- [ ] [[http://www.nobius.org/dbg/practical-file-system-design.pdf]] (Book)
- [X] [[https://www.allthingsdistributed.com/2023/07/building-and-operating-a-pretty-big-storage-system.html][Building and operating a pretty big storage system called S3 | All Things Distributed]]
  - [X] [[https://www.youtube.com/watch?v=sc3J4McebHE][FAST '23 - Building and Operating a Pretty Big Storage System (My Adventures in Amazon S3) - YouTube]]
- [ ] [[https://github.com/gotoco/dummyfs][GitHub - gotoco/dummyfs: Simple Linux Filesystem designed for learning purposes]]
- [ ] [[https://blog.carlosgaldino.com/writing-a-file-system-from-scratch-in-rust.html][Writing a file system from scratch in Rust ¬∑ carlosgaldino]]
- [ ] [[https://www.kernel.org/doc/html/latest/filesystems/ext4/index.html][ext4 Data Structures and Algorithms ‚Äî The Linux Kernel documentation]]
- [ ] [[https://news.ycombinator.com/item?id=38513402][A minimum complete tutorial of Linux ext4 file system (2017) | Hacker News]]
- [ ] Evan Jones
  - [ ] [[https://www.evanjones.ca/durability-nvme.html][Durability: NVMe disks (evanjones.ca)]]
  - [ ] [[https://www.evanjones.ca/durability-filesystem.html][Durability: Linux File APIs (evanjones.ca)]]
- [X] Basics
  - [X] [[https://stackoverflow.com/questions/25819226/what-is-the-difference-between-inode-number-and-file-descriptor][What is the difference between inode number and fd]]
  - [X] [[https://www.reddit.com/r/linux4noobs/comments/n7rxsf/what_are_the_various_filesystems_and_what_are_the/][what_are_the_various_filesystems]]
  - [X] [[https://wiki.archlinux.org/title/file_systems][File systems - ArchWiki]]
  - [X] [[https://web.archive.org/web/20160802193932/https://www.cs.nmsu.edu/~pfeiffer/classes/474/notes/inodefs.html][inode based FS]]
  - [X] [[https://en.wikipedia.org/wiki/Linux_Standard_Base][Linux Standard Base - Wikipedia]]
  - [X] [[https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard][Filesystem Hierarchy Standard - Wikipedia]]
- [ ] ZFS
  - [ ] [[https://www.servethehome.com/an-introduction-to-zfs-a-place-to-start/][An Introduction to ZFS A Place to Start - ServeTheHome]]
  - [ ] [[https://lobste.rs/s/cuihsv/openzfs_final_word_file_systems][OpenZFS - The Final Word in File Systems | Lobsters]]
  - [ ] [[https://klarasystems.com/articles/basics-of-zfs-snapshot-management/][Basics of ZFS Snapshot Management | Klara Inc.]]
  - [ ] [[https://andreas.welcomes-you.com/zfs-risc-v-512mb-lichee-rv/][ZFS on a single core RISC-V hardware with 512MB (Sipeed Lichee RV D1)]]
** Performance
- [[https://tanelpoder.com/posts/high-performance-block-io-on-linux/][Video: High Performance Block I/O on Linux | Tanel Poder Consulting]]
- [[https://www.youtube.com/watch?v=vT5zI6-sKe8][GopherCon 2023: Konrad Reiche - Building a Highly Concurrent Cache in Go: A Hitchhiker's Guide - YouTube]]
- [[https://purplesyringa.moe/blog/the-ram-myth/][The RAM myth | purplesyringa's blog]]
** BPF & eBPF
- [ ] [[https://mas-bandwidth.com/xdp-for-game-programmers/][XDP for Game Programmers]]
- [ ] [[https://bpfman.io/main/#why-ebpf][bpfman]]
- [ ] Videos
  - [ ] [[https://www.youtube.com/watch?v=lqIBKiTI62Q][eCHO Episode 153: eBPF Summit 2024 CTF Walkthrough - YouTube]]
  - [ ] [[https://www.youtube.com/live/TtoeaunixBY][eCHO Episode 121: eBPF Coding Challenges - YouTube]]
  - [ ] [[https://www.youtube.com/watch?v=UTGnhsmqf5A][eCHO Episode 112: ebeenix - eBPF and Nix - YouTube]]
  - [ ] [[https://www.youtube.com/watch?v=Z5wciVIjRV4][eBPF Crash Course for Beginners - YouTube]]
- [ ] [[https://github.com/lizrice/ebpf-beginners][lizrice/ebpf-beginners]]
- [ ] [[https://ebpf.io/][eBPF - Introduction, Tutorials & Community Resources]]
- [ ] [[https://0x.tools/][X-Ray vision for Linux systems | 0x.tools]]
- [ ] [[https://www.netronome.com/blog/bpf-ebpf-xdp-and-bpfilter-what-are-these-things-and-what-do-they-mean-enterprise/][BPF, eBPF, XDP and Bpfilter]]
- [ ] [[https://news.ycombinator.com/item?id=38708044][tcpdump only uses BPF, not eBPF. BPF is a simpler language that, among other ...]]  (Good comment compares BPF and eBPF)
- [ ] [[https://jvns.ca/blog/2017/06/28/notes-on-bpf---ebpf/][Notes on BPF & eBPF]]
- [ ] [[https://news.ycombinator.com/item?id=37942791][Linux runtime security agent powered by eBPF | Hacker News]]
- [ ] [[https://lwn.net/Articles/740157/][A thorough introduction to eBPF {LWN.net}]]
- [ ] [[https://lwn.net/Articles/787856/][BPF: what's good, what's coming, and what's needed {LWN.net}]]
- [ ] [[https://www.oreilly.com/content/ebpf-and-systems-performance/][eBPF and systems performance ‚Äì O‚ÄôReilly]]
- [X] [[https://cilium.io/blog/2018/04/17/why-is-the-kernel-community-replacing-iptables/][Why is the kernel community replacing iptables with BPF?]]
** Strace
- [ ] [[https://blog.packagecloud.io/the-definitive-guide-to-linux-system-calls/][The Definitive Guide to Linux System Calls | Packagecloud Blog]]
- [ ] [[https://nanxiao.gitbooks.io/strace-little-book/content/][Strace little book]]
- [ ] [[https://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html][strace Wow Much Syscall]][[https://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html][strace Wow Much Syscall]]
- [ ] [[https://blog.packagecloud.io/how-does-strace-work/][How does strace work? | Packagecloud Blog]]
- [ ] [[https://jorge.fbarr.net/2014/01/19/introduction-to-strace/][Introduction to strace | The Road to Elysium]]
- [ ] [[https://theartofmachinery.com/2019/11/14/deployment_debugging_strace.html][Debugging Software Deployments with strace ‚Äî The Art of Machinery]]
- [ ] [[https://jvns.ca/blog/2020/04/29/why-strace-doesnt-work-in-docker/][Why strace doesn't work in Docker]]
** Arch
- [[https://safari.ethz.ch/architecture/fall2022/doku.php?id=schedule][schedule [Computer Architecture - Fall 2022]‚Äã]]
  - [[https://www.youtube.com/playlist?list=PL5Q2soXY2Zi-cAls3cyauNzM7-74Eq31O][Livestream - Computer Architecture - ETH Z√ºrich (Fall 2022) - YouTube]]
* üï∏ HB14: Scraping and Archival
** Become spiderman
- [-] [[https://news.ycombinator.com/item?id=38077502][Web Scraping: Data for Everyone | Hacker News]]
- [-] [[https://andadinosaur.com/youtube-s-anti-adblock-and-ublock-origin][Youtube‚Äôs Anti-adblock and uBlock Origin - And a Dinosaur]]
- [-] [[https://news.ycombinator.com/item?id=38105839][The business of extracting knowledge from academic publications | Hacker News]]
- [-] [[https://github.com/reanalytics-databoutique/webscraping-open-project][webscraping-open-project]] (solid outline)
- [-] [[https://github.com/lorien/awesome-web-scraping][lorien/awesome-web-scraping]] (good pointers)
- [-] [[https://www.checklyhq.com/learn/headless/][Learn Playwright & Puppeteer | Checkly]]
** Become spiderman at scale
- [ ] [[https://michaelnielsen.org/ddi/how-to-crawl-a-quarter-billion-webpages-in-40-hours/][How to crawl a quarter billion webpages in 40 hours | DDI]], also [[https://news.ycombinator.com/item?id=36337473][HN Thread]]
- [ ] [[https://news.ycombinator.com/item?id=38057759][Show HN: how I built the largest open database of Australian law | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=33654177][Ask HN: Have you ever used anti detect browsers for web scraping?]]
- [ ] [[https://github.com/niespodd/browser-fingerprinting][Analysis of Bot Protection systems]]
- [ ] [[https://bulletproofdev.github.io/posts/proxies/][How to choose the right proxy service for your bots and scraping]]
- [ ] [[https://wiringbits.net/wiringbits/2020/06/07/a-raspberry-pi-as-a-decent-residential-proxy.html][A Raspberry Pi as a decent residential proxy | wiringbits]]
** Archiving for the greater good
- [ ] [[https://guides.lib.umich.edu/c.php?g=992751][Getting Started - Digital Archiving]]
- [ ] WARC
  - [ ] [[https://news.ycombinator.com/item?id=40614308][WARC-GPT: An open-source tool for exploring web archives using AI | Hacker News]]
  - [ ] [[https://blog.christianperone.com/2023/06/appreciating-llms-data-pipelines/][Large language model data pipelines and Common Crawl (WARC/WAT/WET)]]
  - [ ] [[https://www.marginalia.nu/log/94_warc_warc/][WARC'in the crawler @ marginalia.nu]]
  - [ ] [[https://news.ycombinator.com/item?id=39183670][An Introduction to the WARC File | Hacker News]]
- [ ] [[https://www.nngroup.com/articles/web-pages-must-live-forever/][Web Pages Must Live Forever]]
- [ ] [[https://gwern.net/archiving][Archiving URLs ¬∑ Gwern.net]]
- [ ] [[https://thecreativeindependent.com/guides/how-to-archive-your-work-digitally/][How to archive your work digitally ‚Äì The Creative Independent]]
- [ ] [[https://news.ycombinator.com/item?id=38105839][The business of extracting knowledge from academic publications | Hacker News]]
- [ ] [[https://ethics-law.archives.ncbs.res.in/docs/intro][Introduction | Archives, Ethics and the Law in India]]
- [ ] [[https://github.com/iipc/awesome-web-archiving][iipc/awesome-web-archiving]]
** Maintaining archives
- [ ] [[https://annas-blog.org/how-to-run-a-shadow-library.html][How to run a shadow library]]
- [ ] [[http://ascii.textfiles.com/archives/5443][Archiving in the Time of Streaming]]
* „äô HB15: Working with data
** Probability and Statistics
- [-] [[https://www.bcfoltz.com/stats-101/][STATISTICS 101 Playlists ‚Äì Brandon Foltz]]
- [-] [[https://xcelab.net/rm/statistical-rethinking/][Statistical Rethinking | Richard McElreath]]  (Book + Course), Follow [[https://github.com/pymc-devs/pymc-resources/tree/main/Rethinking_2][PyMC implementation]]
- [-] Stats Without Tears (Book)
- [ ] [[https://allendowney.blogspot.com/2016/06/there-is-still-only-one-test.html][Probably Overthinking It: There is still only one test]]
- [ ] [[https://lindeloev.github.io/tests-as-linear/][Common statistical tests are linear models (or: how to teach stats)]]
- [ ] [[https://seeing-theory.brown.edu/][Seeing Theory]] (Book)
- [ ] [[https://github.com/carloocchiena/the_statistics_handbook][the_statistics_handbook]]
- [ ] [[https://web.archive.org/web/20110702162929/https://zedshaw.com/essays/programmer_stats.html][Programmers Need To Learn Statistics Or I Will Kill Them All]]
- [ ] [[https://www.youtube.com/channel/UCtYLUTtgS3k1Fg4y5tAhLbw][StatQuest with Josh Starmer - YouTube]]
- [ ] [[https://research.swtch.com/sample][research!rsc: The Magic of Sampling, and its Limitations]]
- [ ] Percentiles
  - [ ] [[https://news.ycombinator.com/item?id=37244971][Understanding Percentiles (2021) | Hacker News]] (See comments)
  - [ ] [[https://prestodb.io/docs/current/functions/qdigest.html][Quantile Digest Functions ‚Äî Presto 0.283 Documentation]]
** Do the work with Data science
- [ ] Data Science from Scratch, 2nd Edition (Book)
- [ ] Everyday Data Science (Book)
- [ ] [[https://gabors-data-analysis.com/][Data Analysis for Business, Economics, and Policy - Gabors Data Analysis]] (Book)
- [ ] Effective Pandas (Book)
- [ ] [[https://labs.quansight.org/blog/dataframe-group-by][The Polars vs pandas difference nobody is talking about | Labs]]
- [ ] [[https://news.ycombinator.com/item?id=39281178][SQL for data scientists in 100 queries | Hacker News]]
- [ ] [[https://khuyentran1401.github.io/Efficient_Python_tricks_and_tools_for_data_scientists/README.html?s=35][Efficient Python Tricks and Tools for Data Scientists]] (Book)
- [ ] [[https://news.ycombinator.com/item?id=39974229][Histograms for Probability Density Estimation: A Primer | Hacker News]]
- [ ] [[https://ryxcommar.com/2022/11/27/goodbye-data-science/][Goodbye, Data Science ‚Äì r y x, r]]
- [ ] [[https://news.ycombinator.com/item?id=37792916][Exploratory data analysis for humanities data | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=34955309][Most data work seems fundamentally worthless | Hacker News]]
- [ ] [[https://shakoist.substack.com/p/why-business-data-science-irritates?s=35][Why Business Data Science Irritates Me - by shako]]
- [ ] [[https://www.nu42.com/2015/03/how-you-average-numbers.html][How you average numbers matters]]
- [ ] [[https://news.ycombinator.com/item?id=37792916][Exploratory data analysis for humanities data | Hacker News]]
- [ ] SQL for Analysis
  - [ ] [[https://hakibenita.com/sql-for-data-analysis][Practical SQL for Data Analysis | Haki Benita]]
  - [ ] [[https://www.motifanalytics.com/blog/a-beginners-guide-to-sequence-analytics-in-sql][A Beginner's Guide to Sequence Analytics in SQL]]
  - [ ] [[https://news.ycombinator.com/item?id=34578324][SQL should be the default choice for data transformation logic]]
  - [ ] [[https://news.ycombinator.com/item?id=35054786][Stochastic gradient descent written in SQL | Hacker News]]
  - [ ] [[https://www.youtube.com/watch?v=9Rdwh0rNaf0][DuckDB: Crunching Data Anywhere, From Laptops to Servers ‚Ä¢ Gabor Szarnyas ‚Ä¢ GOTO 2024 - YouTube]] üåü
- [ ] Pandas and Numpy
  - [ ] [[https://www.freecodecamp.org/learn/data-analysis-with-python][Data Analysis with Python]] (Course)
  - [ ] [[https://pythonspeed.com/datascience/][Articles: Speed up your data science and scientific computing code]]
  - [ ] [[https://betterprogramming.pub/pandas-illustrated-the-definitive-visual-guide-to-pandas-c31fa921a43][Pandas Illustrated: The Definitive Visual Guide to Pandas]]
  - [ ] [[https://datapythonista.me/blog/pandas-20-and-the-arrow-revolution-part-i][pandas 2.0 and the Arrow revolution (part I)]]
  - [ ] [[https://www.youtube.com/playlist?list=PL-osiE80TeTsWmV9i9c58mdDCSskIFdDS][Pandas Tutorials - YouTube]]
  - [ ] [[https://www.machinelearningplus.com/python/101-numpy-exercises-python/][101 NumPy Exercises for Data Analysis (Python) - ML+]]
  - [ ] [[https://www.youtube.com/watch?v=5JnMutdy6Fw][Brandon Rhodes - Pandas From The Ground Up]]
- [ ] Pandas and Polars
  - [ ] [[https://pola.rs/posts/polars_birds_eye_view/][Polars ‚Äî A bird's eye view of Polars]]
  - [ ] [[https://news.ycombinator.com/item?id=35423569][Pandas 2.0 | Hacker News]]
  - [ ] [[https://airbyte.com/blog/pandas-2-0-ecosystem-arrow-polars-duckdb][Pandas 2.0 and its Ecosystem (Arrow, Polars, DuckDB) | Airbyte]]
  - [ ] [[https://superfastpython.com/numpy-share-array-processes/][9 Ways to Share a Numpy Array Between Processes]]
  - [ ] [[https://pythonspeed.com/articles/polars-exploratory-data-analysis-vs-production/][Polars for initial data analysis, Polars for production]]
- [ ] ML and Stats
  - [ ] [[https://news.ycombinator.com/item?id=41111115][The Truth About Linear Regression (2015) | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=41072616][Applied Machine Learning for Tabular Data | Hacker News]]
  - [ ] [[https://mattblackwell.github.io/gov2002-book/][A User‚Äôs Guide to Statistical Inference and Regression]] üåü
- [ ] PCA
  - [ ] [[https://stats.stackexchange.com/questions/2691/making-sense-of-principal-component-analysis-eigenvectors-eigenvalues][pca - Making sense of principal component analysis, eigenvectors & eigenvalue]]
  - [ ] [[https://setosa.io/ev/principal-component-analysis/][Principal Component Analysis explained visually]]
  - [ ] [[https://arxiv.org/abs/1404.1100][[1404.1100] A Tutorial on Principal Component Analysis]]
- [ ] Anomaly Detection (Time-Series)
  - [ ] [[https://news.ycombinator.com/item?id=42609595][Time-Series Anomaly Detection: A Decade Review | Hacker News]]
  - [ ] [[https://matrixprofile.org/][Home | Matrix Profile Foundation]] üåü
  - [ ] [[https://about.gitlab.com/blog/2019/07/23/anomaly-detection-using-prometheus/][How to use Prometheus for anomaly detection in GitLab]]
  - [ ] [[https://grafana.com/blog/2024/10/03/how-to-use-prometheus-to-efficiently-detect-anomalies-at-scale/][How to use Prometheus to efficiently detect anomalies at scale | Grafana Labs]]
** Data processing
- [ ] Data Engineering
  - [ ] [[https://handbook.gitlab.com/handbook/business-technology/data-team/][Data Team | The GitLab Handbook]]
  - [ ] [[https://dataengineering.wiki/Learning+Resources][Learning Resources - Data Engineering Wiki]] (Wiki)
  - [ ] [[https://v2thegreat.com/2024/06/19/lessons-learned-from-scaling-to-multi-terabyte-datasets/][Lessons Learned from Scaling to Multi-Terabyte Datasets ‚Äì Build Great Things]]
  - [ ] [[https://www.oreilly.com/library/view/designing-data-intensive-applications/9781491903063/][Designing Data-Intensive Applications]] (Book)
  - [ ] [[https://github.blog/2024-06-11-how-we-improved-push-processing-on-github/][How we improved push processing on GitHub - The GitHub Blog]]
  - [ ] [[https://materialize.com/blog/warehouse-abuse/][The uses and abuses of Cloud Data Warehouses]]
  - [ ] [[https://aliramadhan.me/2024/03/31/trillion-rows.html][Building a weather data warehouse part I: Loading a trillion rows of weather data into TimescaleDB]]
  - [ ] [[https://news.ycombinator.com/item?id=36616799][Demystifying Text Data with the Unstructured Python Library | Hacker News]]
  - [ ] [[https://cohost.org/tef/post/1764930-how-not-to-write-a][cohost! - "how (not) to write a pipeline"]]
  - [ ] Batch processing
    - [ ] [[https://betterprogramming.pub/data-engineering-101-from-batch-processing-to-streaming-54f8c0da66fb][Data Engineering 101: From Batch Processing to Streaming]]
    - [ ] [[https://maximebeauchemin.medium.com/functional-data-engineering-a-modern-paradigm-for-batch-data-processing-2327ec32c42a][Functional Data Engineering ‚Äî a modern paradigm for batch data processing]]
  - [ ] Stream Processing
    - [ ] [[https://news.ycombinator.com/item?id=41914736][Streaming joins are hard | Hacker News]]
    - [ ] [[https://atproto.com/articles/atproto-for-distsys-engineers][ATProto for distributed systems engineers - AT Protocol]]
    - [ ] [[https://github.com/getlago/lago/wiki/Using-Clickhouse-to-scale-an-events-engine][Using Clickhouse to scale an events engine ¬∑ getlago/lago Wiki ¬∑ GitHub]]
    - [ ] [[https://www.oreilly.com/radar/the-world-beyond-batch-streaming-101/][Streaming 101: The world beyond batch ‚Äì O‚ÄôReilly]]
    - [ ] [[https://www.reddit.com/r/AskProgramming/comments/jw3tz8/how_do_streaming_apis_work/][How do streaming APIs work]]
    - [ ] [[https://flink.apache.org/news/2019/02/13/unified-batch-streaming-blink.html][Apache Flink: Batch as a Special Case of Streaming]]
    - [ ] [[https://www.dr-josiah.com/2011/05/essentials-behind-building-streaming.html][A Dash of Technology: The Essentials Behind Building a Streaming API]]
    - [ ] [[https://www.oreilly.com/content/why-local-state-is-a-fundamental-primitive-in-stream-processing/][Why local state is a fundamental primitive in stream processing ‚Äì O‚ÄôReilly]]
- [ ] Case studies
  - [ ] [[https://csvbase.com/blog/3][Parquet: more than just "Turbo CSV"]]
  - [ ] [[https://lobste.rs/s/h8lsyz/analyzing_multi_gigabyte_json_files][Analyzing multi-gigabyte JSON files locally | Lobsters]]
  - [ ] [[https://blog.marcua.net/2022/02/20/data-diffs-algorithms-for-explaining-what-changed-in-a-dataset.html][Data diffs: Algorithms for explaining what changed in a dataset]]
  - [ ] [[https://hubertdulay.substack.com/p/stream-processing-vs-real-time-olap?r=46sqk][Stream Processing vs Real-time OLAP vs Streaming Database]]
  - [ ] [[https://news.ycombinator.com/item?id=27632949][Notes on streaming large API responses | Hacker News]]
  - [ ] [[https://kapernikov.com/a-comparison-of-data-processing-frameworks/][A comparison of data processing frameworks ‚Äì Kapernikov]]
- [ ] Comparison
  - [[https://www.reddit.com/r/Database/comments/rtnnyq/what_are_the_advantages_of_using_nosql_databases/][nosql vs sql]]
  - [[https://www.scylladb.com/product/benchmarks/][ScyllaDB | NoSQL Database Benchmarks & Testing]]
  - [[https://www.reddit.com/r/bigdata/comments/tbfwmk/which_database_should_i_choose_why_are_there_so/][too many dbs]]
  - [[https://olap.com/types-of-olap-systems/][Types of OLAP Database Systems]]
  - [[https://www.scattered-thoughts.net/writing/a-shallow-survey-of-olap-and-htap-query-engines/][A shallow survey of OLAP and HTAP query engines]]
  - [[https://lobste.rs/s/c49sak/which_embedded_olap_database_pick][Which embedded OLAP database to pick? | Lobsters]]
  - [[https://www.reddit.com/r/dataengineering/comments/x29lkc/database_or_query_engine_for_heavy_read/][db for heavy read]]
  - [[https://www.reddit.com/r/programming/comments/md4oia/sqlite_is_not_a_toy_database/][sql no toy]]
- [ ] Others
  - [ ] [[https://csvbase.com/blog/5][Simple data pipeline powertools: sqlite, pandas, gnuplot and friends]]
  - [ ] [[https://www.maxcountryman.com/articles/data-for-decisions][Data for Decisions - Max Countryman]]
  - [ ] [[https://orobinson.co.uk/posts/2023-01-04_tips_for_writing_long_running_scripts/][Tips for writing long running data processing scripts]]
  - [ ] [[https://www.confluent.io/blog/databases-meet-stream-processing-the-future-of-sql/][The Future of SQL: Databases Meet Stream Processing | Confluent]]
  - [ ] [[https://www.confluent.io/blog/how-real-time-stream-processing-safely-scales-with-ksqldb/][How Real-Time Stream Processing Safely Scales with ksqlDB]]
** Deep Learning
- [ ] Basics
  - [ ] [[https://arxiv.org/abs/2206.13446][[2206.13446] Pen and Paper Exercises in Machine Learning]]
  - [ ] [[https://www.youtube.com/watch?v=PGSba51aRYU&t=13s][Machine Learning in C (Episode 1) - YouTube]]
  - [ ] [[https://karpathy.ai/zero-to-hero.html][Neural Networks: Zero To Hero]]
  - [ ] [[https://jaykmody.com/blog/gpt-from-scratch/][GPT in 60 Lines of NumPy | Jay Mody]]
  - [ ] [[https://www.youtube.com/playlist?list=PLQVvvaa0QuDcjD5BAw2DxE6OF2tius3V3][Neural Networks from Scratch in Python - YouTube]]
  - [ ] [[https://www.3blue1brown.com/topics/neural-networks][3Blue1Brown]]
  - [ ] [[https://huggingface.co/learn/nlp-course/chapter1/1][Introduction - Hugging Face NLP Course]]
  - [ ] [[https://news.ycombinator.com/item?id=42902936][RLHF Book | Hacker News]]
- [ ] Deep Learning
  - [ ] https://www.bishopbook.com/
  - [ ] https://www.oreilly.com/library/view/ai-engineering/9781098166298/
  - [ ] https://d2l.ai/
  - [ ] https://udlbook.github.io/udlbook/
  - [ ] [[https://course.fast.ai/][Practical Deep Learning for Coders]] üåü
  - [ ] [[https://dlsyscourse.org/lectures/][DeepL Sys Lectures]]
  - [ ] [[https://dlvu.github.io/][Deep Learning @ VU | DLVU]]
  - [ ] [[https://arxiv.org/abs/2106.10165][[2106.10165] The Principles of Deep Learning Theory]]
- [ ] Systems
  - [ ] [[https://mlc.ai/summer22/][MLC Compulation - Real MLOPS | Home]] üåü
  - [ ] [[https://efficientml.ai/?s=35][6.5940]]
  - [ ] [[https://spinningup.openai.com/en/latest/user/introduction.html][Introduction ‚Äî Spinning Up documentation]]
- [ ] Embeddings
  - [ ] [[https://vickiboykis.com/what_are_embeddings/index.html][What are embeddings?]]
  - [ ] [[https://news.ycombinator.com/item?id=37867635][Text embeddings reveal almost as much as text | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=42716200][Train faster static embedding models with sentence transformers | Hacker News]]
  - [ ] Tools to explore
    - [ ] https://fasttext.cc/
    - [ ] https://github.com/explosion/floret (fork of fasttext)
  - [ ] [[https://interconnected.org/home/2024/05/31/camera][Here comes the Muybridge camera moment but for text. Photoshop too (Interconnected)]]
  - [ ] [[https://simonwillison.net/2023/Oct/23/embeddings/][Embeddings: What they are and why they matter]]
  - [ ] [[https://blog.wilsonl.in/hackerverse-2/][40 million embeddings to find who knows what on Hacker News | Wilson Lin]]
  - [ ] [[https://news.ycombinator.com/item?id=40067486][Embeddings are a good starting point for the AI curious app developer | Hacker News]]
  - [ ] SAE what?
** Deploying stuff
- [ ] L1
  - [ ] [[https://ai4bharat.iitm.ac.in/blog/indicllm-suite/][IndicLLM Suite ‚Äì AI4BHƒÄRAT]] üåü
  - [ ] [[https://huggingface.co/course/chapter1/1][Introduction - Hugging Face Course]]
  - [ ] [[https://fullstackdeeplearning.com/][Full Stack Deep Learning]]
  - [ ] [[https://www.serverless-ml.org/modules][Modules and details]]
  - [ ] https://github.com/captn3m0/NL2SQL-workshop
- [ ] L2
  - [ ] [[https://eugeneyan.com/writing/llm-patterns/][Patterns for Building LLM-based Systems & Products]]
  - [ ] [[https://news.ycombinator.com/item?id=35435253][Ask HN: Fastest way to turn a Jupyter notebook into a website these days?]]
  - [ ] [[https://huyenchip.com/2023/04/11/llm-engineering.html][Building LLM applications for production]]
  - [ ] [[https://asim.ihsan.io/openai-discord-bot-on-aws/][Creating a Cost-Effective and Chatbot with OpenAI, AWS, and Discord]]
  - [ ] [[https://news.ycombinator.com/item?id=40816158][Infrastructure set-up & open-source scripts to train a 70B model from bare metal | Hacker News]]
  - [ ] [[https://huyenchip.com/mlops/][MLOps guide]]
    - [ ] https://github.com/featurestoreorg/featurestore-benchmarks
    - [ ] [[https://ppml.dev/development-tools.html][Chapter 10 Tools for Developing Pipelines | The Pragmatic Programmer for Machine Learning]]
    - [ ] https://github.com/stas00/ml-engineering
    - [ ] [[https://github.com/DataTalksClub/mlops-zoomcamp][Free MLOps course from DataTalks.Club]]
    - [ ] [[https://www.cpard.xyz/posts/mlops_is_mostly_data_engineering/][MLOps is Mostly Data Engineering. ‚Ä¢ Kostas Heaven on Net]]
    - [ ] [[https://madewithml.com/courses/mlops/design/][Designing Machine Learning Products - Made With ML]]
    - [ ] [[https://www.ravirajag.dev/blog/mlops-summary][MLOps Basics {Week 10}: Summary]]
** LLMs in production
- [[https://github.com/huggingface/smol-course][GitHub - huggingface/smol-course: A course on aligning smol models.]] üåü (LLM Course)
- [[https://github.com/SkalskiP/vlms-zero-to-hero][GitHub - SkalskiP/vlms-zero-to-hero]] üåü (VLM Course)
- [[https://hamel.dev/blog/posts/evals/#level-1-unit-tests][Your AI Product Needs Evals ‚Äì Hamel's Blog]]
- [[https://swaroopch.com/blog/mastering-llms/#rag-is-a-search-problem][Takeaways from Mastering LLMs Course ‚Äì Swaroop, The Dreamer]]
- [[https://applied-llms.org/][What We‚Äôve Learned From A Year of Building with LLMs ‚Äì Applied LLMs]]
- [[https://huyenchip.com/2024/07/25/genai-platform.html][Building A Generative AI Platform]]
- [[https://hamel.dev/blog/posts/course/?s=35][An Open Course on LLMs, Led by Practitioners ‚Äì Hamel‚Äôs Blog]]
- [[https://rwilinski.ai/posts/generating-jsons-with-llm-beyond-basics/][Generating structured data with LLMs - Beyond Basics ‚Ä¢ rwilinski.ai]]
* HB17: Analyze, Visualize and Plot!
** Learn to plot
- [ ] [[https://jsvine.github.io/intro-to-visidata/basics/opening-files/][Opening Files ‚Äî An Introduction to VisiData]]
- [ ] [[https://news.ycombinator.com/item?id=41751407][The Data Visualisation Catalogue: find the right method for your data | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=43025645][Visualizing data is an art | Hacker News]]
- [ ] [[https://github.com/rougier/scientific-visualization-book][GitHub - rougier/scientific-visualization-book: An open access book on scientific visualization using python and matplotlib]]
- [ ] [[https://www.youtube.com/watch?v=N2opj8XzYBY][Google Sheets - Full Course - YouTube]]
  - [ ] [[https://news.ycombinator.com/item?id=37820877][The pivot table, the spreadsheet's most powerful tool (2020) | Hacker News]]
- [ ] [[https://distill.pub/2020/communicating-with-interactive-articles/][Communicating with Interactive Articles]]
- [ ] [[https://www.coursera.org/learn/python-plotting?specialization=data-science-python][Applied Plotting, Charting & Data Representation in Python]] (Course)
- [ ] [[https://news.ycombinator.com/item?id=38340226][Friends don't let friends make bad graphs | Hacker News]]
- [ ] [[https://python-charts.com/][The definitive Python data visualization site]]
  - [ ] [[https://pudding.cool/resources/][Our Resources(By Pudding Cool)]] üåü
- [ ] [[https://observablehq.com/blog/observable-2-0][Observable 2.0 | Observable]]
  - [ ] [[https://news.ycombinator.com/item?id=39582745][Interesting ideas in Observable Framework | Hacker News]]
- [ ] [[https://gist.github.com/rbitr/7bf79860c92974182bdedce79c7de0b3][Using Gnuplot for ascii charts inside notebooks ¬∑ GitHub]]
- [ ] [[http://mbtaviz.github.io/][Visualizing MBTA Data]]
- [ ] [[https://news.ycombinator.com/item?id=39883487][Zoomable Circles, a Svelte component for hierarchical data | Hacker News]]
- [ ] [[https://distill.pub/2020/communicating-with-interactive-articles/][Communicating with Interactive Articles]]
** Simulations
- [ ] [[https://computationalthinking.mit.edu/Fall23/][index ‚Äî Interactive Computational Thinking ‚Äî MIT]] üåü  (I MUST DO THIS!!)
- [ ] [[https://lucasfcosta.com/2021/09/20/monte-carlo-forecasts.html][How to replace estimations and guesses with a Monte Carlo simulation]]
- [ ] [[http://www.anuncommonlab.com/articles/how-simulations-work/][How Simulations Work | An Uncommon Lab]]
- [ ] [[https://easylang.dev/apps/tutorial_mcarlo.html][The Law of Large Numbers]]
** Example case studies
Random examples to reverse engineer from.
- [ ] [[https://news.ycombinator.com/item?id=34574570][A baffling scale transform on a chart of university course selection trends]]
- [ ] [[https://observablehq.com/@didoesdigital/about-timelines][About Timelines / Di | Observable]]
- [ ] [[https://huyenchip.com/2020/01/18/tech-workers-19k-compensation-details.html][Analysis of compensation, level, and experience details of 19k tech workers]]
- [ ] [[https://github.com/BuzzFeedNews/everything][BuzzFeedNews/everything: An index of all our open-source data]]
- [ ] [[https://cheapskatesguide.org/articles/world-internet-prices.html][A Random Sampling of Internet Service Prices around the World]]
* HB18: Get creative w programming
#+attr_html: :class book-hint warning small-text
#+begin_quote
"It often feels like 'hacking' to get result."
#+end_quote
** Get started w it
- [[https://news.ycombinator.com/item?id=17372069][Techniques for vertical storytelling | Hacker News]]
- [[https://youtube.com/watch?v=6avJHaC3C2U][The Art of Code - Dylan Beattie - YouTube]]
** Learn by doing
- [ ] [[https://genuary.art/][GENUARY]]
- [ ] [[https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH][Coding Challenges - Coding Train]]
- [ ] [[https://generativeartistry.com/tutorials/][Generative Artistry]]
- [ ] [[https://muffinman.io/blog/js-libraries-for-generative-art/][Libraries I use for generative art ¬∑ Muffin Man]]
* HB19: Hello Beep Boop HCI
** Get familiar
- [ ] [[https://guide.handmade-seattle.com/s/2022/ink-and-switch/][Ink & Switch ‚Ä¢ 2022 ‚Ä¢ Conference Guide ‚Ä¢ Handmade Seattle]]
- [ ] [[https://austinhenley.com/blog/futureofprogramming2023.html][The future of programming: Research at CHI 2023 - Austin Z. Henley]]  üåü
- [ ] [[https://archive.is/fc8B7][Tools, Computing and Research Labs]] üåü
- [ ] [[https://eugenkiss.github.io/7guis/tasks/][7GUIs]]
- [ ] [[https://www.scattered-thoughts.net/writing/implementing-interactive-languages/][Implementing interactive languages]]
- [ ] [[https://drossbucket.com/2021/06/30/hacker-news-folk-wisdom-on-visual-programming/][Hacker News folk wisdom on visual programming ‚Äì drossbucket]]
- [ ] [[https://www.youtube.com/playlist?list=PLs7DWGc_wmwRZHYGyiQxcgfJ7U1X81N_i][HCI-2022 Human Computer Interaction (2022-2023) - YouTube]]
- [ ] [[https://github.com/mathisonian/awesome-visualization-research][mathisonian/awesome-visualization-research]]
** How we do the internet thing
- [ ] [[https://prtksxna.github.io/knowledgepie-experiments/][Knowledge Pie Experiments]]
- [ ] [[https://cacm.acm.org/magazines/2021/2/250085-a-review-of-the-semantic-web-field/abstract#PageTop][A Review of the Semantic Web Field]]
- [ ] [[https://neustadt.fr/essays/the-small-web/][Rediscovering the Small Web - Neustadt.fr]]
- [ ] [[https://cheapskatesguide.org/articles/beauty-of-text.html][Looking for the End of the Internet]]
- [ ] [[https://www.reinterpretcast.com/open-hypermedia][Freeing the Web from the Browser]]
- [ ] [[http://dbmsmusings.blogspot.com/2019/12/its-time-to-rethink-how-we-share-data.html?m=1][DBMS Musings: It's time to rethink how we share data on the Web]]
* HB20: Understand P2P
** General P2P
- [ ] Brown Uni Course (Backup Drive)
- [ ] [[https://www.coursera.org/learn/peer-to-peer-protocols-local-area-networks][Peer-to-Peer Protocols and Local Area Networks]] (Course)
- [ ] [[https://news.ycombinator.com/item?id=9531265][Show HN: This page exists only if someone is looking at it | Hacker News]]
- [ ] [[https://archive.is/2ZOLj#selection-88.0-88.2][p2p papers]]
- [ ] [[https://lobste.rs/s/zoyb8p/some_designs_for_modern_peer_peer][Some designs for modern peer-to-peer networking | Lobsters]]
- [ ] [[https://www.reddit.com/r/nordvpn/comments/15mfivc/nordvpn_expert_series_how_we_achieved_nat/][How we achieved NAT traversal with vanilla WireGuard]]
- [ ] [[https://news.ycombinator.com/item?id=42256104][Show HN: TeaTime ‚Äì distributed book library powered by SQLite, IPFS and GitHub | Hacker News]] (gud p2p application)
** Torrent
- [ ] [[https://fiatjaf.com/759be3e8.html][A crappy course on torrents ‚Äì fiatjaf]]
- [ ] [[http://www.alexkyte.me/2016/10/how-bittorrent-really-works.html][Whitepapers With Friends: How BitTorrent Really Works]]
- [ ] [[https://webtorrent.github.io/workshop/][WebTorrent Workshop]]
- [ ] [[https://stackoverflow.com/questions/3844502/how-do-bittorrent-magnet-links-work/22240583#22240583][How do BitTorrent magnet links work? - Stack Overflow]]
- [ ] [[https://blog.jse.li/posts/torrent/][Building a BitTorrent client from the ground up in Go]]
- [ ] [[https://news.ycombinator.com/item?id=40047041][BTFS: BitTorrent Filesystem | Hacker News]]
- [ ] [[https://lobste.rs/s/wzkqos/distributed_bittorrent_like_social][Distributed bittorrent-like social network? | Lobsters]]
** Alternative internet
- [ ] [[https://subconscious.substack.com/p/redecentralization#%C2%A7content-addressing-decouples-data-from-origin][Redecentralization - by Gordon Brander - Subconscious]]
- [ ] [[https://web.archive.org/web/20240103220207/https://roberts.pm/irc_kvs/][Building a decentralized name system on top of IRC ‚Äì Matthew's Lab]]
- [ ] [[https://hypha.coop/dripline/p2p-primer-part-4/][Dripline: Check the specs: final thoughts on p2p options]]
** Protocols&Encoding
- [ ] [[https://www.youtube.com/watch?app=desktop&v=dAx8bDQjOrU][Binary Protocols - The Current State of Affairs]]
- [ ] [[https://www.youtube.com/watch?v=RmKA-vdi04I][ElixirConf 2016 - Implementing Binary Protocols with Elixir]]
- [ ] [[https://www.youtube.com/watch?v=qJb4g43vWFI][A Practical Postgres Protocol Primer - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=QEIGc3tXGmM][What‚Äôs In A Bit ‚Äì Designing, Using And Reverse-engineering Binary File Format]]
- [ ] [[https://capnproto.org/][Cap'n Proto: Introduction]]
- [ ] [[https://lobste.rs/s/dsglpi/cap_n_proto_0_8_streaming_flow_control_http][Cap'n Proto 0.8: Streaming flow control, HTTP-over-RPC, fibers, etc | Lobsters]]
- [ ] [[https://www.youtube.com/watch?v=hdCs6bPM4is][Ange Albertini: Funky File Formats - YouTube]]
** wtf NAT
- [X] [[https://tailscale.com/blog/how-nat-traversal-works/][How NAT traversal works ¬∑ Tailscale]]
- [ ] [[https://www.zerotier.com/2014/08/25/the-state-of-nat-traversal/][The State of NAT Traversal ‚Äì ZeroTier]]
** Time for WebRTC
- earlier it was browser based now available outside HN comment
- [ ] [[https://webrtcforthecurious.com/][WebRTC For The Curious]] (Book)
- [ ] [[https://news.ycombinator.com/item?id=39866325][Overlay networks based on WebRTC | Hacker News]]
- [ ] [[https://blogs.igalia.com/llepage/webrtc-gstreamer-and-html5-part-1/][WebRTC, GStreamer and HTML5 - Part 1]]
- [ ] [[https://news.ycombinator.com/item?id=38869672][Show HN: Bring phone calls into the browser (SIP-to-WebRTC) | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=38069974][Replacing WebRTC: real-time latency with WebTransport and WebCodecs | Hacker News]]
- [ ] See https://www.youtube.com/@CommCon/streams (Live Section for '24 talks)
* HB21: Geo and Maps
** Basics
- [[https://www.youtube.com/@JayForeman/videos][Jay Foreman - YouTube]]
- [[https://medium.com/nightingale/so-you-want-to-make-a-map-58c7f55f6b20][So You Want To Make A Map?]]
- [[https://storymaps.arcgis.com/stories/1e7f582d478a4b99bd0c70fffeac4c8b][Misconceptions]]
- [[https://bdon.org/blog/web-map-services/][Should web maps be centralized services?]]
- [[https://news.ycombinator.com/item?id=37889224][State of the Map EU 2023 | Hacker News]]
- [[https://www.youtube.com/watch?v=OSK4DlFePzk&embeds_referring_euri=https%3A%2F%2Ftwitter.com%2F&source_ve_path=Mjg2NjIsMjM4NTE][The Overture Maps Foundation: Marc Prioleau - MBM#43 - YouTube]]
- [[https://news.ycombinator.com/item?id=38112585][Engineering Icons Tube Map | Hacker News]]
- [[https://digest.browsertech.com/archive/browsetech-digest-felt-is-making-browsers-make/][Browsetech Digest: Felt is making browsers make maps [interview]‚Äã]]
- [[https://openradarscience.org/erad2024/arco-datasets][Analysis-Ready Cloud-Optimized Datasets - ERAD 2024]] üåü
** Get mapping
- [[https://mapschool.io/][mapschool: a free introduction to geo]]
- [[https://dewey.dunnington.ca/post/2024/wrangling-and-joining-130m-points-with-duckdb--the-open-source-spatial-stack/?s=35][Wrangling and joining 130M points with DuckDB + the open source spatial stack | Dewey Dunnington]]
- [[http://switchfromshapefile.org/][Shapefile must die!]]
- [[https://waterdata.usgs.gov/blog/snow-tiles-demo/][Origin and development of a Snowflake Map]]
- [[https://www.kschaul.com/post/2023/02/16/how-the-post-is-replacing-mapbox-with-open-source-solutions/][How The Post is replacing Mapbox with open source solutions]]
- [[https://bdon.org/blog/web-map-performance/][Getting to the bottom of web map performance]]
- [[https://news.ycombinator.com/item?id=43020756][Apache Iceberg now supports geospatial data types natively | Hacker News]]
** Play
- [[https://30daymapchallenge.com/][30DayMapChallenge]]
- [[http://www.statsmapsnpix.com/2020/03/making-3d-landscape-and-city-models.html][Stats, Maps n Pix: Making 3D landscape and city models with Aerialod]]
** GPS
- [[https://ciechanow.ski/gps/][GPS ‚Äì Bartosz Ciechanowski]]
- [[https://news.ycombinator.com/item?id=35550339][Calculating Position from Raw GPS Data (2017)]]
- [[https://gabrielsieben.tech/2023/05/01/the-location-off-switch-on-your-phone-is-a-lie/][The ‚ÄúLocation Off‚Äù switch on your phone is a lie. ‚Äì Gabriel Sieben]]
** QGIS
- [[https://chollinger.com/blog/2023/01/qgis-is-the-mapping-software-you-didnt-know-you-needed/][QGIS is the mapping software you didn't know you needed]]
- [[https://www.youtube.com/watch?v=kCnNWyl9qSE][QGIS 3 for Absolute Beginners - YouTube]]
- [[https://www.youtube.com/playlist?list=PL7HotvlLKHCs9nD1fFUjSOsZrsnctyV2R][QGIS Uncovered - YouTube]]
* HB22: Local First Stuff
** Basics
- [ ] [[https://mattweidner.com/2024/06/04/server-architectures.html][Architectures for Central Server Collaboration - Matthew Weidner]]  üåü
- [ ] [[https://stack.convex.dev/a-map-of-sync][A Map of Sync]] üåü
- [ ] [[https://news.ycombinator.com/item?id=41712593][A Local-First Case Study | Hacker News]]
- [ ] [[https://localfirstweb.dev/blog/2023-05-29-i-wrote-a-static-web-page][I wrote a static web page and accidentally started a community | Local-First Software]]
- [ ] [[https://www.wikiwand.com/en/Data_synchronization][Data synchronization - Wikiwand]]
- [ ] [[https://tonsky.me/blog/the-web-after-tomorrow/][The Web After Tomorrow @ tonsky.me]]
- [ ] [[https://lobste.rs/s/w9toij/local_first_forever_crdt_filesync][Local, first, forever - CRDT filesync | Lobsters]]
  - [ ] [[https://tonsky.me/blog/crdt-filesync/][Local, first, forever @ tonsky.me]]
- [ ] [[https://www.inkandswitch.com/local-first/][Local-first software: InkandSwitch]]
- [ ] [[https://www.powersync.com/blog/local-first-is-a-big-deal-especially-for-the-web][Local-First Software is a Big Deal, Especially for the Web]]
- [ ] [[https://adlrocha.substack.com/p/adlrocha-what-if-we-had-local-first][@adlrocha - What if we had Local-First Software?]]
- [ ] [[https://www.youtube.com/playlist?list=PLTbD2QA-VMnXFsLbuPGz1H-Najv9MD2-H][Lo.Fi (Local First) Meetups - YouTube]]
  - [ ] [[https://www.youtube.com/@localfirstfm][Local First Podcast - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=KrPsyr8Ig6M][Local-first software - Peter Van Hardenberg - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=RbiGkdSGm4s][Introduction to local-first applications - YouTube]]
- [ ] [[https://www.youtube.com/watch?v=jxuXGeMJsBU&t=1s][‚ÄãJohannes Schickling: Why Local-First? (Local-First Meetup Berlin #1) - YouTube]]
- [ ] [[https://news.ycombinator.com/item?id=41300888][Software possession for personal use | Hacker News]]
- [ ] [[https://www.youtube.com/watch?v=qHSI5rxTp_Q][Johannes Schickling ‚Äì Local-first app development | App.js Conf 2023 - YouTube]]
- [ ] [[https://electric-sql.com/blog/2023/02/09/developing-local-first-software][Developing local-first software - ElectricSQL]]
- [ ] [[https://www.youtube.com/watch?v=VqUzhnDd1-E][Holistic Local-First Software - Mauve Signweaver - YouTube]]
- [ ] [[https://www.zaynetro.com/post/how-to-build-e2ee-local-first-app/#backstory][How to almost build an E2EE local-first app | zaynetro]]
** Sync Server/Engine
- [ ] [[https://lobste.rs/s/grv7hp/why_is_everybody_talking_about_sync][Why is everybody talking about sync engines? | Lobsters]]
- [ ] [[https://dev.to/isaachagoel/are-sync-engines-the-future-of-web-applications-1bbi][Are Sync Engines The Future of Web Applications? - DEV Community]] (Has notes about using w sveltekit as-well)
- [ ] [[https://stack.convex.dev/object-sync-engine][An Object Sync Engine for Local-first Apps]]
- [ ] [[https://www.youtube.com/watch?v=6FikTQf8qho]["Building a Sync Engine in Clojure" by Stepan Parunashvili - YouTube]]
- [ ] [[https://stopa.io/post/296][A Graph-Based Firebase]] üåü
- [ ] [[https://sqlsync.dev/posts/stop-building-databases/][SQLSync - Stop building databases]]
- [ ] [[https://mattweidner.com/2024/06/04/server-architectures.html][Architectures for Central Server Collaboration - Matthew Weidner]] üåü
- [ ] [[https://gist.github.com/pesterhazy/3e039677f2e314cb77ffe3497ebca07b][Building an offline realtime sync engine ¬∑ GitHub]] üåü
- [ ] [[https://news.ycombinator.com/item?id=38489307][Accidental database programming | Hacker News]]
- [ ] [[https://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine][Rewriting the heart of our sync engine - Dropbox]]
- [ ] [[https://www.youtube.com/watch?v=aJh2VVEDWw4][ElectricSQL - Local first SQL with Elixir by James Arthur | Lambda Days 2023 - YouTube]]
- [ ] [[https://digest.browsertech.com/archive/browsertech-digest-figma-is-a-file-editor/][Browsertech Digest: Figma is a File Editor]]
- [ ] [[https://www.youtube.com/watch?v=T1ES9x8DKR4][SQLite as a Collaborative & Multiplayer Application File Format - YouTube]] (tantaman also has other nice videos related to this)
- [ ] [[https://www.youtube.com/watch?v=WxK11RsLqp4&t=2169s][Tuomas Artman: Real-time sync for web apps]] and [[https://www.youtube.com/watch?v=Wo2m3jaJixU][Scaling the Linear Sync Engine]]
- [ ] [[https://riffle.systems/essays/prelude/][Building data-centric apps with a reactive relational database]]
- [ ] [[https://www.youtube.com/watch?v=KcYl6_We0EU][AWS re:Invent 2019: Build data-driven mobile and web apps with AWS AppSync (MOB402) - YouTube]]
- [ ] [[https://tripleodeon.com/2022/11/closing-the-gap-between-your-users-and-their-data][Closing The Gap Between Your Users And Their Data]]
- [ ] [[https://jaredforsyth.com/posts/in-search-of-a-local-first-database/][In Search of a Local-First Database | Jared Forsyth.com]]
- [ ] [[https://electric-sql.com/blog/2023/08/14/introducing-electricsql-v0.5][Local-first sync for Postgres from the inventors of CRDTs - ElectricSQL]]
- [ ] [[https://marknotfound.com/posts/reverse-engineering-linears-sync-magic/][Reverse engineering Linear's sync magic]]
  - [ ] [[https://news.ycombinator.com/item?id=36519448][Scaling Linear's Sync Engine | Hacker News]]
*** Game network engines
- [ ] [[https://www.gdcvault.com/play/1014345/I-Shot-You-First-Networking][GDC Vault - I Shot You First: Networking the Gameplay of HALO: REACH]]
- [ ] [[https://gafferongames.com/categories/game-networking/][Game Networking | Gaffer On Games]] üåü
- [ ] [[https://www.gabrielgambetta.com/client-side-prediction-live-demo.html][Fast-Paced Multiplayer: Sample Code and Live Demo - Gabriel Gambetta]] üåü
- [ ] [[https://gafferongames.com/categories/game-physics/][Game Physics | Gaffer On Games]]
- [ ] [[https://gafferongames.com/categories/networked-physics/][Networked Physics | Gaffer On Games]]
- [ ] [[https://gafferongames.com/post/fixing_the_internet_for_games/][Fixing the Internet for Games | Gaffer On Games]]
- [ ] [[https://gafferongames.com/post/why_cant_i_send_udp_packets_from_a_browser/][Why can't I send UDP packets from a browser? | Gaffer On Games]]
- [ ] [[https://www.youtube.com/watch?v=vB0Vj9_c234][Showdown: High vs. Low Ping Player - YouTube]]
- [ ] https://mas-bandwidth.com/what-is-lag/
- [ ] https://mas-bandwidth.com/writing-highly-scalable-backends-in-udp/
- [ ] https://mas-bandwidth.com/writing-scalable-backends-in-udp-the-solution/
- [ ] https://mas-bandwidth.com/creating-a-first-person-shooter-that-scales-to-millions-of-players/
- [ ] https://mas-bandwidth.com/choosing-the-right-network-model-for-your-multiplayer-game/
- [ ] https://mas-bandwidth.com/the-case-for-network-acceleration-for-multiplayer-games/
- [ ] https://mas-bandwidth.com/creating-a-matchmaker-for-your-multiplayer-game/
- [ ] Netcode
  - [ ] [[https://remyhax.xyz/posts/golang-packet-editing/][Packet-Editing Games in Golang | REMY HAX]]
  - [ ] [[https://www.youtube.com/watch?v=vTH2ZPgYujQ][Developer Update | Let's Talk Netcode | Overwatch - YouTube]]
  - [ ] [[https://www.wikiwand.com/en/Netcode][Netcode - Wikiwand]]
  - [ ] https://decomposition.al/CSE138-2024-01/zines/zine-ali.pdf
- [ ] Souce code review
  - [ ] [[https://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking][Source Multiplayer Networking - Valve Developer Community]]
  - [ ] [[https://fabiensanglard.net/quake3/network.php][Quake 3 Source Code Review: Network Model]]
** CRDTs
- [ ] [[https://signalsandthreads.com/state-machine-replication-and-why-you-should-care/][Signals and Threads | State Machine Replication, and Why You Should Care]]
- [ ] [[https://interjectedfuture.com/a-simple-way-to-understand-crdts/][A simple way to understand CRDTs]]
- [ ] [[https://www.youtube.com/watch?v=_lQ2Q4Kzi1I][Text CRDTs from scratch, in code! - YouTube]]
- [ ] [[https://github.com/ergl/crdt-ml/tree/master][GitHub - ergl/crdt-ml: CRDTs - Conflict-Free Replicated Data Types for OCaml]] üåü
- [ ] [[https://github.com/siliconjungle/crdt-tutorials][GitHub - siliconjungle/crdt-tutorials: A repository to teach the fundamentals of CRDTs.]]
- [ ] Ditto stuff
  - [ ] [[https://ditto.live/blog/dittos-delta-state-crdts][Ditto - Blog - An inside look at Ditto's Delta State CRDTs]]
  - [ ] [[https://ditto.live/blog/testing-crdts-in-rust-from-theory-to-practice][Ditto - Blog - Testing CRDTs in Rust, from theory to practice]]
- [ ] [[https://interjectedfuture.com/crdts-turned-inside-out/][CRDTs Turned Inside Out]]
- [ ] [[https://madebyevan.com/algos/][Algorithm List - Made by Evan]]
- [ ] [[https://news.ycombinator.com/item?id=38661580][Causal Trees | Hacker News]]
- [ ] [[https://vlcn.io/blog/crdt-substrate][A Framework for Convergence: Creating CRDTs Without Specialized Knowledge]]
- [ ] [[https://interjectedfuture.com/trade-offs-between-different-crdts/][Trade-offs between Different CRDTs]]
- [ ] [[https://www.zxch3n.com/crdt-intro/crdt-intro.en/][Introduction to CRDTs | Zxch3n]]
- [ ] [[https://www.youtube.com/watch?app=desktop&v=OOlnp2bZVRs&s=35][John Mumm - A CRDT Primer: Defanging Order Theory - YouTube]]
- [ ] [[https://news.ycombinator.com/item?id=34329779][Keep CALM and CRDT on {pdf} | Hacker News]]
  - CRDTs are basically broken: the minute you look at them you sacrifice any guarantees. This paper proposes a principled "fix", but what you need is more than a CRDT.
  - Paper explores a richer API than that of CRDTs, which guarantees both update and query are meaningful
  - CRDTs are a buzzname for lattices storing state. Whats needed is to think latticewise (monotonically) about how you *use* state, not just store it.
- [ ] [[https://news.ycombinator.com/item?id=37764581][An interactive intro to CRDTs | Hacker News]] üåü
  - [ ] [[https://jakelazaroff.com/words/making-crdts-98-percent-more-efficient/][Making CRDTs 98% More Efficient | jakelazaroff.com]]
  - [ ] [[https://jakelazaroff.com/words/building-a-collaborative-pixel-art-editor-with-crdts/][Building a Collaborative Pixel Art Editor with CRDTs | jakelazaroff.com]]
- [ ] [[https://news.ycombinator.com/item?id=33865672][You might not need a CRDT | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=38289327][You don't need a CRDT to build a collaborative experience | Hacker News]]
- [ ] [[https://www.aadhav.me/posts/collaborative-editor][Building a collaborative text editor in Go]]
- [ ] [[https://vlcn.io/blog/gentle-intro-to-crdts.html][A Gentle Introduction to CRDTs - vlcn.io]]
- [ ] [[https://www.youtube.com/watch?v=DEcwa68f-jY][dotJS 2019 - James Long - CRDTs for Mortals - YouTube]]
- [ ] [[https://mattweidner.com/2022/02/10/collaborative-data-design.html][Designing Data Structures for Collaborative Apps - Matthew Weidner]]
- [ ] [[https://news.ycombinator.com/item?id=33764449][CRDT: Fractional Indexing | Hacker News]]
- [ ] [[https://nomad.foo/blog/cola][cola: a text CRDT for real-time collaborative editing]]
- [ ] [[https://www.bartoszsypytkowski.com/the-state-of-a-state-based-crdts/][An introduction to state-based CRDTs]]
- [ ] [[https://news.ycombinator.com/item?id=36030866][CRDT Benchmarks | Hacker News]]
- [ ] [[https://www.youtube.com/watch?v=x7drE24geUw][CRDTs: The Hard Parts - YouTube]]
- [ ] [[https://docs.google.com/presentation/d/1u8bcvfEcJ2wseH3u4P8QAMabq5VZrPR-FX8VaIIkbFQ/edit#slide=id.g11737e0938d_0_264][Text CRDTs - PLunch 22/02/24 - Google Slides]]
- [ ] [[https://arxiv.org/abs/2305.00583][The Art of the Fugue]]
- [ ] [[https://www.inkandswitch.com/peritext/][Peritext: A CRDT for Rich-Text Collaboration]]
  - [ ] [[https://github.com/inkandswitch/peritext/blob/main/src/micromerge.ts]]
- [ ] [[https://news.ycombinator.com/item?id=41372833][Faster CRDTs (2021) | Hacker News]]
- from seph
  - [[https://josephg.com/blog/crdts-go-brrr/][CRDTs go brrr]]
  - [[https://josephg.com/blog/crdts-are-the-future/][I was wrong. CRDTs are the future]]
  - [[https://josephg.com/blog/api-for-changes/][An API for data that changes over time]]
* HB24: Network Programming
** Network Programming wen
- [ ] Basics
  - [ ] Unix Network Programming V1 (Book)
  - [ ] [[https://beej.us/guide/bgnet0/html/split/][Beej's Guide to Network Concepts]]
  - [ ] [[https://lwn.net/Articles/960913/][So you think you understand IP fragmentation? [LWN.net]‚Äã]]
  - [ ] [[https://www.youtube.com/watch?v=3b_TAYtzuho][OSI and TCP IP Models - Best Explanation - YouTube]]
  - [ ] [[https://archive.is/vwIdj][Network Programming Self-Study]]üåü
  - [ ] [[https://lobste.rs/s/pankrv/endianness_why_i_don_t_like_htons_3_friends][Endianness, and why I don't like htons(3) and friends | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=39086462][Two File Descriptors for Sockets | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=38948091][epoll: The API that powers the modern internet (2022) | Hacker News]]
  - [ ] [[https://ocaml.github.io/ocamlunix/sockets.html][Modern communication: sockets]]
  - [ ] [[https://goodyduru.github.io//os/2023/10/05/ipc-unix-signals.html][IPC - Unix Signals | Goodness‚Äôs blog]]
  - [ ] [[https://github.com/nguyenchiemminhvu/LinuxNetworkProgramming][GitHub - nguyenchiemminhvu/LinuxNetworkProgramming: A comprehensive guide for Linux Network (Socket) programming]] üåü
- [ ] Sockets
  - [ ] [[https://rahul-soni.com/posts/starting-with-sockets/][Starting With Sockets]]
  - [ ] [[https://news.ycombinator.com/item?id=42022649][Direct Sockets API in Chrome 131 | Hacker News]]
  - [ ] [[https://swagnik.netlify.app/posts/how-raw-sockets-behave-in-different-systems/][How raw sockets behave differently in macOS and Linux | Swagnik's blog]]
- [ ] IP
  - [ ] [[https://biriukov.dev/docs/resolver-dual-stack-application/0-sre-should-know-about-gnu-linux-resolvers-and-dual-stack-applications/][What every SRE should know about GNU/Linux resolvers and Dual-Stack applications | Viacheslav Biriukov]]
- [ ] TCP
  - [ ] [[https://linuxjournal.rubdos.be/ljarchive/LJ/298/12538.html][Linux TCP SO_REUSEPORT: Usage and Implementation]]
  - [ ] [[https://jvns.ca/blog/2015/11/21/why-you-should-understand-a-little-about-tcp/][Why you should understand (a little) about TCP]]
  - [ ] [[https://hpbn.co/building-blocks-of-tcp/#slow-start][Networking 101: Building Blocks of TCP - High Performance Browser Networking (O'Reilly)]]
    - https://github.com/ritiksahni/cwnd-demo
  - [ ] [[https://news.ycombinator.com/item?id=41685533][Why TCP needs 3 handshakes | Hacker News]]
  - [ ] [[https://blog.cloudflare.com/the-quantum-state-of-a-tcp-port/][The quantum state of a TCP port]]
  - [ ] [[https://news.ycombinator.com/item?id=36111683][Connect() ‚Äì a new API for creating TCP sockets from Cloudflare Workers]]
    - [ ] [[https://blog.cloudflare.com/linux-transport-protocol-port-selection-performance][connect() - why are you so slow?]]
  - [ ] [[https://daniel.haxx.se/blog/2024/08/14/slow-tcp-connect-on-windows/][slow TCP connect on Windows | daniel.haxx.se]]
  - [ ] [[https://news.ycombinator.com/item?id=24785405][40 Milliseconds of latency that just would not go away | Hacker News]]
  - [ ] [[https://www.youtube.com/watch?v=ck4WvYM9V4c][Linux Networking: How The Kernel Handles A TCP Connection - YouTube]]
  - [ ] [[https://news.ycombinator.com/item?id=37466475][Unix Domain Sockets vs Loopback TCP Sockets (2014) | Hacker News]]
  - [ ] [[https://krisnova.net/posts/network-instrumentation/][Network Instrumentation and TCP File Descriptor Hijacking]]
  - [ ] [[https://idea.popcount.org/2014-04-03-bind-before-connect/][Bind before connect ‚Äî Idea of the day]]
  - [ ] [[https://brooker.co.za/blog/2024/05/09/nagle.html][It's always TCP_NODELAY. Every damn time. - Marc's Blog]]
  - [ ] [[http://sites.inka.de/~bigred/devel/tcp-tcp.html][Why TCP Over TCP Is A Bad Idea]]
  - [ ] [[https://www.snellman.net/blog/archive/2014-11-11-tcp-is-harder-than-it-looks.html][TCP is harder than it looks]]
  - [ ] [[https://news.ycombinator.com/item?id=23177607][What developers should know about TCP | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=41291470][Optimizing global message transit latency: a journey through TCP configuration | Hacker News]]
  - [ ] The infamous falsehood article
    - [ ] [[https://news.ycombinator.com/item?id=41541770][Falsehoods programmers believe about TCP | Hacker News]]
    - [ ] [[https://lobste.rs/s/w1llcv/falsehoods_programmers_believe_about][Falsehoods programmers believe about TCP | Lobsters]]
      - Answers the TCP packet or no question
- [ ] UDP
  - [ ] [[https://news.ycombinator.com/item?id=40766079][Timeliness without datagrams using QUIC | Hacker News]]
  - [ ] [[https://tailscale.com/blog/quic-udp-throughput/][Increasing QUIC and UDP throughput over Tailscale ¬∑ Tailscale]]
  - [ ] [[https://lobste.rs/s/vcupzx/never_use_datagrams][Never* use Datagrams | Lobsters]]
  - [ ] [[https://web.archive.org/web/20240823055652/https://pboyd.io/posts/udp/][What is UDP? - pboyd.io]]
- [ ] Userspace/Custom stack
  - [ ] [[https://news.ycombinator.com/item?id=41461850][LwIP ‚Äì Lightweight IP Stack | Hacker News]]
  - [ ] [[https://friendshipcastle.zip/blog/glaceon][How I learned to stop worrying and love userspace networking]]
- [ ] Go & Networking
  - Go doesn't use Nagle‚Äôs algorithm it seems
  - [ ] [[https://toonk.io/sending-network-packets-in-go/index.html][High-Speed Packet Transmission in Go: From net.Dial to AF_XDP]]
  - [ ] [[https://swagnik.netlify.app/posts/it-works-although-it-makes-no-sense/?s=35][It works although it makes no sense | Swagnik's blog]]
  - [ ] [[https://lobste.rs/s/5zjwgs/golang_is_evil_on_shitty_networks_2022][Golang is evil on shitty networks (2022) | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=40586757][We improved the performance of a userspace TCP stack in Go | Hacker News]]
- [ ] [[https://zguide.zeromq.org/][Introduction | √òMQ - The Guide]]
- [ ] [[https://blog.cloudflare.com/virtual-networking-101-understanding-tap/][Virtual networking 101: Bridging the gap to understanding TAP]] üåü
- [ ] [[https://news.ycombinator.com/item?id=42105190][I sent an Ethernet packet | Hacker News]]
** RPC
- [ ] [[https://prakhar.me/articles/understanding-rpcs/][Understanding RPCs - Part I - cat /dev/random]]
- [ ] [[https://alexanderell.is/posts/rpc-from-scratch/][Writing an RPC From Scratch ¬∑ Caffeinspiration]]
- [-] [[https://lobste.rs/s/htwjza/connect_better_grpc][Connect: A better gRPC | Lobsters]]
- [ ] [[https://lobste.rs/s/3bsg5h/grpc_best_practices][gRPC - Best Practices | Lobsters]]
* üèú HB16: Some Art & Craft is nice
- [ ] Learn MagicaVoxel
- [ ] [[https://lospec.com/][Pixel Art resources]]
- [ ] Paper Engineering
  - [ ] Making Pop-Up Cards for Beginners (A course by Julia Yus , Graphic Designer)
  - [ ] [[https://juliayus.com/share/][Share ‚Äì Julia Yus]] (Resources)
- [ ] Draw
  - [ ] [[https://www.sketchlikeanarchitect.com/everything][EVERYTHING ‚Äî Sketch Like an Architect]]
  - [ ] [[https://drawabox.com/][Drawabox | A free, exercise based approach to learning the fundamentals of drawing]]
- [ ] Guitar & Music
  - [ ] [[https://www.youtube.com/watch?v=VwSBtuWkhiA][The guitar fretboard MAP - YouTube]]  : Mike George
  - [ ] https://shittyrecording.studio/
  - [ ] https://learningmusic.ableton.com/
  - [ ] https://glicol.org/
  - [ ] [[https://news.ycombinator.com/item?id=38407780][Show HN: A game to memorize scale degrees on the guitar fretboard | Hacker News]]
- [ ] Woodwork get tools and find a mentor
* HB:23: Electronics & Hardware
** Theory
- [[https://www.youtube.com/playlist?list=PLyG2VxFPjWqDDbo1FKEvzMvj33fI22weJ][Digital Logic by Jack Buffington - YouTube]]
- [[https://ocw.mit.edu/courses/res-6-007-signals-and-systems-spring-2011/pages/introduction/][Introduction | Signals and Systems | Electrical Engineering and Computer Science | MIT OpenCourseWare]]
- [[https://www.amazon.in/Practical-Electronics-Inventors-Fourth-Scherz/dp/1259587541][Practical Electronics for Inventors : Scherz, Paul, Monk, Simon: Amazon.in: Books]]
  - [[https://www.youtube.com/watch?v=9IOTAZD4OaM][The Holy Grail of Electronics | Practical Electronics for Inventors - YouTube]]
** Electronics basics
- [[https://news.ycombinator.com/item?id=39656673][Ask HN: How to seriously learn analog electronics? | Hacker News]]
- [[https://www.youtube.com/watch?v=X_crwFuPht4][An intuitive approach for understanding electricity - YouTube]]
- [[https://news.ycombinator.com/item?id=38748370][The Art of Electronics (2015) | Hacker News]]
- [[https://news.ycombinator.com/item?id=40750506][Why does current flow the opposite way from the electrons? | Hacker News]]
- [[https://news.ycombinator.com/item?id=40576132][Why do electronic components have such odd values? (2021) | Hacker News]]
- [[https://lobste.rs/s/ttgjcu/electronics_test_gear_on_cheap][Electronics Test Gear on the Cheap | Lobsters]]
- [[https://news.ycombinator.com/item?id=42816133][Desmos Animated Graphing Calculator | Hacker News]] üåü
** Micro-controller
- [[https://github.com/cpq/bare-metal-programming-guide][GitHub - cpq/bare-metal-programming-guide: A bare metal programming guide (ARM microcontrollers)]] üåü
- [[https://opencircuitsbook.com/][Open Circuits]]
- [[https://news.ycombinator.com/item?id=39611111][Embedded Swift on the Raspberry Pi Pico | Hacker News]]
- [[https://github.com/eleciawhite/making-embedded-systems][GitHub - eleciawhite/making-embedded-systems: A repository partner with Making Embedded Systems, 2nd edition]]
** Radio & Wireless
- [ ] Bluetooth
  - [ ] [[https://learn.sparkfun.com/tutorials/bluetooth-basics/how-bluetooth-works][Bluetooth Basics - SparkFun Learn]]
  - [ ] [[https://www.youtube.com/watch?v=DPGiPhr8UW8][Bluetooth Low Energy on All the Things - YouTube]]
  - [ ] [[https://news.ycombinator.com/item?id=41268832][Building a GATT Server on Pi Pico W | Hacker News]]
- [ ] Radio
  - [ ] [[https://news.ycombinator.com/item?id=39813679][Radios, how do they work? | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=39822468][Broadcasting LoRa packets wihout a radio [video] | Hacker News]]
  - [ ] [[https://lobste.rs/s/pv56wu/fifty_things_you_can_do_with_software][Fifty Things you can do with a Software Defined Radio | Lobsters]]
  - [ ] [[https://news.ycombinator.com/item?id=41471355][The Beginnings of FM Radio Broadcasting (2018) | Hacker News]]
  - [ ] [[https://www.anfractuosity.com/projects/ultrasound-networking/][Ultrasound Networking | Anfractuosity | Still waiting on the daybreak, its shadows in my mind]]
  - [ ] [[https://news.ycombinator.com/item?id=42344819][Ham Radio All-in-One-Cable | Hacker News]]
  - [ ] [[https://news.ycombinator.com/item?id=42284758][A transport protocol's view of Starlink | Hacker News]]
  - [ ] [[https://blog.porucha.net/2024/pico-sdr/index.html][Pico SDR]]
** Hardware Hacking
- [[https://www.hardbreak.wiki/][HardBreak - Hardware Hacking Wiki | HardBreak]] üåü
  - https://news.ycombinator.com/item?id=42672821 (Follow some of the advice and playlist in this thread)
** Robotics
- [ ] [[https://lobste.rs/s/byu3hv/hobby_robotics_resources][Hobby robotics resources | Lobsters]]
- [ ] [[https://news.ycombinator.com/item?id=42382357][Making my first robot as a software engineer | Hacker News]]
- [ ] [[https://dspace.mit.edu/handle/1721.1/6432][A Robust Layered Control System for a Mobile Robot]] (Paper)
- [ ] [[https://news.ycombinator.com/item?id=42744106][Robotics and ROS 2 Essentials | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=42633805][Robotics 101 at UMich: Applied numerical linear algebra as intro linear algebra | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=41070703][Ask HN: Best way to learn robotics with a 10 year old? | Hacker News]]
- [ ] [[https://news.ycombinator.com/item?id=35441180][Ask HN: Courses/textbook recommendations for studying robotics? | Hacker News]]
** Prototyping/Fab
- [[https://news.ycombinator.com/item?id=42016597][Make It Yourself | Hacker News]] üåü
- [[https://news.ycombinator.com/item?id=42051968][Hacker Fab | Hacker News]]
- [[https://news.ycombinator.com/item?id=42398651][CADing and 3D printing like a software engineer | Hacker News]]
- [[https://www.youtube.com/watch?app=desktop&v=xMP_AfiNlX4][Building Prototypes Dan Gelbart part 1 of 18 Introduction - YouTube]]
- [[https://news.ycombinator.com/item?id=42803822][Show HN: 3D printing giant things with a Python jigsaw generator | Hacker News]]
- [[http://fab.cba.mit.edu/classes/MAS.863/][HTMAA 2023]] (How To Make (almost) Anything MIT) üåü
