#+HUGO_SECTION: docs/tools
#+HTML_CONTAINER: div
#+HTML_CONTAINER_CLASS: smol-table
#+hugo_paired_shortcodes: lft coolinks
#+TITLE: Primary tool-chest

My dotfiles are currently private, but they contain [[https://github.com/geekodour/x/tree/main/.config/fish/functions][my fish functions]](aliases), [[https://github.com/geekodour/x/tree/main/.config/doom/snippets][my yasnippets]] and [[https://cheats.geekodour.org/][cheats]]

* General development
#+begin_lft
- Online sandboxes: [[https://codesandbox.io/s/][CodeSandbox]], [[https://stackblitz.com/][StackBlitz]], [[https://replit.com/][Replit]], [[https://glitch.com/][Glitch]]
- [[https://lobste.rs/s/dfmiko/using_github_copilot_for_unit_testing][Using AI tools]] for [[https://lobste.rs/s/iualxr/ai_enhanced_development_makes_me_more][development]].
- Checking how [[https://golang.testcontainers.org/][test containers]] and [[https://containers.dev/][dev containers]] compare to my LXD workflow
- I think I want to run [[https://github.com/Granulate/gprofiler][gprofiler]] on my machine
- Re-start OSS contributions, start maintaining some projects [[https://github.com/jubalh/awesome-package-maintainer][and packages]] of interest.
- I am planning to write some aliases and function wrapper around [[https://img.ly/blog/ultimate-guide-to-ffmpeg/][ffmpeg]] and imagemagick for regular stuff. Most probably there are good tools out there, have to check.
#+end_lft
#+begin_coolinks
- Music: [[https://www.lofi.cafe/][lofi.cafe]] | [[https://earth.fm][earth.fm]] | [[https://daily.threesixfive.shop/][threesixfive]] | [[http://radio.garden/visit/jaipur/QSlnmGmG][Radio Garden]] | [[https://www.my90stv.com/][90's TV]] |
 [[https://relax.five.sh/][relax//five]]
- Debugging: [[https://godbolt.org/][godbolt]] | [[https://gchq.github.io/CyberChef/][CyberChef]] | [[https://explainshell.com/][explainshell]] | [[https://astexplorer.net/][AST explorer]] | [[https://charsetnormalizerweb-ousret.vercel.app/][Text Encoding Detect]]
- Info: [[https://www.cpu-world.com][CPU info]] | [[https://www.techpowerup.com/gpu-specs/][GPU info]] | [[https://tosdr.org/][tosdr]] | [[https://githistory.xyz/][Git History]] | [[https://w3techs.com/technologies][W3Survey]]
- Reference: [[/backupsites/hyperpolyglot.org/][hyperpolyglot]] | [[https://wiki.archlinux.org/title/core_utilities][coreutils]] | [[https://www.mankier.com/][ManKier]] | [[https://sysctl-explorer.net/][Sysctl Explorer]] | [[https://gitlab.com/procps-ng/procps][procps-ng]]
- Conversion: [[https://onlinelisttools.com/][onlinelisttools]] | [[https://squoosh.app/][Squoosh]] | [[https://transform.tools/][transform.tools]] | [[https://barcode.tec-it.com/en][Barcode Generator]]
#+end_coolinks
Now how I do development has varied over the years. But I am constantly updating it. This section is a scratchpad area for links/notes about current or probable future workflow.

** Editing text
- 95% doom emacs(heavily customized), 5% neovim
- I think I spent half of my year last year fighting with emacs, had me learn little bit of elisp and I am not sure if it was worth it, but if there's one thing I cannot live without, it has to be =org-mode=. helluvadrug.
- For documentation lookup inside emacs, =eldoc= (using =elglot=), =M-x man=, =dev-docs= custom bindings for =eww=.
- When I quickly need to check the contents of a repo, I use [[https://github1s.com/][GitHub1s]], pretty neat stuff.

** Interface and dependencies
- =fish= is my shell, have a love hate relationship ngl.
- =pacman= and =paru= mostly have me covered
- For different versions of stuff, I use =asdf= + =direnv=. I really like the global, local flexibility that =asdf= gives.
- For virtual environments, I use =LXD= system containers with a custom cloud-init script. It's pretty neat. Thanks to the co-workers at my last workplace! (See my [[https://mogoz.geekodour.org/search/?query=lxd][notes on lxd]])

* Domain specific
** Web
#+begin_lft
- Experimenting w websockets, [[https://pe.pion.ly/][WebRTC]], WebAssembly, [[https://github.com/GoogleChromeLabs/comlink][webworkers]] other web engineering fun.
- Experimenting w serverless functions (Mostly cf workers)
- Really grokking HTTP, Headers, Cache, Cookies and Sessions
- Getting better at Typescript
- Experiment w [[https://news.ycombinator.com/item?id=33218439][htmx]], alpine.js(more) and [[https://svelte.dev/][svelte]](not so much).
- Also want to try out [[https://thinkingelixir.com/petal-stack-in-elixir/][Elixir, Phoenix and LiveView.]]
- Explore more in web security side of things
#+end_lft
#+begin_coolinks
- Info: [[https://caniuse.com/][caniuse]] | [[https://hyperglot.rosettatype.com/][rosettatype/hyperglot]] | [[https://storage.googleapis.com/demos.webmproject.org/webp/cmp/index.html][image codec]]
- CSS & Animations: [[https://css-tricks.com/almanac/][Almanac]] | [[https://animista.net/play/basic/scale-up][Animista]] | [[https://svgartista.net/][SVG Artista]] | [[https://fffuel.co/sssvg/][SVG Reference]]
- Helpers: [[https://generator.jspm.io][Import Map]], [[https://httpbin.org/#/][httpbin]]
- Better no-code: [[https://build.mmm.page/][mmm.page]]
#+end_coolinks

- Everything I learn here becomes obsolete in about six months
- But I like the web and I want to build on it too
- I am too bad at anything involving CSS so, tailwindcss is my best friend here.
- I once tried doing react+vite+storybook with all the right config and other stuff, later I felt that I don't want to be worrying about a static site so much. So static sites or semi-static sites are basically an org-mode export or a next.js site for me now.
- I think I learned react about 3 times and everytime, the documentation gets overhauled(good thing). But the last time I learned react, I [[https://mogoz.geekodour.org/search/?query=react][took notes]].
- Don't ask me about framework preferences. I don't think I agree with myself here.
** Python
#+begin_lft
- Need to check [[https://github.com/tiangolo/fastapi][fastapi]] has to offer, same w [[https://streamlit.io/][streamlit]] and gradio
#+end_lft
- I use asdf + poetry for all my python virtual env setups. Even if it's a project with a =requirements.txt=, I use poetry to create a venv there and pip install on it. I don't think i'll ever understand python virtual environments completely so I am going for the path of least resistance
- Understanding python's [[https://mogoz.geekodour.org/posts/20221231140207-python/#imports][import system]] has done me wonders
- =pudb= with =ipython= is pretty neat for debugging
- I don't have any linting, formatter preference honestly I just use the defaults that work with my editor setup. If any project needs specific style, the CI/CD system should catch it.
- Once [[https://joblib.readthedocs.io/en/latest/index.html#][joblib]] was very useful to me but I can't exactly remember when
** Golang
- Haven't done anything in a while
** UI & Interface
#+begin_lft
- Check out GUI stuff: [[https://github.com/wailsapp/wails][wailsapp/wails]], [[https://tauri.app/][tauri]], [[https://github.com/fyne-io/fyne][fyne]], [[https://github.com/ocornut/imgui][imgui]], [[https://github.com/lvgl/lvgl][lvgl]]
- CLI stuff: [[https://github.com/ggerganov/imtui][imtui]], [[https://www.textualize.io/][Textualize]], [[https://github.com/rivo/tview/][tview]]
- Get started w creative programming, see [[https://mogoz.geekodour.org/posts/20230326125239-creative_programming/][notes]]. Think it'll be p5 for the start.
- Create explorable explanations, check [[https://idyll-lang.org/docs][Idyll]]. also want to check [[https://cindyjs.org/][cindy]], [[https://brm.io/matter-js/][matter.js]] and [[https://github.com/3b1b/manim][manim]], [[https://github.com/unconed/mathbox][mathbox]], [[https://mafs.dev/][mafs]]
- Check hypercard [[https://beyondloom.com/decker/index.html][related]] projects
#+end_lft
#+begin_coolinks
- Showcases: [[https://explorabl.es/][Explorable Explanations]] | [[https://github.com/blob42/awesome-explorables][awesome-explorables]]
- Quick tools: [[https://drawingbots.net/][drawingbots]] | [[https://spacetypegenerator.com/][SPACE TYPE]]
- Comparisons: [[https://benchmarks.slaylines.io/pixi.html][Web Render Wrappers]]
#+end_coolinks
- So basically I am interested in how we can better interact w
** Systems
#+begin_lft
- I don't know many c/cpp libraries but would try to use [[https://github.com/zpl-c/zpl][zpl-c/zpl]] next time I get an opportunity to work on something similar.
- Check if I can write scripts faster with [[https://github.com/google/zx][google/zx]]
#+end_lft
I honestly have never written a non-trival c program from scratch but want to.
** AI/ML experiments
#+begin_lft
- Properly checkout [[https://huggingface.co/][Huggingface]] and what can I do with [[https://huggingface.co/autotrain][auto]] [[https://github.com/autogluon/autogluon][ML?]]
- [[https://github.com/jerryjliu/gpt_index][jerryjliu/gpt_index]], [[https://github.com/hwchase17/langchain][hwchase17/langchain]], [[https://news.ycombinator.com/item?id=35349608][gpt4all]], [[https://github.com/oobabooga/text-generation-webui][oobabooga/text-generation-webui]]
- whisper.cpp (also [[https://github.com/suno-ai/bark][bark]]), llma.cpp et al, [[https://lobste.rs/s/prfiun/web_llm_runs_vicuna_7b_large_language][Web LLM]] [[https://github.com/mlc-ai/web-stable-diffusion][looks]] pretty sick.
- [[https://github.com/antimatter15/alpaca.cpp][antimatter15/alpaca.cpp]], [[https://github.com/tloen/alpaca-lora][alpaca-lora]] fine tuning
- What's up with [[https://github.com/PaddlePaddle/PaddleOCR][paddle]] [[https://github.com/PaddlePaddle/PaddleGAN][paddle]] and [[https://huggingface.co/docs/transformers/model_doc/markuplm][other]] [[https://github.com/deepdoctection/deepdoctection][document]] [[https://github.com/mindee/doctr][extraction]] stuff.
#+end_lft
- When SD came out, played a lot with [[https://github.com/AUTOMATIC1111/stable-diffusion-webui][AUTOMATIC1111]]

* Data
** Database
#+begin_lft
- Experimenting more with: SQLite (and ecosystem), Postgres (and ecosystem), Clickhouse, DuckDB, Redis
- Go through the excellent MySQL intermediate series by PlanetScale
- Have been hearing things about [[https://prql-lang.org/][PRQL]]
#+end_lft
- I don't play with DBs on the daily but plan to.
** Data Engineering
#+begin_lft
- Checking [[https://github.com/centerofci/mathesar][centerofci/mathesar]]
- [[https://stackoverflow.com/questions/2054364/firefox-how-do-i-list-installed-extensions-and-identify-them-in-a-list][Getting]] [[https://lzone.de/cheat-sheet/jq][better]] w [[https://unix.stackexchange.com/questions/312697/merge-jq-output-into-a-comma-separated-string][jq]] and [[https://blog.jpalardy.com/posts/skip-grep-use-awk/][check]] [[https://github.com/dbohdan/structured-text-tools][other]] [[https://github.com/learnbyexample/Command-line-text-processing][tools]] [[https://github.com/adrianlarion/useful-sed][that]] [[https://github.com/adrianlarion/simple-awk][do]] [[https://matt.might.net/articles/sculpting-text/][CLI text]] processing.
- Experiment w small scale CLI data processing tools like, [[https://github.com/dinedal/textql][textql]], [[https://github.com/PaulJuliusMartinez/jless][jless]], [[https://github.com/noahgorstein/jqp][jqp]], [[https://github.com/antonmedv/fx][fx]], [[https://github.com/multiprocessio/dsq][dsq]], [[https://github.com/johnkerl/miller][miller]] and maybe write a comparison post. They are so many!
#+end_lft
- ~jq~ w ~ijq~ has been useful in the past. I think there are 2 totally different projects named ~ijq~, it's the one that I have installed. ~dasel~ was also pretty neat once.
** Data Analysis/Viz
#+begin_lft
- Try viz tools: D3, [[https://microsoft.github.io/SandDance/][SandDance]], [[https://observablehq.com/plot/][ObservablePlots]], [[https://vega.github.io/vega/][Vega]], [[https://github.com/plouc/nivo][plouc/nivo]]
- Try viz platforms: [[https://www.datawrapper.de/][Datawrapper]], [[https://www.desmos.com/][Desmos]], [[https://observablehq.com/][ObservableHQ]]
- Try analysis tools: [[https://github.com/facebookresearch/Kats][Kats]]
- CLI [[https://github.com/devottys/darkdraw][stuff]] with [[https://www.visidata.org/][visidata]]
#+end_lft
#+begin_coolinks
- Showcases: [[https://textvis.lnu.se/][Visualization Browser]] | [[http://flowingmedia.com/gallery.html][Flowing Media]]
#+end_coolinks
- I use Airtable extensively as my data-store for things. I'll probably move to something else if I ever hit limits.
- Occasionally I'd use Datasette but I want to use more of it. esp the sqlite-utils stuff looks interesting.
** Archiving and Scraping
#+begin_lft
- I have some [[https://mogoz.geekodour.org/posts/20230115032823-scraping/][Scraping]] notes that I have to go through
#+end_lft
* Infra & Security
** Hosting stuff
#+begin_lft
- Play w [[https://mogoz.geekodour.org/posts/20230419105440-file_sharing/][some file sharing]] tools
- Play w [[https://mogoz.geekodour.org/posts/20230429192853-tunneling/][tunneling stuff]]
- I plan to manage my personal infra via nomad so need to check that out.
#+end_lft
- Mostly use github and bitbucket for hosting code repositories
- Netlify or Vercel for semi-static sites
- Have not got around selfhosting stuff yet, except locally on my pi/laptop when it makes sense.
** Infrastructure Management
#+begin_lft
- Check [[https://news.ycombinator.com/item?id=35749594][sipcalc]]
- Check out [[https://github.com/moul/assh][assh]] for managing ssh stuff
- Haven't touched k8s in a while, [[https://github.com/ahmetb/kubectx][kubectx & kubens]], [[https://github.com/derailed/k9s][k9s]], [[https://k8slens.dev/][lens]]
- Play w these, think useful [[https://github.com/robscott/kube-capacity][k8s-capacity]], [[https://github.com/nicolaka/netshoot][netshoot]], [[https://github.com/appvia/krane][krane]]
- Hit my stuff w [[https://github.com/grafana/k6][k6]]
#+end_lft
#+begin_coolinks
- Investigation: [[https://pimeyes.com/en][PimEyes]]
- Reference: [[https://gtfobins.github.io/][GTFOBins]]
- Visual: [[https://cidr.xyz/][CIDR.xyz]] | [[https://copy.sh/v86/][Virtual x86 WASM]]
#+end_coolinks
- Ansible and Github actions are enough for my regular automation
- I haven't fiddled with infra stuff in a while but it's always a combination of so many things. Shell scripts, custom programs, infra tools, external tools and so on. I plan to streamline this process eventually.
** Security, Network and Tinkering
#+begin_lft
- Experiment w [[https://ghidra-sre.org/][ghidra]], see [[https://mogoz.geekodour.org/posts/20230418153328-reverse_engineering/][notes]]
- Check [[https://github.com/cilium/pwru][cilium/pwru]] and [[https://github.com/GyulyVGC/sniffnet][sniffnet]], also check if [[https://github.com/Nudin/iptable_vis][nudin/iptable_vis]] does what it says because it'll be so cool.
- These two identification tools look juicy [[https://github.com/bee-san/pyWhat][pywhat]], [[https://github.com/Ciphey/Ciphey][ciphy]], [[https://github.com/onekey-sec/unblob][unblob]].
#+end_lft
** Troubleshooting
- I have a dedicated page called [[file:plumber_manual.org::*General][Plumber Manual]] for this.

* Non-dev
** Planning/Brainstorming/Curation
#+begin_lft
- Try out some [[https://natto.dev][weird]] [[https://markwhen.com/][mindmapping]] like tools.
- Experiment [[https://johnwickerson.wordpress.com/2019/08/08/block-diagrams/][w]] [[https://sketch.systems/][idea]] [[https://stately.ai/][drawing]] [[https://xosh.org/text-to-diagram/][tools]], [[https://mermaid.js.org/][Mermaid]] being [[https://github.com/mingrammer/diagrams][talked]] about a lot.
#+end_lft
#+begin_coolinks
- Mindmapping: [[https://kinopio.club/][Kinopio]]
- Diagramming: [[https://swimlanes.io/][Swimlanes]]
#+end_coolinks
- =org-mode= supremacy, notion and various markdown wiki veteran.
- I have a page dedicated to [[file:o.org::*Notetaking][notetaking]]
- Github issues and Linear for project progress tracking.
- Key is to think how to think about the specific problem and choose tools based on that. Meta.
** Communication and Discussions
#+begin_coolinks
- Translations: [[https://www.words2emoji.com/][Words2Emoji]]
- Discussions: [[https://subredditstats.com/subreddit-user-overlaps/slatestarcodex][subredditstats]]
#+end_coolinks
- I have a [[file:personal_lists.org::*Communities][communities]] page but I have serious [[http://www.catb.org/esr/faqs/smart-questions.html][problems]] communicating my thoughts, but that's another story.
- Chat
  - Matrix: Element as the backend, cinny as the chat ui
  - IRC: [[https://thelounge.chat/][The Lounge]] runs locally on my pi
  - Telegram, WhatsApp, Signal, Discord
- Email
  - Gmail, Zoho Mail (K9, Delta Chat) w [[https://simplelogin.io/][SimpleLogin]]
** Research
#+begin_lft
- I've been planning to setup a [[https://www.reddit.com/r/emacs/comments/vt0otx/using_the_power_of_zotero_in_emacs_orgmode_to/][nice zotero & org-ref workflow]] but I am not an academic and I am not exactly sure how things will play out.
#+end_lft

* Misc
** Art/Design
#+begin_lft
- Experiment more with MagicaVoxel
- Experiment w pixel editors, [[https://github.com/cloudhead/rx][rx]], [[https://github.com/rgab1508/PixelCraft][pixelcraft]], [[https://github.com/piskelapp/piskel][piskel]], [[https://github.com/aseprite/aseprite][aseprite]]
- Well, video editors. Long story. Anyway need to check [[https://mifi.no/losslesscut/][LosslessCut]], [[https://runwayml.com/][Runway]], [[https://store.steampowered.com/app/1840/Source_Filmmaker/][Source Filmmaker]], [[https://github.com/remotion-dev/remotion][remotion]]
- Try creating some posters with [[https://github.com/sharkdp/binocle][sharkdp/binocle]] and do some [[https://github.com/deepfakes/faceswap][weird]] shit
#+end_lft
I wants to do art/design but not at the moment. I also wanted to make weird game videos using assets etc (Neel, if you ever read this, yeah still at it). But I might have to pause that for a while as it does not directly feed into my primary goals but I definitely want to make time for it.
** Mobile experiments
#+begin_lft
- Some emulation tools I want to try, [[https://github.com/remote-android/redroid-doc][remote-android/redroid-doc]], [[https://news.ycombinator.com/item?id=35749366][scrcpy]]
- I want to check some apps, see if [[https://github.com/androguard/androguard][this helps]]
#+end_lft
* Generated
#+attr_html: :class book-hint info
#+begin_quote
These following lists are generated [[https://github.com/geekodour/systemfiles/][here]] and not in sync with my system at all times.
#+end_quote
** Firefox Extensions
| Name | Description |
#+INCLUDE: ../assets/org-includes/ff_addons.org
** Arch Official Packages
| Name | Description |
#+INCLUDE: ../assets/org-includes/official_packages.org
** Arch AUR Packages
| Name | Description |
#+INCLUDE: ../assets/org-includes/aur_packages.org
** Mobile Apps
Absolute dump. I use the [[https://f-droid.org/packages/de.onyxbits.listmyapps/][List My Apps]] app to generate the csv, the csv is then uploaded to dropbox from where airtable pulls it. When generating the org file my custom script fetches from airtable. I did not want this to be a rube goldberg machine but there doesn't seem to be a very clean way out in the way I need it at the moment.

#+INCLUDE: ../assets/org-includes/mobile_apps.org
** Datasets
#+begin_lft
- Need to read [[https://news.ycombinator.com/item?id=34558054][this]]
#+end_lft
#+begin_coolinks
- Hubs: [[https://www.reddit.com/r/datasets/][/r/datasets]] | [[https://ourworldindata.org/][Our World in Data]] | [[https://data.worldbank.org/][WBO Data]] | [[https://github.com/awesomedata/awesome-public-datasets][awesomedata/awesome-public-datasets]] | [[https://www.kaggle.com/datasets][kaggle]] | [[https://data.humdata.org/][HDX]] | [[https://aws.amazon.com/data-exchange/][AWS DE]]
- India specific: [[https://data.gov.in/][OGD]]
#+end_coolinks

#+INCLUDE: ../assets/org-includes/datasets.org
